// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.Designer
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Designer_Lab_Items_Conversation_Factor")]
    public partial class Designer_Lab_Items_Conversation_FactorFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "US656001_ConversationFactorZero.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Designer_Lab_Items_Conversation_Factor", "\tTest Summary:\r\n\t1. When the ConversationFactor is Zero while importing the Lab D" +
                    "ictionary\r\n\t System should throw error.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T01_When I Login to Designer then I see the Designer home page")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US65600.1")]
        public virtual void T01_WhenILoginToDesignerThenISeeTheDesignerHomePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T01_When I Login to Designer then I see the Designer home page", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US65600.1"});
#line 7
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 testRunner.Given("I logged in to Designer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.Then("I see Designer Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T02_Lab Dictionary Import file validation")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US65600.2")]
        public virtual void T02_LabDictionaryImportFileValidation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T02_Lab Dictionary Import file validation", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US65600.2"});
#line 12
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 13
 testRunner.When("I click on the Link \"Manage Labs\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
 testRunner.And("I Click \"Add Lab Dictionary\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.And("enter LabDictionaryName as \"LabDict1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.And("enter LabDictionaryDesc as \"LabDictDesc1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
 testRunner.And("I click on the Lab Dict Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("I click on the Link \"LabDict1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.And("Click on the image \"Import Lab Dictionary\" link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.And("Enter Label as \"LabDict\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.And("I upload a labDict file \"DataLabsEDC_LabDictionary_LabDictionary_PS1_V12.xlsx\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.Then("I should see error message \"import lab dictionary errors\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T03_Lab Dictionary Import file validation")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US65600.3")]
        public virtual void T03_LabDictionaryImportFileValidation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T03_Lab Dictionary Import file validation", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US65600.3"});
#line 25
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 26
 testRunner.When("I click on the error link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "WorkSheet",
                        "Row",
                        "Column",
                        "Error"});
            table1.AddRow(new string[] {
                        "Conversion Factors",
                        "7",
                        "Conversion Factor",
                        "Conversion factor cannot be zero"});
            table1.AddRow(new string[] {
                        "Conversion Factors",
                        "8",
                        "Conversion Factor",
                        "Conversion factor cannot be zero"});
            table1.AddRow(new string[] {
                        "Conversion Factors",
                        "11",
                        "To Unit",
                        "Missing required fields"});
            table1.AddRow(new string[] {
                        "Conversion Factors",
                        "12",
                        "Conversion Factor",
                        "Missing required fields"});
            table1.AddRow(new string[] {
                        "Lab Tests",
                        "13",
                        "Lab Test Description, Lab Test Code",
                        "Missing required fields"});
#line 27
 testRunner.Then("I should get the below mentioned rows in the table", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T04_Lab Dictionary Import file validation")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US65600.4")]
        public virtual void T04_LabDictionaryImportFileValidation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T04_Lab Dictionary Import file validation", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US65600.4"});
#line 36
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 37
 testRunner.When("I select the Error Type \"Conversion factor cannot be zero\" from the drop down \"Er" +
                    "ror Type: \" for filtering", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
 testRunner.And("I click on the filter option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "WorkSheet",
                        "Row",
                        "Column",
                        "Error"});
            table2.AddRow(new string[] {
                        "Conversion Factors",
                        "7",
                        "Conversion Factor",
                        "Conversion factor cannot be zero"});
            table2.AddRow(new string[] {
                        "Conversion Factors",
                        "8",
                        "Conversion Factor",
                        "Conversion factor cannot be zero"});
#line 39
 testRunner.Then("I should get the below mentioned rows in the table", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T05_Lab Dictionary Import file validation")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US65600.5")]
        public virtual void T05_LabDictionaryImportFileValidation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T05_Lab Dictionary Import file validation", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US65600.5"});
#line 45
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 46
 testRunner.When("I Unselect the Error Type \"Conversion factor cannot be zero\" from the drop down \"" +
                    "Error Type: \" for filtering", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
 testRunner.And("I click on the filter option", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "WorkSheet",
                        "Row",
                        "Column",
                        "Error"});
            table3.AddRow(new string[] {
                        "Conversion Factors",
                        "7",
                        "Conversion Factor",
                        "Conversion factor cannot be zero"});
            table3.AddRow(new string[] {
                        "Conversion Factors",
                        "8",
                        "Conversion Factor",
                        "Conversion factor cannot be zero"});
            table3.AddRow(new string[] {
                        "Conversion Factors",
                        "11",
                        "To Unit",
                        "Missing required fields"});
            table3.AddRow(new string[] {
                        "Conversion Factors",
                        "12",
                        "Conversion Factor",
                        "Missing required fields"});
            table3.AddRow(new string[] {
                        "Lab Tests",
                        "13",
                        "Lab Test Description, Lab Test Code",
                        "Missing required fields"});
#line 48
 testRunner.Then("I should get the below mentioned rows in the table", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T06_Add New Lab Dictionary")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US65600.6")]
        public virtual void T06_AddNewLabDictionary()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T06_Add New Lab Dictionary", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US65600.6"});
#line 57
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 58
 testRunner.When("I click on the Home Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 59
 testRunner.And("I click on the Link \"Manage Labs\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.And("Click on the LabDict \"LabDict1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.And("Click on the image \"Import Lab Dictionary\" link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
 testRunner.And("Enter Label as \"LabDict1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.And("I upload a labDict file \"DataLabsEDC_LabDictionary_LabDictionary_PS1_V7.xlsx\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "LabTestName"});
            table4.AddRow(new string[] {
                        "01"});
#line 64
 testRunner.Then("I should see below lab tests in the table", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T07_Add New Lab Dictionary")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US66097.1")]
        public virtual void T07_AddNewLabDictionary()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T07_Add New Lab Dictionary", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US66097.1"});
#line 70
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 71
 testRunner.When("I click on the Home Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 72
 testRunner.And("I click on the Link \"Manage Labs\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.And("Click on the LabDict \"LabDict1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.And("Click on the image \"Import Lab Dictionary\" link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.And("Enter Label as \"LabDict1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
 testRunner.And("I upload a labDict file \"DataLabsEDC_LabDictionary_LabDictionary_PS1_V10.xlsx\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
 testRunner.Then("I should see error message \"import lab dictionary errors\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T08_Lab Dictionary Import file validation")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US65600.3")]
        public virtual void T08_LabDictionaryImportFileValidation()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T08_Lab Dictionary Import file validation", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US65600.3"});
#line 80
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 81
 testRunner.When("I click on the error link", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "WorkSheet",
                        "Row",
                        "Column",
                        "Error"});
            table5.AddRow(new string[] {
                        "Conversion Factors",
                        "8",
                        "Conversion Factor",
                        "Missing required fields"});
            table5.AddRow(new string[] {
                        "Conversion Factors",
                        "9",
                        "Conversion Factor",
                        "Conversion factor cannot be zero"});
            table5.AddRow(new string[] {
                        "Conversion Factors",
                        "10",
                        "Conversion Factor",
                        "Invalid data provided for a field"});
            table5.AddRow(new string[] {
                        "Conversion Factors",
                        "11",
                        "Conversion Factor",
                        "Invalid data provided for a field"});
            table5.AddRow(new string[] {
                        "Lab Tests",
                        "4",
                        "Precision",
                        "Invalid data provided for a field"});
            table5.AddRow(new string[] {
                        "Lab Tests",
                        "5",
                        "Precision",
                        "Invalid data provided for a field"});
            table5.AddRow(new string[] {
                        "Lab Tests",
                        "6",
                        "Precision",
                        "Invalid data provided for a field"});
            table5.AddRow(new string[] {
                        "Lab Tests",
                        "7",
                        "Precision",
                        "Invalid data provided for a field"});
            table5.AddRow(new string[] {
                        "Lab Tests",
                        "8",
                        "Precision",
                        "Invalid data provided for a field"});
            table5.AddRow(new string[] {
                        "Lab Tests",
                        "9",
                        "Precision",
                        "Invalid data provided for a field"});
#line 82
 testRunner.Then("I should get the below mentioned rows in the table", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

