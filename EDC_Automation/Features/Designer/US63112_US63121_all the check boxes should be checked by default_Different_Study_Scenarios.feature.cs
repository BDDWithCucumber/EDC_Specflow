// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.Designer
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("US63112_Different_Study_Scenarios")]
    public partial class US63112_Different_Study_ScenariosFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "US63112_US63121_all the check boxes should be checked by default_Different_Study_Scenarios.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "US63112_Different_Study_Scenarios", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T01_When I Login to Designer then I see the Designer home page")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US68936.1")]
        public virtual void T01_WhenILoginToDesignerThenISeeTheDesignerHomePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T01_When I Login to Designer then I see the Designer home page", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US68936.1"});
#line 4
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 testRunner.Given("I logged in to Designer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
 testRunner.Then("I see Designer Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T02_When I Import Study of 5.9 to Designer then I see message \"Study has been suc" +
            "cessfully added\" and status as complete")]
        public virtual void T02_WhenIImportStudyOf5_9ToDesignerThenISeeMessageStudyHasBeenSuccessfullyAddedAndStatusAsComplete()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T02_When I Import Study of 5.9 to Designer then I see message \"Study has been suc" +
                    "cessfully added\" and status as complete", null, ((string[])(null)));
#line 8
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
    testRunner.When("I click on the Home Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.And("I click on the Link \"Import Study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.And("I import a study \"Import_Study59_D_US63112_Target2.zip\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And("Enter the unique study name \"Import_Target59\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And("Select the sponsor name \"Sponsor1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And("I click on the Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.And("I see a confirmation dialog with title \"Confirmation\" and confirmation message \"L" +
                    "ab Dictionary mappings will be removed\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.And("I click Continue button on the confirmation dialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
 testRunner.And("I should see the notification \"Study has been successfully added\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("I click on the Link \"View Study Jobs\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.Then("I should see the status of the study \"Study Import (Import_Target59)\" in \"Complet" +
                    "e\" state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T04_When I Import Study of 5.9 to Designer then I see message \"Study has been suc" +
            "cessfully added\" and status as complete")]
        public virtual void T04_WhenIImportStudyOf5_9ToDesignerThenISeeMessageStudyHasBeenSuccessfullyAddedAndStatusAsComplete()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T04_When I Import Study of 5.9 to Designer then I see message \"Study has been suc" +
                    "cessfully added\" and status as complete", null, ((string[])(null)));
#line 34
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 35
    testRunner.When("I click on the Home Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
 testRunner.And("I click on the Link \"Import Study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.And("I import a study \"Import_Source59_US63112_Source3.zip\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.And("Enter the unique study name \"Import_Source59\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And("Select the sponsor name \"Sponsor1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("I click on the Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.And("I should see the notification \"Study has been successfully added\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.And("I click on the Link \"View Study Jobs\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.Then("I should see the status of the study \"Study Import (Import_Source59)\" in \"Complet" +
                    "e\" state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T05_When I Import Study of 5.9 to Designer then I see message \"Study has been suc" +
            "cessfully added\" and status as complete")]
        public virtual void T05_WhenIImportStudyOf5_9ToDesignerThenISeeMessageStudyHasBeenSuccessfullyAddedAndStatusAsComplete()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T05_When I Import Study of 5.9 to Designer then I see message \"Study has been suc" +
                    "cessfully added\" and status as complete", null, ((string[])(null)));
#line 47
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 48
    testRunner.When("I click on the Home Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 49
 testRunner.And("I click on the Link \"Import_Target59\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T06_When the user clicks on Forms tab then Forms page should be displayed")]
        public virtual void T06_WhenTheUserClicksOnFormsTabThenFormsPageShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T06_When the user clicks on Forms tab then Forms page should be displayed", null, ((string[])(null)));
#line 51
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 52
 testRunner.When("I click on the \"Forms\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 53
 testRunner.Then("I should see the \"Forms\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T07_When the user clicks on verify then the duplicate Domains should be highlited" +
            " in orange color")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.6")]
        public virtual void T07_WhenTheUserClicksOnVerifyThenTheDuplicateDomainsShouldBeHighlitedInOrangeColor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T07_When the user clicks on verify then the duplicate Domains should be highlited" +
                    " in orange color", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.2.6"});
#line 57
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 58
 testRunner.When("I click on the Link \"Create Form from Existing\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 59
 testRunner.And("I select the pop up having title \"Create Form from Existing\" and partial message " +
                    "\"Please select a Study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.And("I click on the Link \"Import_Source59\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.And("I click on the Link \"AutoBuild_Form03\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
 testRunner.And("I click on Verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForDomain"});
            table1.AddRow(new string[] {
                        "10",
                        "AB_Table04"});
#line 63
 testRunner.Then("I should see the Orange background color for the Domain", ((string)(null)), table1, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForDomain"});
            table2.AddRow(new string[] {
                        "10",
                        "AB_Table04"});
#line 66
 testRunner.And("the Domain textbox should be enabled for Domain", ((string)(null)), table2, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T08_When the user clicks on verify then the duplicate Domains should be highlited" +
            " in orange color")]
        public virtual void T08_WhenTheUserClicksOnVerifyThenTheDuplicateDomainsShouldBeHighlitedInOrangeColor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T08_When the user clicks on verify then the duplicate Domains should be highlited" +
                    " in orange color", null, ((string[])(null)));
#line 70
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row"});
            table3.AddRow(new string[] {
                        "19"});
#line 71
 testRunner.When("I expand the domain of row", ((string)(null)), table3, "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForDomain"});
            table4.AddRow(new string[] {
                        "19",
                        "AB_Table05"});
#line 74
 testRunner.Then("I should see the Orange background color for the Domain", ((string)(null)), table4, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForDomain"});
            table5.AddRow(new string[] {
                        "19",
                        "AB_Table05"});
#line 77
 testRunner.And("the Domain textbox should be enabled for Domain", ((string)(null)), table5, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T09_When the user clicks on verify then the duplicate Domains should be highlited" +
            " in orange color")]
        public virtual void T09_WhenTheUserClicksOnVerifyThenTheDuplicateDomainsShouldBeHighlitedInOrangeColor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T09_When the user clicks on verify then the duplicate Domains should be highlited" +
                    " in orange color", null, ((string[])(null)));
#line 81
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row"});
            table6.AddRow(new string[] {
                        "29"});
#line 82
 testRunner.When("I expand the domain of row", ((string)(null)), table6, "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForDomain"});
            table7.AddRow(new string[] {
                        "29",
                        "DEMO"});
#line 85
 testRunner.Then("I should see the Orange background color for the Domain", ((string)(null)), table7, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForDomain"});
            table8.AddRow(new string[] {
                        "29",
                        "DEMO"});
#line 88
 testRunner.And("the Domain textbox should be enabled for Domain", ((string)(null)), table8, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T10_When the Domain Item is duplicate then the Domain Item should be displayed in" +
            " orange color")]
        public virtual void T10_WhenTheDomainItemIsDuplicateThenTheDomainItemShouldBeDisplayedInOrangeColor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T10_When the Domain Item is duplicate then the Domain Item should be displayed in" +
                    " orange color", null, ((string[])(null)));
#line 92
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForDomainItem"});
            table9.AddRow(new string[] {
                        "11",
                        "CodeList1_Yes04"});
            table9.AddRow(new string[] {
                        "20",
                        "CodeList1_Yes05"});
            table9.AddRow(new string[] {
                        "30",
                        "JAPANSTY"});
#line 93
 testRunner.Then("I should see the Orange background color for the DomainItems", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T11_When the Domain Item is duplicate then the Domain Item Include checkbox shoul" +
            "d be disabled and unchecked")]
        public virtual void T11_WhenTheDomainItemIsDuplicateThenTheDomainItemIncludeCheckboxShouldBeDisabledAndUnchecked()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T11_When the Domain Item is duplicate then the Domain Item Include checkbox shoul" +
                    "d be disabled and unchecked", null, ((string[])(null)));
#line 99
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "IncludeForDomainItem",
                        "TargetForDomainItem"});
            table10.AddRow(new string[] {
                        "11",
                        "disabled",
                        "CodeList1_Yes04"});
            table10.AddRow(new string[] {
                        "20",
                        "disabled",
                        "CodeList1_Yes05"});
            table10.AddRow(new string[] {
                        "30",
                        "disabled",
                        "JAPANSTY"});
#line 100
 testRunner.Then("the Domain Include Checkbox should be unchecked and disabled for the below Domain" +
                    "Items", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T12_When the Domain Item is duplicate then the Codelist Include checkbox should b" +
            "e disabled and unchecked")]
        public virtual void T12_WhenTheDomainItemIsDuplicateThenTheCodelistIncludeCheckboxShouldBeDisabledAndUnchecked()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T12_When the Domain Item is duplicate then the Codelist Include checkbox should b" +
                    "e disabled and unchecked", null, ((string[])(null)));
#line 105
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "IncludeForCodelist",
                        "TargetForCodelist"});
            table11.AddRow(new string[] {
                        "11",
                        "disabled",
                        "AB_Gender"});
            table11.AddRow(new string[] {
                        "20",
                        "disabled",
                        "AB_Gender"});
            table11.AddRow(new string[] {
                        "30",
                        "disabled",
                        "NoOfPlayers"});
#line 106
 testRunner.Then("the CodeList Include Checkbox should be unchecked and disabled for the below Code" +
                    "lists", ((string)(null)), table11, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T13_When the Domain Item is duplicate then the Codelist textbox should be disable" +
            "d")]
        public virtual void T13_WhenTheDomainItemIsDuplicateThenTheCodelistTextboxShouldBeDisabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T13_When the Domain Item is duplicate then the Codelist textbox should be disable" +
                    "d", null, ((string[])(null)));
#line 111
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForCodelist"});
            table12.AddRow(new string[] {
                        "11",
                        "AB_Gender"});
            table12.AddRow(new string[] {
                        "20",
                        "AB_Gender"});
            table12.AddRow(new string[] {
                        "30",
                        "NoOfPlayers"});
#line 112
 testRunner.Then("the CodeList textbox is disabled for CodeList", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T14_When only the codelist is duplicate then the codelist should be highlighted i" +
            "n orange color")]
        public virtual void T14_WhenOnlyTheCodelistIsDuplicateThenTheCodelistShouldBeHighlightedInOrangeColor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T14_When only the codelist is duplicate then the codelist should be highlighted i" +
                    "n orange color", null, ((string[])(null)));
#line 118
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForCodelist"});
            table13.AddRow(new string[] {
                        "12",
                        "AB_Color"});
            table13.AddRow(new string[] {
                        "22",
                        "XYN"});
            table13.AddRow(new string[] {
                        "32",
                        "JPPAR"});
#line 119
 testRunner.Then("I should see the Orange background color for the codelists", ((string)(null)), table13, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T15_When only the codelist is duplicate then the CodelistInclude Check box should" +
            " be uncheked and disabled and the text box should be enabled")]
        public virtual void T15_WhenOnlyTheCodelistIsDuplicateThenTheCodelistIncludeCheckBoxShouldBeUnchekedAndDisabledAndTheTextBoxShouldBeEnabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T15_When only the codelist is duplicate then the CodelistInclude Check box should" +
                    " be uncheked and disabled and the text box should be enabled", null, ((string[])(null)));
#line 124
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "IncludeForCodelist",
                        "TargetForCodelist"});
            table14.AddRow(new string[] {
                        "12",
                        "disabled",
                        "AB_Color"});
            table14.AddRow(new string[] {
                        "22",
                        "disabled",
                        "XYN"});
            table14.AddRow(new string[] {
                        "32",
                        "disabled",
                        "JPPAR"});
#line 125
 testRunner.Then("the CodeList Include Checkbox should be unchecked and disabled for the below Code" +
                    "lists", ((string)(null)), table14, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForCodelist"});
            table15.AddRow(new string[] {
                        "12",
                        "AB_Color"});
            table15.AddRow(new string[] {
                        "22",
                        "XYN"});
            table15.AddRow(new string[] {
                        "32",
                        "JPPAR"});
#line 130
 testRunner.And("I should see the Target Codelist textbox in enabled state as below", ((string)(null)), table15, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T16_When the Domain Item is duplicate and mapped to a different Codelist then the" +
            " textbox should be displayed in blue and unchecked")]
        public virtual void T16_WhenTheDomainItemIsDuplicateAndMappedToADifferentCodelistThenTheTextboxShouldBeDisplayedInBlueAndUnchecked()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T16_When the Domain Item is duplicate and mapped to a different Codelist then the" +
                    " textbox should be displayed in blue and unchecked", null, ((string[])(null)));
#line 137
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "IncludeForCodelist",
                        "TargetForCodelist"});
            table16.AddRow(new string[] {
                        "18",
                        "disabled",
                        "AB_BodyRegion"});
            table16.AddRow(new string[] {
                        "27",
                        "disabled",
                        "AB_BodyRegion"});
            table16.AddRow(new string[] {
                        "33",
                        "disabled",
                        "AB_BodyRegion"});
#line 138
 testRunner.Then("the CodeList Include Checkbox should be unchecked and disabled for the below Code" +
                    "lists", ((string)(null)), table16, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForCodelist"});
            table17.AddRow(new string[] {
                        "18",
                        "AB_BodyRegion"});
            table17.AddRow(new string[] {
                        "27",
                        "AB_BodyRegion"});
            table17.AddRow(new string[] {
                        "33",
                        "AB_BodyRegion"});
#line 143
 testRunner.And("the CodeList textbox is disabled for CodeList", ((string)(null)), table17, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("17_When I navigate back to the Home page and click on Delete all previously creat" +
            "ed studies then I should see all those studies")]
        public virtual void _17_WhenINavigateBackToTheHomePageAndClickOnDeleteAllPreviouslyCreatedStudiesThenIShouldSeeAllThoseStudies()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("17_When I navigate back to the Home page and click on Delete all previously creat" +
                    "ed studies then I should see all those studies", null, ((string[])(null)));
#line 149
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 150
 testRunner.When("I click breadcrumb item \"Home\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "StudyName"});
            table18.AddRow(new string[] {
                        "Import_Study59_US63112_SameStudy"});
#line 151
 testRunner.And("I Search for the study in the studies list of Home page and delete the study", ((string)(null)), table18, "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "StudyName"});
            table19.AddRow(new string[] {
                        "Import_Study59_US63112_SameStudy"});
#line 154
testRunner.Then("I should not see these studies in the Home page", ((string)(null)), table19, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

