// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.Designer
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Create Form from existing_Codelist verification")]
    public partial class CreateFormFromExisting_CodelistVerificationFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "US63113_Create Form from existing_Codelist verification.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Create Form from existing_Codelist verification", @"	Test Summary:
	User shall be able to verify codelist when user select verify button
User shall be able to see orange color background for duplicate items(codelist)
User shall be able to validate the enability of enable the include checkbox if there are no duplicate in source and target.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T01_When I Login to Designer then I see the Designer home page")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US68936.1")]
        public virtual void T01_WhenILoginToDesignerThenISeeTheDesignerHomePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T01_When I Login to Designer then I see the Designer home page", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US68936.1"});
#line 8
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
 testRunner.Given("I logged in to Designer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.Then("I see Designer Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T02_When I Import Study of 5.7 to Designer then I see message \"Study has been suc" +
            "cessfully added\" and status as complete")]
        public virtual void T02_WhenIImportStudyOf5_7ToDesignerThenISeeMessageStudyHasBeenSuccessfullyAddedAndStatusAsComplete()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T02_When I Import Study of 5.7 to Designer then I see message \"Study has been suc" +
                    "cessfully added\" and status as complete", null, ((string[])(null)));
#line 12
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 13
    testRunner.When("I click on the Home Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
 testRunner.And("I click on the Link \"Import Study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
 testRunner.And("I import a study \"Import_1_US68936.zip\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.And("Enter the unique study name \"Import_Study1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
 testRunner.And("Select the sponsor name \"Sponsor1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("I click on the Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.And("I should see the notification \"Study has been successfully added\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.And("I click on the Link \"View Study Jobs\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.Then("I should see the status of the study \"Study Import (Import_Study1)\" in \"Complete\"" +
                    " state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T03_When the user clicks on Forms tab then Forms page should be displayed")]
        public virtual void T03_WhenTheUserClicksOnFormsTabThenFormsPageShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T03_When the user clicks on Forms tab then Forms page should be displayed", null, ((string[])(null)));
#line 23
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 24
 testRunner.When("I click on the \"Forms\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
 testRunner.Then("I should see the \"Forms\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T04_When I click on Create Form from Existing and select a same study then verify" +
            " button should be displayed")]
        public virtual void T04_WhenIClickOnCreateFormFromExistingAndSelectASameStudyThenVerifyButtonShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T04_When I click on Create Form from Existing and select a same study then verify" +
                    " button should be displayed", null, ((string[])(null)));
#line 28
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 29
 testRunner.When("I click on the Link \"Create Form from Existing\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
 testRunner.And("I select the pop up having title \"Create Form from Existing\" and partial message " +
                    "\"Please select a Study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.And("I click on the Link \"Import_Study1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.And("I click on the Link \"Form1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T05_When I give the unique name for the form,form label and table name and click " +
            "verify button and validate the background colours for codelist")]
        public virtual void T05_WhenIGiveTheUniqueNameForTheFormFormLabelAndTableNameAndClickVerifyButtonAndValidateTheBackgroundColoursForCodelist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T05_When I give the unique name for the form,form label and table name and click " +
                    "verify button and validate the background colours for codelist", null, ((string[])(null)));
#line 35
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "FormName",
                        "FormLabel",
                        "TableName"});
            table1.AddRow(new string[] {
                        "FormName10",
                        "FormLabel10",
                        "TableName10"});
#line 36
 testRunner.When(": I enter the form name, form label and table name with following details", ((string)(null)), table1, "When ");
#line 39
 testRunner.And("I click on verify Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.Then("I should see orange background in target codelist when duplicate items in codelis" +
                    "ts as source and target are same.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T_When verify button is clicked Then include checkbox should  unchecked and disab" +
            "led")]
        public virtual void T_WhenVerifyButtonIsClickedThenIncludeCheckboxShouldUncheckedAndDisabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T_When verify button is clicked Then include checkbox should  unchecked and disab" +
                    "led", " When", ((string[])(null)));
#line 42
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T06_When I ensure codelists and items are different in source and target then cod" +
            "elist include checkbox should be enabled")]
        public virtual void T06_WhenIEnsureCodelistsAndItemsAreDifferentInSourceAndTargetThenCodelistIncludeCheckboxShouldBeEnabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T06_When I ensure codelists and items are different in source and target then cod" +
                    "elist include checkbox should be enabled", null, ((string[])(null)));
#line 45
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 46
    testRunner.When("I change the items in target so that source and target are different but already " +
                    "present in the target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
    testRunner.And("I change the codelist in target so that source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.Then("I should see the include checkBox is in enabled state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T07_When I have same domain items but codelists are different then include button" +
            " for codelist should be disabled")]
        public virtual void T07_WhenIHaveSameDomainItemsButCodelistsAreDifferentThenIncludeButtonForCodelistShouldBeDisabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T07_When I have same domain items but codelists are different then include button" +
                    " for codelist should be disabled", null, ((string[])(null)));
#line 50
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 51
 testRunner.When("I change the domain items in source and target as unique", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 52
 testRunner.Then("I can edit the codelist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 53
 testRunner.And("I edit the codelist to unique in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.And("I click on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.When("I edit again the domain item to be same in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
 testRunner.And("I click  on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.Then("I see the codelist include checkbox is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T08_When I ensure items are different in source and target then codelist fields a" +
            "re editable")]
        public virtual void T08_WhenIEnsureItemsAreDifferentInSourceAndTargetThenCodelistFieldsAreEditable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T08_When I ensure items are different in source and target then codelist fields a" +
                    "re editable", null, ((string[])(null)));
#line 59
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 60
  testRunner.When("I see the items in source an d target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 61
  testRunner.Then("I should see the codelist fields are editable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T09_When I click on Create New Study with Target APP as DataLabs 5.6x or 5.7x the" +
            "n study should be added sucessfully")]
        public virtual void T09_WhenIClickOnCreateNewStudyWithTargetAPPAsDataLabs5_6XOr5_7XThenStudyShouldBeAddedSucessfully()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T09_When I click on Create New Study with Target APP as DataLabs 5.6x or 5.7x the" +
                    "n study should be added sucessfully", null, ((string[])(null)));
#line 65
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 66
 testRunner.When("I click on the Cancel button on the popup page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 67
 testRunner.When("I click breadcrumb item \"Home\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 68
 testRunner.And("I click on the Link \"Create New Study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "StudyName",
                        "StudyLabel",
                        "Protocol",
                        "ProtocolLabel",
                        "ProtocolTitle",
                        "ExternalStudyID",
                        "StudyPhase",
                        "StudyDrugName",
                        "StudyIndication",
                        "TherapeuticArea",
                        "Sponsor",
                        "TargetApp",
                        "SafetyMapping"});
            table2.AddRow(new string[] {
                        "Study1",
                        "StudyLabel1",
                        "Protocol1",
                        "ProtocolTitle1",
                        "PT1",
                        "EXSTUID",
                        "Phase1",
                        "Cal pol",
                        "IND1",
                        "Allergy",
                        "Sponsor1",
                        "DataLabs 5.6x or 5.7x or 5.8x",
                        "Not Enabled"});
#line 69
 testRunner.And("I enter study details", ((string)(null)), table2, "And ");
#line 72
 testRunner.When("I click on the Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 73
 testRunner.Then("I should see the notification \"Study has been successfully added\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T10_When user adds the study and open then the study page should be displayed")]
        public virtual void T10_WhenUserAddsTheStudyAndOpenThenTheStudyPageShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T10_When user adds the study and open then the study page should be displayed", null, ((string[])(null)));
#line 75
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 76
 testRunner.When("I click breadcrumb item \"Home\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "StudyName"});
            table3.AddRow(new string[] {
                        "Study1"});
#line 77
 testRunner.And("I Search for the study in the studies list of Home page and open the study", ((string)(null)), table3, "And ");
#line 80
 testRunner.Then("I should see the \"Study\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T11_When the user create a Codelist")]
        public virtual void T11_WhenTheUserCreateACodelist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T11_When the user create a Codelist", null, ((string[])(null)));
#line 82
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 83
 testRunner.When("I click on the \"Codelists\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
 testRunner.And("I Click on \"Add Codelist\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
 testRunner.And("I enter CodelistName as \"Codelist1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
 testRunner.And("I enter CodelistDesc as \"CodelistDesc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
 testRunner.And("I click on the Codelist Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
 testRunner.Then("I should see the notification \"Codelist1 has been successfully added\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T12_When the user create a codelist items")]
        public virtual void T12_WhenTheUserCreateACodelistItems()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T12_When the user create a codelist items", null, ((string[])(null)));
#line 90
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 91
 testRunner.When("Click on the Codelist \"Codelist1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "CodeListname",
                        "CodePrefix",
                        "CodeItemDesc",
                        "CodeItemValue"});
            table4.AddRow(new string[] {
                        "Codelist1",
                        "1",
                        "CodelistItem1",
                        "CodelistItemvalue1"});
            table4.AddRow(new string[] {
                        "Codelist1",
                        "2",
                        "CodelistItem2",
                        "CodelistItemvalue2"});
#line 92
 testRunner.Then("I add the below codelist items and I should see the successful notification messa" +
                    "ge", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T13_When the user clicks on Domain tab then domain page should be displayed")]
        public virtual void T13_WhenTheUserClicksOnDomainTabThenDomainPageShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T13_When the user clicks on Domain tab then domain page should be displayed", null, ((string[])(null)));
#line 97
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 98
 testRunner.When("I click on the \"Domains\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 99
 testRunner.Then("I should see the \"Domains\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T14_When the user create Domain")]
        public virtual void T14_WhenTheUserCreateDomain()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T14_When the user create Domain", null, ((string[])(null)));
#line 101
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 102
 testRunner.When("I Click on \"Add Domain\" to add new Domain", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 103
 testRunner.And("enter DomainName as \"Domain1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
 testRunner.And("enter DomainDesc as \"Domain1Desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
 testRunner.And("I click on the Domains Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
 testRunner.Then("I should see the notification \"Domain1 has been successfully added\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T15_When the user create Domain Items")]
        public virtual void T15_WhenTheUserCreateDomainItems()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T15_When the user create Domain Items", null, ((string[])(null)));
#line 108
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 109
    testRunner.When("I click on the Link \"Domain1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemName",
                        "Source",
                        "Datatype",
                        "Codelist",
                        "maxlen"});
            table5.AddRow(new string[] {
                        "DomainItem1",
                        "EDC",
                        "Text",
                        "Codelist1",
                        "30"});
#line 110
 testRunner.And("I enter domain item details and each time when i add a new record success message" +
                    " should be displayed", ((string)(null)), table5, "And ");
#line 113
 testRunner.Then("I should see the notification \"DomainItem1 has been successfully added\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T16_When the user clicks on Forms tab then Forms page should be displayed")]
        public virtual void T16_WhenTheUserClicksOnFormsTabThenFormsPageShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T16_When the user clicks on Forms tab then Forms page should be displayed", null, ((string[])(null)));
#line 115
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 116
 testRunner.When("I click on the \"Forms\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 117
 testRunner.Then("I should see the \"Forms\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T17_When the user clicks on Forms tab then Forms page should be displayed")]
        public virtual void T17_WhenTheUserClicksOnFormsTabThenFormsPageShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T17_When the user clicks on Forms tab then Forms page should be displayed", null, ((string[])(null)));
#line 119
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 120
 testRunner.When("I click on the Link \"Add Form\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 121
 testRunner.And("I enter the FormName as \"FormName8\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
 testRunner.And("I enter the Formlabel as \"FormLabel8\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
 testRunner.And("I click on Form Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
 testRunner.Then("I should see the notification \"Form1 has been successfully added\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T18_When the user clicks on Add Question")]
        public virtual void T18_WhenTheUserClicksOnAddQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T18_When the user clicks on Add Question", null, ((string[])(null)));
#line 126
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 127
 testRunner.When("I click on the Link \"FormName8\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 128
 testRunner.And("I click on the Link \"Add Question\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.And("I enter the Question Data as \"Question1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
 testRunner.And("I click on QuestionData Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
 testRunner.Then("I should see the notification \"Question1 has been successfully added\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T19_When the user clicks on Add Question")]
        public virtual void T19_WhenTheUserClicksOnAddQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T19_When the user clicks on Add Question", null, ((string[])(null)));
#line 133
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Qestionname",
                        "Domain",
                        "QuestionDisplayOption",
                        "QuestionItemName",
                        "ConditionalItemName",
                        "ConditionalComparator",
                        "ConditionalValue",
                        "DataGroup",
                        "CodelistGroup",
                        "CodelistLiknage",
                        "linkageItem",
                        "HeaderName",
                        "Keysequence"});
            table6.AddRow(new string[] {
                        "Question1",
                        "Domain1",
                        "Drop-Down",
                        "DomainItem1",
                        "--",
                        "--",
                        "",
                        "--",
                        "",
                        "",
                        "",
                        "",
                        ""});
#line 134
 testRunner.When("I add the below form question items and I should see the successful notification " +
                    "message", ((string)(null)), table6, "When ");
#line 137
 testRunner.And("I click on the \"Forms\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 138
 testRunner.Then("I should see the \"Forms\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T20_When I click on Create Form from Existing and select a same study then verify" +
            " button should be displayed")]
        public virtual void T20_WhenIClickOnCreateFormFromExistingAndSelectASameStudyThenVerifyButtonShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T20_When I click on Create Form from Existing and select a same study then verify" +
                    " button should be displayed", null, ((string[])(null)));
#line 140
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 141
 testRunner.When("I click on the Link \"Create Form from Existing\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 142
 testRunner.And("I select the pop up having title \"Create Form from Existing\" and partial message " +
                    "\"Please select a Study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
 testRunner.And("I click on the Link \"Study1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
 testRunner.And("I click on the Link \"FormName8\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T21_When I give the unique name for the form,form label and table name and click " +
            "verify button and validate the background colours for codelist")]
        public virtual void T21_WhenIGiveTheUniqueNameForTheFormFormLabelAndTableNameAndClickVerifyButtonAndValidateTheBackgroundColoursForCodelist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T21_When I give the unique name for the form,form label and table name and click " +
                    "verify button and validate the background colours for codelist", null, ((string[])(null)));
#line 147
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "FormName",
                        "FormLabel",
                        "TableName"});
            table7.AddRow(new string[] {
                        "FormName7",
                        "FormLabel7",
                        "TableName7"});
#line 148
 testRunner.When(": I enter the form name, form label and table name with following details", ((string)(null)), table7, "When ");
#line 151
 testRunner.And("I click on verify Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
 testRunner.Then("I should see orange background in target codelist when duplicate items in codelis" +
                    "ts as source and target are same.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T22_When I ensure codelists and items are different in source and target then cod" +
            "elist include checkbox should be enabled")]
        public virtual void T22_WhenIEnsureCodelistsAndItemsAreDifferentInSourceAndTargetThenCodelistIncludeCheckboxShouldBeEnabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T22_When I ensure codelists and items are different in source and target then cod" +
                    "elist include checkbox should be enabled", null, ((string[])(null)));
#line 155
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 156
    testRunner.When("I change the items in target so that source and target are different but already " +
                    "present in the target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 157
    testRunner.And("I change the codelist in target so that source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
 testRunner.Then("I should see the include checkBox is in enabled state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T23_When I have same domain items but codelists are different then include button" +
            " for codelist should be disabled")]
        public virtual void T23_WhenIHaveSameDomainItemsButCodelistsAreDifferentThenIncludeButtonForCodelistShouldBeDisabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T23_When I have same domain items but codelists are different then include button" +
                    " for codelist should be disabled", null, ((string[])(null)));
#line 160
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 161
testRunner.When("I change the domain items in source and target as unique", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 162
testRunner.Then("I can edit the codelist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 163
testRunner.And("I edit the codelist to unique in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
testRunner.And("I click on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
testRunner.When("I edit again the domain item to be same in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 166
testRunner.And("I click  on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
testRunner.Then("I see the codelist include checkbox is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T24_When I ensure items are different in source and target then codelist fields a" +
            "re editable")]
        public virtual void T24_WhenIEnsureItemsAreDifferentInSourceAndTargetThenCodelistFieldsAreEditable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T24_When I ensure items are different in source and target then codelist fields a" +
                    "re editable", null, ((string[])(null)));
#line 169
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 170
  testRunner.When("I see the items in source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 171
  testRunner.Then("I should see the codelist fields are editable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T25_When the user clicks on Forms tab then Forms page should be displayed")]
        public virtual void T25_WhenTheUserClicksOnFormsTabThenFormsPageShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T25_When the user clicks on Forms tab then Forms page should be displayed", null, ((string[])(null)));
#line 173
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 174
 testRunner.When("I click on the \"Forms\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 175
 testRunner.Then("I should see the \"Forms\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T26_When I click on Create Form from Existing and select a different study then v" +
            "erify button should be displayed")]
        public virtual void T26_WhenIClickOnCreateFormFromExistingAndSelectADifferentStudyThenVerifyButtonShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T26_When I click on Create Form from Existing and select a different study then v" +
                    "erify button should be displayed", null, ((string[])(null)));
#line 178
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 179
 testRunner.When("I click on the Link \"Create Form from Existing\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 180
 testRunner.And("I select the pop up having title \"Create Form from Existing\" and partial message " +
                    "\"Please select a Study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 181
 testRunner.And("I click on the Link \"Import_Study1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 182
 testRunner.And("I click on the Link \"Form1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T27_When I give the unique name for the form,form label and table name and click " +
            "verify button and validate the background colours for codelist")]
        public virtual void T27_WhenIGiveTheUniqueNameForTheFormFormLabelAndTableNameAndClickVerifyButtonAndValidateTheBackgroundColoursForCodelist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T27_When I give the unique name for the form,form label and table name and click " +
                    "verify button and validate the background colours for codelist", null, ((string[])(null)));
#line 185
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "FormName",
                        "FormLabel",
                        "TableName"});
            table8.AddRow(new string[] {
                        "FormName6",
                        "FormLabel6",
                        "TableName6"});
#line 186
 testRunner.When(": I enter the form name, form label and table name with following details", ((string)(null)), table8, "When ");
#line 189
 testRunner.And("I click on verify Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
 testRunner.Then("I should see orange background in target codelist when duplicate items in codelis" +
                    "ts as source and target are same.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T28_When I ensure codelists and items are different in source and target then cod" +
            "elist include checkbox should be enabled")]
        public virtual void T28_WhenIEnsureCodelistsAndItemsAreDifferentInSourceAndTargetThenCodelistIncludeCheckboxShouldBeEnabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T28_When I ensure codelists and items are different in source and target then cod" +
                    "elist include checkbox should be enabled", null, ((string[])(null)));
#line 193
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 194
    testRunner.When("I change the items in target so that source and target are different but already " +
                    "present in the target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 195
    testRunner.And("I change the codelist in target so that source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
 testRunner.Then("I should see the include checkBox is in enabled state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T29_When I have same domain items but codelists are different then include button" +
            " for codelist should be disabled")]
        public virtual void T29_WhenIHaveSameDomainItemsButCodelistsAreDifferentThenIncludeButtonForCodelistShouldBeDisabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T29_When I have same domain items but codelists are different then include button" +
                    " for codelist should be disabled", null, ((string[])(null)));
#line 198
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 199
 testRunner.When("I change the domain items in source and target as unique", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 200
 testRunner.Then("I can edit the codelist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 201
 testRunner.And("I edit the codelist to unique in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 202
 testRunner.And("I click on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 203
 testRunner.When("I edit again the domain item to be same in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 204
 testRunner.And("I click  on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 205
testRunner.Then("I see the codelist include checkbox is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T30_When I ensure items are different in source and target then codelist fields a" +
            "re editable")]
        public virtual void T30_WhenIEnsureItemsAreDifferentInSourceAndTargetThenCodelistFieldsAreEditable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T30_When I ensure items are different in source and target then codelist fields a" +
                    "re editable", null, ((string[])(null)));
#line 207
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 208
  testRunner.When("I see the items in source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 209
  testRunner.Then("I should see the codelist fields are editable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T31_When User clicks on Home tab in the header then home tab should be displayed")]
        public virtual void T31_WhenUserClicksOnHomeTabInTheHeaderThenHomeTabShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T31_When User clicks on Home tab in the header then home tab should be displayed", null, ((string[])(null)));
#line 211
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 212
 testRunner.When("I click on the \"Home\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 213
 testRunner.Then("I should see the \"Home\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T32_When I click on Create Study from Existing and Study should be created with g" +
            "iven name")]
        public virtual void T32_WhenIClickOnCreateStudyFromExistingAndStudyShouldBeCreatedWithGivenName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T32_When I click on Create Study from Existing and Study should be created with g" +
                    "iven name", null, ((string[])(null)));
#line 216
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 217
 testRunner.When("I click on the Cancel button on the popup page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 218
 testRunner.And("I click breadcrumb item \"Home\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 219
 testRunner.And("I see Designer Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 220
 testRunner.And("I click on the Link \"Create Study from Existing\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 221
 testRunner.And("I select the pop up having title \"Create Study from Existing\" and partial message" +
                    " \"Please select a Study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "StudyName"});
            table9.AddRow(new string[] {
                        "Study1"});
#line 222
 testRunner.And("I Search for the study in the studies list of Create Study from Existing  and cli" +
                    "ck on the study", ((string)(null)), table9, "And ");
#line 225
 testRunner.And("Enter the unique study name \"Study2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 226
 testRunner.And("I click on the Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 227
 testRunner.Then("I should see the notification \"Study has been successfully added\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T33_When I click on Create Form from Existing and select the different study")]
        public virtual void T33_WhenIClickOnCreateFormFromExistingAndSelectTheDifferentStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T33_When I click on Create Form from Existing and select the different study", null, ((string[])(null)));
#line 229
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 230
 testRunner.When("I click on the Link \"View Study Jobs\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 231
 testRunner.Then("I should see the status of the study \"Create Study (Study2)\" in \"Complete\" state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T34_When the user clicks on Forms tab then Forms page should be displayed")]
        public virtual void T34_WhenTheUserClicksOnFormsTabThenFormsPageShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T34_When the user clicks on Forms tab then Forms page should be displayed", null, ((string[])(null)));
#line 233
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 234
 testRunner.When("I click on the \"Forms\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 235
 testRunner.Then("I should see the \"Forms\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T35_When I click on Create Form from Existing and select a same study then verify" +
            " button should be displayed")]
        public virtual void T35_WhenIClickOnCreateFormFromExistingAndSelectASameStudyThenVerifyButtonShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T35_When I click on Create Form from Existing and select a same study then verify" +
                    " button should be displayed", null, ((string[])(null)));
#line 238
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 239
 testRunner.When("I click on the Link \"Create Form from Existing\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 240
 testRunner.And("I select the pop up having title \"Create Form from Existing\" and partial message " +
                    "\"Please select a Study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 241
 testRunner.And("I click on the Link \"Study2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 242
 testRunner.And("I click on the Link \"FormName8\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T36_When I give the unique name for the form,form label and table name and click " +
            "verify button and validate the background colours for codelist")]
        public virtual void T36_WhenIGiveTheUniqueNameForTheFormFormLabelAndTableNameAndClickVerifyButtonAndValidateTheBackgroundColoursForCodelist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T36_When I give the unique name for the form,form label and table name and click " +
                    "verify button and validate the background colours for codelist", null, ((string[])(null)));
#line 245
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "FormName",
                        "FormLabel",
                        "TableName"});
            table10.AddRow(new string[] {
                        "FormName4",
                        "FormLabel4",
                        "TableName4"});
#line 246
 testRunner.When(": I enter the form name, form label and table name with following details", ((string)(null)), table10, "When ");
#line 249
 testRunner.And("I click on verify Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 250
 testRunner.Then("I should see orange background in target codelist when duplicate items in codelis" +
                    "ts as source and target are same.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T37_When I ensure codelists and items are different in source and target then cod" +
            "elist include checkbox should be enabled")]
        public virtual void T37_WhenIEnsureCodelistsAndItemsAreDifferentInSourceAndTargetThenCodelistIncludeCheckboxShouldBeEnabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T37_When I ensure codelists and items are different in source and target then cod" +
                    "elist include checkbox should be enabled", null, ((string[])(null)));
#line 253
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 254
    testRunner.When("I change the items in target so that source and target are different but already " +
                    "present in the target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 255
    testRunner.And("I change the codelist in target so that source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 256
 testRunner.Then("I should see the include checkBox is in enabled state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T38_When I have same domain items but codelists are different then include button" +
            " for codelist should be disabled")]
        public virtual void T38_WhenIHaveSameDomainItemsButCodelistsAreDifferentThenIncludeButtonForCodelistShouldBeDisabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T38_When I have same domain items but codelists are different then include button" +
                    " for codelist should be disabled", null, ((string[])(null)));
#line 258
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 259
testRunner.When("I change the domain items in source and target as unique", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 260
testRunner.Then("I can edit the codelist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 261
testRunner.And("I edit the codelist to unique in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 262
testRunner.And("I click on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 263
testRunner.When("I edit again the domain item to be same in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 264
testRunner.And("I click  on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 265
testRunner.Then("I see the codelist include checkbox is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T39_When I ensure items are different in source and target then codelist fields a" +
            "re editable")]
        public virtual void T39_WhenIEnsureItemsAreDifferentInSourceAndTargetThenCodelistFieldsAreEditable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T39_When I ensure items are different in source and target then codelist fields a" +
                    "re editable", null, ((string[])(null)));
#line 267
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 268
  testRunner.When("I see the items in source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 269
  testRunner.Then("I should see the codelist fields are editable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T40_When the user clicks on Forms tab then Forms page should be displayed")]
        public virtual void T40_WhenTheUserClicksOnFormsTabThenFormsPageShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T40_When the user clicks on Forms tab then Forms page should be displayed", null, ((string[])(null)));
#line 271
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 272
 testRunner.When("I click on the \"Forms\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 273
 testRunner.Then("I should see the \"Forms\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T41_When I click on Create Form from Existing and select a different study then v" +
            "erify button should be displayed")]
        public virtual void T41_WhenIClickOnCreateFormFromExistingAndSelectADifferentStudyThenVerifyButtonShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T41_When I click on Create Form from Existing and select a different study then v" +
                    "erify button should be displayed", null, ((string[])(null)));
#line 276
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 277
 testRunner.When("I click on the Link \"Create Form from Existing\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 278
 testRunner.And("I select the pop up having title \"Create Form from Existing\" and partial message " +
                    "\"Please select a Study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 279
 testRunner.And("I click on the Link \"Import_Study1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 280
 testRunner.And("I click on the Link \"Form1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T42_When I give the unique name for the form,form label and table name and click " +
            "verify button and validate the background colours for codelist")]
        public virtual void T42_WhenIGiveTheUniqueNameForTheFormFormLabelAndTableNameAndClickVerifyButtonAndValidateTheBackgroundColoursForCodelist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T42_When I give the unique name for the form,form label and table name and click " +
                    "verify button and validate the background colours for codelist", null, ((string[])(null)));
#line 283
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "FormName",
                        "FormLabel",
                        "TableName"});
            table11.AddRow(new string[] {
                        "FormName3",
                        "FormLabel3",
                        "TableName3"});
#line 284
 testRunner.When(": I enter the form name, form label and table name with following details", ((string)(null)), table11, "When ");
#line 287
 testRunner.And("I click on verify Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 288
 testRunner.Then("I should see orange background in target codelist when duplicate items in codelis" +
                    "ts as source and target are same.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T43_When I ensure codelists and items are different in source and target then cod" +
            "elist include checkbox should be enabled")]
        public virtual void T43_WhenIEnsureCodelistsAndItemsAreDifferentInSourceAndTargetThenCodelistIncludeCheckboxShouldBeEnabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T43_When I ensure codelists and items are different in source and target then cod" +
                    "elist include checkbox should be enabled", null, ((string[])(null)));
#line 291
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 292
    testRunner.When("I change the items in target so that source and target are different but already " +
                    "present in the target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 293
    testRunner.And("I change the codelist in target so that source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 294
 testRunner.Then("I should see the include checkBox is in enabled state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T44_When I have same domain items but codelists are different then include button" +
            " for codelist should be disabled")]
        public virtual void T44_WhenIHaveSameDomainItemsButCodelistsAreDifferentThenIncludeButtonForCodelistShouldBeDisabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T44_When I have same domain items but codelists are different then include button" +
                    " for codelist should be disabled", null, ((string[])(null)));
#line 296
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 297
 testRunner.When("I change the domain items in source and target as unique", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 298
 testRunner.Then("I can edit the codelist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 299
 testRunner.And("I edit the codelist to unique in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 300
 testRunner.And("I click on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 301
 testRunner.When("I edit again the domain item to be same in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 302
 testRunner.And("I click  on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 303
testRunner.Then("I see the codelist include checkbox is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T45_When I ensure items are different in source and target then codelist fields a" +
            "re editable")]
        public virtual void T45_WhenIEnsureItemsAreDifferentInSourceAndTargetThenCodelistFieldsAreEditable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T45_When I ensure items are different in source and target then codelist fields a" +
                    "re editable", null, ((string[])(null)));
#line 305
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 306
  testRunner.When("I see the items in source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 307
  testRunner.Then("I should see the codelist fields are editable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T46_When user tries to upgrade the study and open the study then upgraded study s" +
            "hould be successfully opened")]
        public virtual void T46_WhenUserTriesToUpgradeTheStudyAndOpenTheStudyThenUpgradedStudyShouldBeSuccessfullyOpened()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T46_When user tries to upgrade the study and open the study then upgraded study s" +
                    "hould be successfully opened", null, ((string[])(null)));
#line 310
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 311
      testRunner.When("I click on the Home Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 312
   testRunner.And("I select the Study \"Study1\" from Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 313
   testRunner.And("I click on the Settings drop Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 314
   testRunner.And("I click on Target App and change the study to latest", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 315
   testRunner.And("I click on the Save button in Study Properties page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 316
   testRunner.And("I click on the \"Home\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 317
   testRunner.And("I click on the Link \"Study2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 318
   testRunner.Then("I should see the \"Study\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T47_When the user clicks on Forms tab then Forms page should be displayed")]
        public virtual void T47_WhenTheUserClicksOnFormsTabThenFormsPageShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T47_When the user clicks on Forms tab then Forms page should be displayed", null, ((string[])(null)));
#line 320
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 321
 testRunner.When("I click on the \"Forms\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 322
 testRunner.Then("I should see the \"Forms\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T48_When I click on Create Form from Existing and select a same study then verify" +
            " button should be displayed")]
        public virtual void T48_WhenIClickOnCreateFormFromExistingAndSelectASameStudyThenVerifyButtonShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T48_When I click on Create Form from Existing and select a same study then verify" +
                    " button should be displayed", null, ((string[])(null)));
#line 325
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 326
 testRunner.When("I click on the Link \"Create Form from Existing\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 327
 testRunner.And("I select the pop up having title \"Create Form from Existing\" and partial message " +
                    "\"Please select a Study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 328
 testRunner.And("I click on the Link \"Study2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 329
 testRunner.And("I click on the Link \"FormName8\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T49_When I give the unique name for the form,form label and table name and click " +
            "verify button and validate the background colours for codelist")]
        public virtual void T49_WhenIGiveTheUniqueNameForTheFormFormLabelAndTableNameAndClickVerifyButtonAndValidateTheBackgroundColoursForCodelist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T49_When I give the unique name for the form,form label and table name and click " +
                    "verify button and validate the background colours for codelist", null, ((string[])(null)));
#line 331
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "FormName",
                        "FormLabel",
                        "TableName"});
            table12.AddRow(new string[] {
                        "FormName2",
                        "FormLabel2",
                        "TableName2"});
#line 332
 testRunner.When(": I enter the form name, form label and table name with following details", ((string)(null)), table12, "When ");
#line 335
 testRunner.And("I click on verify Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 336
 testRunner.Then("I should see orange background in target codelist when duplicate items in codelis" +
                    "ts as source and target are same.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T50_When I ensure codelists and items are different in source and target then cod" +
            "elist include checkbox should be enabled")]
        public virtual void T50_WhenIEnsureCodelistsAndItemsAreDifferentInSourceAndTargetThenCodelistIncludeCheckboxShouldBeEnabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T50_When I ensure codelists and items are different in source and target then cod" +
                    "elist include checkbox should be enabled", null, ((string[])(null)));
#line 339
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 340
    testRunner.When("I change the items in target so that source and target are different but already " +
                    "present in the target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 341
    testRunner.And("I change the codelist in target so that source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 342
 testRunner.Then("I should see the include checkBox is in enabled state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T51_When I have same domain items but codelists are different then include button" +
            " for codelist should be disabled")]
        public virtual void T51_WhenIHaveSameDomainItemsButCodelistsAreDifferentThenIncludeButtonForCodelistShouldBeDisabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T51_When I have same domain items but codelists are different then include button" +
                    " for codelist should be disabled", null, ((string[])(null)));
#line 344
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 345
testRunner.When("I change the domain items in source and target as unique", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 346
testRunner.Then("I can edit the codelist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 347
testRunner.And("I edit the codelist to unique in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 348
testRunner.And("I click on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 349
testRunner.When("I edit again the domain item to be same in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 350
testRunner.And("I click  on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 351
testRunner.Then("I see the codelist include checkbox is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T52_When I ensure items are different in source and target then codelist fields a" +
            "re editable")]
        public virtual void T52_WhenIEnsureItemsAreDifferentInSourceAndTargetThenCodelistFieldsAreEditable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T52_When I ensure items are different in source and target then codelist fields a" +
                    "re editable", null, ((string[])(null)));
#line 353
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 354
  testRunner.When("I see the items in source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 355
  testRunner.Then("I should see the codelist fields are editable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T53_When the user clicks on Forms tab then Forms page should be displayed")]
        public virtual void T53_WhenTheUserClicksOnFormsTabThenFormsPageShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T53_When the user clicks on Forms tab then Forms page should be displayed", null, ((string[])(null)));
#line 358
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 359
 testRunner.When("I click on the \"Forms\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 360
 testRunner.Then("I should see the \"Forms\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T54_When I click on Create Form from Existing and select a different study then v" +
            "erify button should be displayed")]
        public virtual void T54_WhenIClickOnCreateFormFromExistingAndSelectADifferentStudyThenVerifyButtonShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T54_When I click on Create Form from Existing and select a different study then v" +
                    "erify button should be displayed", null, ((string[])(null)));
#line 363
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 364
 testRunner.When("I click on the Link \"Create Form from Existing\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 365
 testRunner.And("I select the pop up having title \"Create Form from Existing\" and partial message " +
                    "\"Please select a Study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 366
 testRunner.And("I click on the Link \"Import_Study1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 367
 testRunner.And("I click on the Link \"FormName1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T55_When I give the unique name for the form,form label and table name and click " +
            "verify button and validate the background colours for codelist")]
        public virtual void T55_WhenIGiveTheUniqueNameForTheFormFormLabelAndTableNameAndClickVerifyButtonAndValidateTheBackgroundColoursForCodelist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T55_When I give the unique name for the form,form label and table name and click " +
                    "verify button and validate the background colours for codelist", null, ((string[])(null)));
#line 370
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "FormName",
                        "FormLabel",
                        "TableName"});
            table13.AddRow(new string[] {
                        "FormName15",
                        "FormLabel15",
                        "TableName15"});
#line 371
 testRunner.When(": I enter the form name, form label and table name with following details", ((string)(null)), table13, "When ");
#line 374
 testRunner.And("I click on verify Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 375
 testRunner.Then("I should see orange background in target codelist when duplicate items in codelis" +
                    "ts as source and target are same.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T56_When I ensure codelists and items are different in source and target then cod" +
            "elist include checkbox should be enabled")]
        public virtual void T56_WhenIEnsureCodelistsAndItemsAreDifferentInSourceAndTargetThenCodelistIncludeCheckboxShouldBeEnabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T56_When I ensure codelists and items are different in source and target then cod" +
                    "elist include checkbox should be enabled", null, ((string[])(null)));
#line 378
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 379
    testRunner.When("I change the items in target so that source and target are different but already " +
                    "present in the target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 380
    testRunner.And("I change the codelist in target so that source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 381
 testRunner.Then("I should see the include checkBox is in enabled state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T57_When I have same domain items but codelists are different then include button" +
            " for codelist should be disabled")]
        public virtual void T57_WhenIHaveSameDomainItemsButCodelistsAreDifferentThenIncludeButtonForCodelistShouldBeDisabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T57_When I have same domain items but codelists are different then include button" +
                    " for codelist should be disabled", null, ((string[])(null)));
#line 383
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 384
 testRunner.When("I change the domain items in source and target as unique", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 385
 testRunner.Then("I can edit the codelist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 386
 testRunner.And("I edit the codelist to unique in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 387
 testRunner.And("I click on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 388
 testRunner.When("I edit again the domain item to be same in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 389
 testRunner.And("I click  on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 390
testRunner.Then("I see the codelist include checkbox is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T58_When I ensure items are different in source and target then codelist fields a" +
            "re editable")]
        public virtual void T58_WhenIEnsureItemsAreDifferentInSourceAndTargetThenCodelistFieldsAreEditable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T58_When I ensure items are different in source and target then codelist fields a" +
                    "re editable", null, ((string[])(null)));
#line 392
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 393
  testRunner.When("I see the items in source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 394
  testRunner.Then("I should see the codelist fields are editable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_When user tries to upgrade the study and open the study then upgraded study s" +
            "hould be successfully opened")]
        public virtual void T59_WhenUserTriesToUpgradeTheStudyAndOpenTheStudyThenUpgradedStudyShouldBeSuccessfullyOpened()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_When user tries to upgrade the study and open the study then upgraded study s" +
                    "hould be successfully opened", null, ((string[])(null)));
#line 397
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 398
      testRunner.When("I click on the Home Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 399
   testRunner.And("I select the Study \"Study1\" from Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 400
   testRunner.And("I click on the Settings drop Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 401
   testRunner.And("I click on Target App and change the study to latest", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 402
   testRunner.And("I click on the Save button in Study Properties page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 403
   testRunner.And("I click on the \"Home\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 404
   testRunner.And("I click on the Link \"Study1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 405
   testRunner.Then("I should see the \"Study\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T60_When the user clicks on Forms tab then Forms page should be displayed")]
        public virtual void T60_WhenTheUserClicksOnFormsTabThenFormsPageShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T60_When the user clicks on Forms tab then Forms page should be displayed", null, ((string[])(null)));
#line 407
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 408
 testRunner.When("I click on the \"Forms\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 409
 testRunner.Then("I should see the \"Forms\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T61_When I click on Create Form from Existing and select a same study then verify" +
            " button should be displayed")]
        public virtual void T61_WhenIClickOnCreateFormFromExistingAndSelectASameStudyThenVerifyButtonShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T61_When I click on Create Form from Existing and select a same study then verify" +
                    " button should be displayed", null, ((string[])(null)));
#line 412
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 413
 testRunner.When("I click on the Link \"Create Form from Existing\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 414
 testRunner.And("I select the pop up having title \"Create Form from Existing\" and partial message " +
                    "\"Please select a Study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 415
 testRunner.And("I click on the Link \"Study1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 416
 testRunner.And("I click on the Link \"FormName8\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T62_When I give the unique name for the form,form label and table name and click " +
            "verify button and validate the background colours for codelist")]
        public virtual void T62_WhenIGiveTheUniqueNameForTheFormFormLabelAndTableNameAndClickVerifyButtonAndValidateTheBackgroundColoursForCodelist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T62_When I give the unique name for the form,form label and table name and click " +
                    "verify button and validate the background colours for codelist", null, ((string[])(null)));
#line 418
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "FormName",
                        "FormLabel",
                        "TableName"});
            table14.AddRow(new string[] {
                        "FormName6",
                        "FormLabel6",
                        "TableName6"});
#line 419
 testRunner.When(": I enter the form name, form label and table name with following details", ((string)(null)), table14, "When ");
#line 422
 testRunner.And("I click on verify Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 423
 testRunner.Then("I should see orange background in target codelist when duplicate items in codelis" +
                    "ts as source and target are same.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T63_When I ensure codelists and items are different in source and target then cod" +
            "elist include checkbox should be enabled")]
        public virtual void T63_WhenIEnsureCodelistsAndItemsAreDifferentInSourceAndTargetThenCodelistIncludeCheckboxShouldBeEnabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T63_When I ensure codelists and items are different in source and target then cod" +
                    "elist include checkbox should be enabled", null, ((string[])(null)));
#line 426
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 427
    testRunner.When("I change the items in target so that source and target are different but already " +
                    "present in the target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 428
    testRunner.And("I change the codelist in target so that source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 429
 testRunner.Then("I should see the include checkBox is in enabled state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T64_When I have same domain items but codelists are different then include button" +
            " for codelist should be disabled")]
        public virtual void T64_WhenIHaveSameDomainItemsButCodelistsAreDifferentThenIncludeButtonForCodelistShouldBeDisabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T64_When I have same domain items but codelists are different then include button" +
                    " for codelist should be disabled", null, ((string[])(null)));
#line 431
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 432
testRunner.When("I change the domain items in source and target as unique", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 433
testRunner.Then("I can edit the codelist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 434
testRunner.And("I edit the codelist to unique in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 435
testRunner.And("I click on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 436
testRunner.When("I edit again the domain item to be same in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 437
testRunner.And("I click  on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 438
testRunner.Then("I see the codelist include checkbox is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T65_When I ensure items are different in source and target then codelist fields a" +
            "re editable")]
        public virtual void T65_WhenIEnsureItemsAreDifferentInSourceAndTargetThenCodelistFieldsAreEditable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T65_When I ensure items are different in source and target then codelist fields a" +
                    "re editable", null, ((string[])(null)));
#line 440
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 441
  testRunner.When("I see the items in source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 442
  testRunner.Then("I should see the codelist fields are editable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T66_When the user clicks on Forms tab then Forms page should be displayed")]
        public virtual void T66_WhenTheUserClicksOnFormsTabThenFormsPageShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T66_When the user clicks on Forms tab then Forms page should be displayed", null, ((string[])(null)));
#line 445
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 446
 testRunner.When("I click on the \"Forms\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 447
 testRunner.Then("I should see the \"Forms\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T67_When I click on Create Form from Existing and select a different study then v" +
            "erify button should be displayed")]
        public virtual void T67_WhenIClickOnCreateFormFromExistingAndSelectADifferentStudyThenVerifyButtonShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T67_When I click on Create Form from Existing and select a different study then v" +
                    "erify button should be displayed", null, ((string[])(null)));
#line 450
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 451
 testRunner.When("I click on the Link \"Create Form from Existing\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 452
 testRunner.And("I select the pop up having title \"Create Form from Existing\" and partial message " +
                    "\"Please select a Study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 453
 testRunner.And("I click on the Link \"Import_Study1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 454
 testRunner.And("I click on the Link \"FormName1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T68_When I give the unique name for the form,form label and table name and click " +
            "verify button and validate the background colours for codelist")]
        public virtual void T68_WhenIGiveTheUniqueNameForTheFormFormLabelAndTableNameAndClickVerifyButtonAndValidateTheBackgroundColoursForCodelist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T68_When I give the unique name for the form,form label and table name and click " +
                    "verify button and validate the background colours for codelist", null, ((string[])(null)));
#line 457
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "FormName",
                        "FormLabel",
                        "TableName"});
            table15.AddRow(new string[] {
                        "FormName5",
                        "FormLabel5",
                        "TableName5"});
#line 458
 testRunner.When(": I enter the form name, form label and table name with following details", ((string)(null)), table15, "When ");
#line 461
 testRunner.And("I click on verify Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 462
 testRunner.Then("I should see orange background in target codelist when duplicate items in codelis" +
                    "ts as source and target are same.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T69_When I ensure codelists and items are different in source and target then cod" +
            "elist include checkbox should be enabled")]
        public virtual void T69_WhenIEnsureCodelistsAndItemsAreDifferentInSourceAndTargetThenCodelistIncludeCheckboxShouldBeEnabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T69_When I ensure codelists and items are different in source and target then cod" +
                    "elist include checkbox should be enabled", null, ((string[])(null)));
#line 465
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 466
    testRunner.When("I change the items in target so that source and target are different but already " +
                    "present in the target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 467
    testRunner.And("I change the codelist in target so that source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 468
 testRunner.Then("I should see the include checkBox is in enabled state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T70_When I have same domain items but codelists are different then include button" +
            " for codelist should be disabled")]
        public virtual void T70_WhenIHaveSameDomainItemsButCodelistsAreDifferentThenIncludeButtonForCodelistShouldBeDisabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T70_When I have same domain items but codelists are different then include button" +
                    " for codelist should be disabled", null, ((string[])(null)));
#line 470
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 471
 testRunner.When("I change the domain items in source and target as unique", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 472
 testRunner.Then("I can edit the codelist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 473
 testRunner.And("I edit the codelist to unique in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 474
 testRunner.And("I click on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 475
 testRunner.When("I edit again the domain item to be same in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 476
 testRunner.And("I click  on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 477
testRunner.Then("I see the codelist include checkbox is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T71_When I ensure items are different in source and target then codelist fields a" +
            "re editable")]
        public virtual void T71_WhenIEnsureItemsAreDifferentInSourceAndTargetThenCodelistFieldsAreEditable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T71_When I ensure items are different in source and target then codelist fields a" +
                    "re editable", null, ((string[])(null)));
#line 479
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 480
  testRunner.When("I see the items in source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 481
  testRunner.Then("I should see the codelist fields are editable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T72_When User clicks on Home tab in the header then home tab should be displayed")]
        public virtual void T72_WhenUserClicksOnHomeTabInTheHeaderThenHomeTabShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T72_When User clicks on Home tab in the header then home tab should be displayed", null, ((string[])(null)));
#line 484
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 485
 testRunner.When("I click on the \"Home\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 486
 testRunner.Then("I should see the \"Home\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T73_When user adds the study and open then the study page should be displayed")]
        public virtual void T73_WhenUserAddsTheStudyAndOpenThenTheStudyPageShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T73_When user adds the study and open then the study page should be displayed", null, ((string[])(null)));
#line 488
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 489
 testRunner.When("I click breadcrumb item \"Home\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "StudyName"});
            table16.AddRow(new string[] {
                        "Import_Study1"});
#line 490
 testRunner.And("I Search for the study in the studies list of Home page and open the study", ((string)(null)), table16, "And ");
#line 493
 testRunner.Then("I should see the \"Import_Study1\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T74_When the user clicks on Forms tab then Forms page should be displayed")]
        public virtual void T74_WhenTheUserClicksOnFormsTabThenFormsPageShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T74_When the user clicks on Forms tab then Forms page should be displayed", null, ((string[])(null)));
#line 495
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 496
 testRunner.When("I click on the \"Forms\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 497
 testRunner.Then("I should see the \"Forms\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T75_When I click on Create Form from Existing and select a different study then v" +
            "erify button should be displayed")]
        public virtual void T75_WhenIClickOnCreateFormFromExistingAndSelectADifferentStudyThenVerifyButtonShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T75_When I click on Create Form from Existing and select a different study then v" +
                    "erify button should be displayed", null, ((string[])(null)));
#line 499
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 500
 testRunner.When("I click on the Link \"Create Form from Existing\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 501
 testRunner.And("I select the pop up having title \"Create Form from Existing\" and partial message " +
                    "\"Please select a Study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 502
 testRunner.And("I click on the Link \"Study2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 503
 testRunner.And("I click on the Link \"FormName8\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T76_When I give the unique name for the form,form label and table name and click " +
            "verify button and validate the background colours for codelist")]
        public virtual void T76_WhenIGiveTheUniqueNameForTheFormFormLabelAndTableNameAndClickVerifyButtonAndValidateTheBackgroundColoursForCodelist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T76_When I give the unique name for the form,form label and table name and click " +
                    "verify button and validate the background colours for codelist", null, ((string[])(null)));
#line 506
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "FormName",
                        "FormLabel",
                        "TableName"});
            table17.AddRow(new string[] {
                        "FormName16",
                        "FormLabel6",
                        "TableName16"});
#line 507
 testRunner.When(": I enter the form name, form label and table name with following details", ((string)(null)), table17, "When ");
#line 510
 testRunner.And("I click on verify Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 511
 testRunner.Then("I should see orange background in target codelist when duplicate items in codelis" +
                    "ts as source and target are same.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T77_When I ensure codelists and items are different in source and target then cod" +
            "elist include checkbox should be enabled")]
        public virtual void T77_WhenIEnsureCodelistsAndItemsAreDifferentInSourceAndTargetThenCodelistIncludeCheckboxShouldBeEnabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T77_When I ensure codelists and items are different in source and target then cod" +
                    "elist include checkbox should be enabled", null, ((string[])(null)));
#line 514
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 515
    testRunner.When("I change the items in target so that source and target are different but already " +
                    "present in the target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 516
    testRunner.And("I change the codelist in target so that source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 517
 testRunner.Then("I should see the include checkBox is in enabled state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T78_When I have same domain items but codelists are different then include button" +
            " for codelist should be disabled")]
        public virtual void T78_WhenIHaveSameDomainItemsButCodelistsAreDifferentThenIncludeButtonForCodelistShouldBeDisabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T78_When I have same domain items but codelists are different then include button" +
                    " for codelist should be disabled", null, ((string[])(null)));
#line 519
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 520
testRunner.When("I change the domain items in source and target as unique", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 521
testRunner.Then("I can edit the codelist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 522
testRunner.And("I edit the codelist to unique in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 523
testRunner.And("I click on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 524
testRunner.When("I edit again the domain item to be same in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 525
testRunner.And("I click  on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 526
testRunner.Then("I see the codelist include checkbox is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T79_When I ensure items are different in source and target then codelist fields a" +
            "re editable")]
        public virtual void T79_WhenIEnsureItemsAreDifferentInSourceAndTargetThenCodelistFieldsAreEditable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T79_When I ensure items are different in source and target then codelist fields a" +
                    "re editable", null, ((string[])(null)));
#line 528
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 529
  testRunner.When("I see the items in source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 530
  testRunner.Then("I should see the codelist fields are editable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T80_When user tries to upgrade the study and open the study then upgraded study s" +
            "hould be successfully opened")]
        public virtual void T80_WhenUserTriesToUpgradeTheStudyAndOpenTheStudyThenUpgradedStudyShouldBeSuccessfullyOpened()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T80_When user tries to upgrade the study and open the study then upgraded study s" +
                    "hould be successfully opened", null, ((string[])(null)));
#line 533
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 534
      testRunner.When("I click on the Home Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 535
   testRunner.And("I select the Study \"Import_Study1\" from Home page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 536
   testRunner.And("I click on the Settings drop Icon", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 537
   testRunner.And("I click on Target App and change the study to latest", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 538
   testRunner.And("I click on the Save button in Study Properties page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 539
   testRunner.And("I click on the \"Home\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 540
   testRunner.And("I click on the Link \"Import_Study1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 541
   testRunner.Then("I should see the \"Study\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T81_When the user clicks on Forms tab then Forms page should be displayed")]
        public virtual void T81_WhenTheUserClicksOnFormsTabThenFormsPageShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T81_When the user clicks on Forms tab then Forms page should be displayed", null, ((string[])(null)));
#line 543
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 544
 testRunner.When("I click on the \"Forms\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 545
 testRunner.Then("I should see the \"Forms\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T82_When I click on Create Form from Existing and select a same study then verify" +
            " button should be displayed")]
        public virtual void T82_WhenIClickOnCreateFormFromExistingAndSelectASameStudyThenVerifyButtonShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T82_When I click on Create Form from Existing and select a same study then verify" +
                    " button should be displayed", null, ((string[])(null)));
#line 548
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 549
 testRunner.When("I click on the Link \"Create Form from Existing\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 550
 testRunner.And("I select the pop up having title \"Create Form from Existing\" and partial message " +
                    "\"Please select a Study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 551
 testRunner.And("I click on the Link \"Import_Study1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 552
 testRunner.And("I click on the Link \"Form1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T83_When I give the unique name for the form,form label and table name and click " +
            "verify button and validate the background colours for codelist")]
        public virtual void T83_WhenIGiveTheUniqueNameForTheFormFormLabelAndTableNameAndClickVerifyButtonAndValidateTheBackgroundColoursForCodelist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T83_When I give the unique name for the form,form label and table name and click " +
                    "verify button and validate the background colours for codelist", null, ((string[])(null)));
#line 554
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "FormName",
                        "FormLabel",
                        "TableName"});
            table18.AddRow(new string[] {
                        "FormName17",
                        "FormLabe17",
                        "TableName17"});
#line 555
 testRunner.When(": I enter the form name, form label and table name with following details", ((string)(null)), table18, "When ");
#line 558
 testRunner.And("I click on verify Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 559
 testRunner.Then("I should see orange background in target codelist when duplicate items in codelis" +
                    "ts as source and target are same.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T84_When I ensure codelists and items are different in source and target then cod" +
            "elist include checkbox should be enabled")]
        public virtual void T84_WhenIEnsureCodelistsAndItemsAreDifferentInSourceAndTargetThenCodelistIncludeCheckboxShouldBeEnabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T84_When I ensure codelists and items are different in source and target then cod" +
                    "elist include checkbox should be enabled", null, ((string[])(null)));
#line 562
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 563
    testRunner.When("I change the items in target so that source and target are different but already " +
                    "present in the target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 564
    testRunner.And("I change the codelist in target so that source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 565
 testRunner.Then("I should see the include checkBox is in enabled state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T85_When I have same domain items but codelists are different then include button" +
            " for codelist should be disabled")]
        public virtual void T85_WhenIHaveSameDomainItemsButCodelistsAreDifferentThenIncludeButtonForCodelistShouldBeDisabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T85_When I have same domain items but codelists are different then include button" +
                    " for codelist should be disabled", null, ((string[])(null)));
#line 567
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 568
testRunner.When("I change the domain items in source and target as unique", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 569
testRunner.Then("I can edit the codelist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 570
testRunner.And("I edit the codelist to unique in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 571
testRunner.And("I click on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 572
testRunner.When("I edit again the domain item to be same in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 573
testRunner.And("I click  on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 574
testRunner.Then("I see the codelist include checkbox is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T86_When I ensure items are different in source and target then codelist fields a" +
            "re editable")]
        public virtual void T86_WhenIEnsureItemsAreDifferentInSourceAndTargetThenCodelistFieldsAreEditable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T86_When I ensure items are different in source and target then codelist fields a" +
                    "re editable", null, ((string[])(null)));
#line 576
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 577
  testRunner.When("I see the items in source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 578
  testRunner.Then("I should see the codelist fields are editable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T87_When I click on Create Form from Existing and select a different study then v" +
            "erify button should be displayed")]
        public virtual void T87_WhenIClickOnCreateFormFromExistingAndSelectADifferentStudyThenVerifyButtonShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T87_When I click on Create Form from Existing and select a different study then v" +
                    "erify button should be displayed", null, ((string[])(null)));
#line 581
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 582
 testRunner.When("I click on the Link \"Create Form from Existing\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 583
 testRunner.And("I select the pop up having title \"Create Form from Existing\" and partial message " +
                    "\"Please select a Study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 584
 testRunner.And("I click on the Link \"Study2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 585
 testRunner.And("I click on the Link \"FormName8\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T88_When the user clicks on Forms tab then Forms page should be displayed")]
        public virtual void T88_WhenTheUserClicksOnFormsTabThenFormsPageShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T88_When the user clicks on Forms tab then Forms page should be displayed", null, ((string[])(null)));
#line 587
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 588
 testRunner.When("I click on the \"Forms\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 589
 testRunner.Then("I should see the \"Forms\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T89_When I give the unique name for the form,form label and table name and click " +
            "verify button and validate the background colours for codelist")]
        public virtual void T89_WhenIGiveTheUniqueNameForTheFormFormLabelAndTableNameAndClickVerifyButtonAndValidateTheBackgroundColoursForCodelist()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T89_When I give the unique name for the form,form label and table name and click " +
                    "verify button and validate the background colours for codelist", null, ((string[])(null)));
#line 591
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "FormName",
                        "FormLabel",
                        "TableName"});
            table19.AddRow(new string[] {
                        "FormName16",
                        "FormLabel6",
                        "TableName16"});
#line 592
 testRunner.When(": I enter the form name, form label and table name with following details", ((string)(null)), table19, "When ");
#line 595
 testRunner.And("I click on verify Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 596
 testRunner.Then("I should see orange background in target codelist when duplicate items in codelis" +
                    "ts as source and target are same.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T90_When I ensure codelists and items are different in source and target then cod" +
            "elist include checkbox should be enabled")]
        public virtual void T90_WhenIEnsureCodelistsAndItemsAreDifferentInSourceAndTargetThenCodelistIncludeCheckboxShouldBeEnabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T90_When I ensure codelists and items are different in source and target then cod" +
                    "elist include checkbox should be enabled", null, ((string[])(null)));
#line 599
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 600
    testRunner.When("I change the items in target so that source and target are different but already " +
                    "present in the target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 601
    testRunner.And("I change the codelist in target so that source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 602
 testRunner.Then("I should see the include checkBox is in enabled state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T91_When I have same domain items but codelists are different then include button" +
            " for codelist should be disabled")]
        public virtual void T91_WhenIHaveSameDomainItemsButCodelistsAreDifferentThenIncludeButtonForCodelistShouldBeDisabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T91_When I have same domain items but codelists are different then include button" +
                    " for codelist should be disabled", null, ((string[])(null)));
#line 604
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 605
testRunner.When("I change the domain items in source and target as unique", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 606
testRunner.Then("I can edit the codelist", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 607
testRunner.And("I edit the codelist to unique in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 608
testRunner.And("I click on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 609
testRunner.When("I edit again the domain item to be same in source and target", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 610
testRunner.And("I click  on verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 611
testRunner.Then("I see the codelist include checkbox is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T92_When I ensure items are different in source and target then codelist fields a" +
            "re editable")]
        public virtual void T92_WhenIEnsureItemsAreDifferentInSourceAndTargetThenCodelistFieldsAreEditable()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T92_When I ensure items are different in source and target then codelist fields a" +
                    "re editable", null, ((string[])(null)));
#line 613
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 614
  testRunner.When("I see the items in source and target are different", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 615
  testRunner.Then("I should see the codelist fields are editable", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T93_When I navigate back to the Home page and click on Delete all previously crea" +
            "ted studies then I should see all those studies")]
        public virtual void T93_WhenINavigateBackToTheHomePageAndClickOnDeleteAllPreviouslyCreatedStudiesThenIShouldSeeAllThoseStudies()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T93_When I navigate back to the Home page and click on Delete all previously crea" +
                    "ted studies then I should see all those studies", null, ((string[])(null)));
#line 617
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 618
 testRunner.When("I click on the Cancel button on the popup page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 619
 testRunner.And("I click breadcrumb item \"Home\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "StudyName"});
            table20.AddRow(new string[] {
                        "Import_Study1"});
            table20.AddRow(new string[] {
                        "Study1"});
            table20.AddRow(new string[] {
                        "Study3"});
#line 620
 testRunner.And("I Search for the study in the studies list of Home page and delete the study", ((string)(null)), table20, "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "StudyName"});
            table21.AddRow(new string[] {
                        "Import_Study1"});
            table21.AddRow(new string[] {
                        "Study1"});
            table21.AddRow(new string[] {
                        "Study3"});
#line 625
testRunner.Then("I should not see these studies in the Home page", ((string)(null)), table21, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

