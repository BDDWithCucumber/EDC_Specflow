// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.Designer
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("US63112")]
    public partial class US63112Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "US63112_US63121_all the check boxes should be checked by default_same study.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "US63112", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T01_When I Login to Designer then I see the Designer home page")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US68936.1")]
        public virtual void T01_WhenILoginToDesignerThenISeeTheDesignerHomePage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T01_When I Login to Designer then I see the Designer home page", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US68936.1"});
#line 4
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 testRunner.Given("I logged in to Designer", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
 testRunner.Then("I see Designer Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T02_When I Import Study of 5.9 to Designer then I see message \"Study has been suc" +
            "cessfully added\" and status as complete")]
        public virtual void T02_WhenIImportStudyOf5_9ToDesignerThenISeeMessageStudyHasBeenSuccessfullyAddedAndStatusAsComplete()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T02_When I Import Study of 5.9 to Designer then I see message \"Study has been suc" +
                    "cessfully added\" and status as complete", null, ((string[])(null)));
#line 8
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
    testRunner.When("I click on the Home Button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 10
 testRunner.And("I click on the Link \"Import Study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
 testRunner.And("I import a study \"Import_Study59_US63112_SameStudy.zip\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.And("Enter the unique study name \"Import_Study1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 13
 testRunner.And("Select the sponsor name \"Sponsor1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
 testRunner.And("I click on the Save button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 17
 testRunner.And("I should see the notification \"Study has been successfully added\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.And("I click on the Link \"View Study Jobs\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.Then("I should see the status of the study \"Study Import (Import_Study59)\" in \"Complete" +
                    "\" state", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T03_When the user clicks on Forms tab then Forms page should be displayed")]
        public virtual void T03_WhenTheUserClicksOnFormsTabThenFormsPageShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T03_When the user clicks on Forms tab then Forms page should be displayed", null, ((string[])(null)));
#line 21
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 22
 testRunner.When("I click on the \"Forms\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
 testRunner.Then("I should see the \"Forms\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T04_When user opens the pop up page then all the checkboxes should be checked by " +
            "default and the save button should be in disabled state")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.6")]
        public virtual void T04_WhenUserOpensThePopUpPageThenAllTheCheckboxesShouldBeCheckedByDefaultAndTheSaveButtonShouldBeInDisabledState()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T04_When user opens the pop up page then all the checkboxes should be checked by " +
                    "default and the save button should be in disabled state", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.2.6"});
#line 26
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 27
 testRunner.When("I click on the Link \"Create Form from Existing\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
 testRunner.And("I select the pop up having title \"Create Form from Existing\" and partial message " +
                    "\"Please select a Study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And("I click on the Link \"Import_Study59\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And("I click on the Link \"AutoBuild_Form03\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.Then("user should see Verify button before the save button at the top of the pop up win" +
                    "dow", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 32
 testRunner.And("user should see Verify button before the save button at the bottom of the pop up " +
                    "window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Target1",
                        "Include1"});
            table1.AddRow(new string[] {
                        "CodeList1_Yes04",
                        "checked"});
            table1.AddRow(new string[] {
                        "CodeList2_Yes04",
                        "checked"});
            table1.AddRow(new string[] {
                        "CodeList3_Yes04",
                        "checked"});
            table1.AddRow(new string[] {
                        "AB_Integer04",
                        "checked"});
            table1.AddRow(new string[] {
                        "AB_Float04",
                        "checked"});
            table1.AddRow(new string[] {
                        "AB_Text04",
                        "checked"});
            table1.AddRow(new string[] {
                        "AB_Date04",
                        "checked"});
            table1.AddRow(new string[] {
                        "CodeList1_Yes05",
                        "checked"});
            table1.AddRow(new string[] {
                        "CodeList2_No05",
                        "checked"});
            table1.AddRow(new string[] {
                        "CodeList3_Yes05",
                        "checked"});
            table1.AddRow(new string[] {
                        "AB_Integer05",
                        "checked"});
            table1.AddRow(new string[] {
                        "AB_Float05",
                        "checked"});
            table1.AddRow(new string[] {
                        "AB_Text05",
                        "checked"});
            table1.AddRow(new string[] {
                        "AB_Date05",
                        "checked"});
            table1.AddRow(new string[] {
                        "JAPANSTY",
                        "checked"});
            table1.AddRow(new string[] {
                        "BRNINJAP",
                        "checked"});
            table1.AddRow(new string[] {
                        "JPARENTS",
                        "checked"});
#line 33
 testRunner.And("I should see the all the checkboxes in enabled state and checked by default for t" +
                    "he Domain Items", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Target2",
                        "Include2"});
            table2.AddRow(new string[] {
                        "AB_Color",
                        "checked"});
            table2.AddRow(new string[] {
                        "AB_Color",
                        "checked"});
            table2.AddRow(new string[] {
                        "AB_Times",
                        "checked"});
            table2.AddRow(new string[] {
                        "XYN",
                        "checked"});
            table2.AddRow(new string[] {
                        "AB_Gender",
                        "checked"});
            table2.AddRow(new string[] {
                        "RACE_CD",
                        "checked"});
            table2.AddRow(new string[] {
                        "RACE_CD",
                        "checked"});
            table2.AddRow(new string[] {
                        "AB_Form03_CountInteger",
                        "checked"});
            table2.AddRow(new string[] {
                        "AB_Form07_CreatedDate",
                        "checked"});
            table2.AddRow(new string[] {
                        "XYN",
                        "checked"});
            table2.AddRow(new string[] {
                        "XYN",
                        "checked"});
            table2.AddRow(new string[] {
                        "JPPAR",
                        "checked"});
#line 52
   testRunner.And("I should see all the checkboxes in enabled state and checked by default for the c" +
                    "odelist", ((string)(null)), table2, "And ");
#line 66
   testRunner.And("I should see the Save button in disabled state at top of the pop up window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
   testRunner.And("I should see the Save button in disabled state at bottom of the pop up window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T05_When I click on Verify for the same study then the System should highlight al" +
            "l the duplicate fields in orange color and unchecked and the Include checkbox sh" +
            "ould be disabled")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.3")]
        public virtual void T05_WhenIClickOnVerifyForTheSameStudyThenTheSystemShouldHighlightAllTheDuplicateFieldsInOrangeColorAndUncheckedAndTheIncludeCheckboxShouldBeDisabled()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T05_When I click on Verify for the same study then the System should highlight al" +
                    "l the duplicate fields in orange color and unchecked and the Include checkbox sh" +
                    "ould be disabled", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.2.3"});
#line 70
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 71
 testRunner.When("I click on Verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 72
 testRunner.Then("I should see the Save button in enabled state at top of the pop up window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 73
 testRunner.And("I should see the Save button in enabled state at bottom of the pop up window", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Target1",
                        "Include1"});
            table3.AddRow(new string[] {
                        "CodeList1_Yes04",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "CodeList2_Yes04",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "CodeList3_Yes04",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "AB_Integer04",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "AB_Float04",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "AB_Text04",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "AB_Date04",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "CodeList1_Yes05",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "CodeList2_No05",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "CodeList3_Yes05",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "AB_Integer05",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "AB_Float05",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "AB_Text05",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "AB_Date05",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "JAPANSTY",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "BRNINJAP",
                        "unchecked"});
            table3.AddRow(new string[] {
                        "JPARENTS",
                        "unchecked"});
#line 74
 testRunner.And("I should see all the checkboxes in disabled state and unchecked by default for th" +
                    "e Domain Items", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Source2",
                        "Include2"});
            table4.AddRow(new string[] {
                        "AB_Color",
                        "unchecked"});
            table4.AddRow(new string[] {
                        "AB_Color",
                        "unchecked"});
            table4.AddRow(new string[] {
                        "AB_Times",
                        "unchecked"});
            table4.AddRow(new string[] {
                        "XYN",
                        "unchecked"});
            table4.AddRow(new string[] {
                        "AB_Gender",
                        "unchecked"});
            table4.AddRow(new string[] {
                        "XYN",
                        "unchecked"});
            table4.AddRow(new string[] {
                        "XYN",
                        "unchecked"});
            table4.AddRow(new string[] {
                        "AB_Form03_CountInteger",
                        "unchecked"});
            table4.AddRow(new string[] {
                        "AB_Form07_CreatedDate",
                        "unchecked"});
            table4.AddRow(new string[] {
                        "XYN",
                        "unchecked"});
            table4.AddRow(new string[] {
                        "XYN",
                        "unchecked"});
            table4.AddRow(new string[] {
                        "JPPAR",
                        "unchecked"});
#line 93
 testRunner.And("I should see all the checkboxes in disabled state and unchecked by default for th" +
                    "e Codelist", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Target1"});
            table5.AddRow(new string[] {
                        "AB_Table04"});
            table5.AddRow(new string[] {
                        "CodeList1_Yes04"});
            table5.AddRow(new string[] {
                        "CodeList2_Yes04"});
            table5.AddRow(new string[] {
                        "CodeList3_Yes04"});
            table5.AddRow(new string[] {
                        "AB_Integer04"});
            table5.AddRow(new string[] {
                        "AB_Float04"});
            table5.AddRow(new string[] {
                        "AB_Text04"});
            table5.AddRow(new string[] {
                        "AB_Date04"});
            table5.AddRow(new string[] {
                        "AB_Table05"});
            table5.AddRow(new string[] {
                        "CodeList1_Yes05"});
            table5.AddRow(new string[] {
                        "CodeList2_No05"});
            table5.AddRow(new string[] {
                        "CodeList3_Yes05"});
            table5.AddRow(new string[] {
                        "AB_Integer05"});
            table5.AddRow(new string[] {
                        "AB_Float05"});
            table5.AddRow(new string[] {
                        "AB_Text05"});
            table5.AddRow(new string[] {
                        "AB_Date05"});
            table5.AddRow(new string[] {
                        "DEMO"});
            table5.AddRow(new string[] {
                        "JAPANSTY"});
            table5.AddRow(new string[] {
                        "BRNINJAP"});
            table5.AddRow(new string[] {
                        "JPARENTS"});
#line 107
   testRunner.And("should see all the \"Domains\" and Domain Items in orange color", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Target2"});
            table6.AddRow(new string[] {
                        "AB_Color"});
            table6.AddRow(new string[] {
                        "AB_Color"});
            table6.AddRow(new string[] {
                        "AB_Times"});
            table6.AddRow(new string[] {
                        "XYN"});
            table6.AddRow(new string[] {
                        "AB_Gender"});
            table6.AddRow(new string[] {
                        "XYN"});
            table6.AddRow(new string[] {
                        "XYN"});
            table6.AddRow(new string[] {
                        "AB_Form03_CountInteger"});
            table6.AddRow(new string[] {
                        "AB_Form07_CreatedDate"});
            table6.AddRow(new string[] {
                        "XYN"});
            table6.AddRow(new string[] {
                        "XYN"});
            table6.AddRow(new string[] {
                        "JPPAR"});
#line 129
 testRunner.And("I should see all the Codelist in orange color", ((string)(null)), table6, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T06_When the user renames the Domain Item then the Domain Item should be automati" +
            "cally checked by the system upon rename")]
        public virtual void T06_WhenTheUserRenamesTheDomainItemThenTheDomainItemShouldBeAutomaticallyCheckedByTheSystemUponRename()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T06_When the user renames the Domain Item then the Domain Item should be automati" +
                    "cally checked by the system upon rename", null, ((string[])(null)));
#line 144
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "SourceForDoamin",
                        "TargetForDomain",
                        "TargetRenameForDomain"});
            table7.AddRow(new string[] {
                        "11",
                        "CodeList1_Yes04",
                        "CodeList1_Yes04",
                        "CodeList1_Yes04_Rename"});
#line 145
 testRunner.When("I rename the DomainItem as below", ((string)(null)), table7, "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row"});
            table8.AddRow(new string[] {
                        "18"});
#line 148
 testRunner.And("I expand the domain of row", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "SourceForDoamin",
                        "TargetForDomain",
                        "TargetRenameForDomain"});
            table9.AddRow(new string[] {
                        "20",
                        "CodeList2_No05",
                        "CodeList2_No05",
                        "CodeList2_No05_Rename"});
#line 151
 testRunner.And("I rename the DomainItem as below", ((string)(null)), table9, "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row"});
            table10.AddRow(new string[] {
                        "26"});
#line 154
 testRunner.And("I expand the domain of row", ((string)(null)), table10, "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "SourceForDoamin",
                        "TargetForDomain",
                        "TargetRenameForDomain"});
            table11.AddRow(new string[] {
                        "27",
                        "JAPANSTY",
                        "JAPANSTY",
                        "JAPANSTY_Rename"});
#line 157
 testRunner.And("I rename the DomainItem as below", ((string)(null)), table11, "And ");
#line 160
 testRunner.And("I click on Verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForDomain"});
            table12.AddRow(new string[] {
                        "11",
                        "CodeList1_Yes04_Rename"});
            table12.AddRow(new string[] {
                        "20",
                        "CodeList2_No05_Rename"});
            table12.AddRow(new string[] {
                        "27",
                        "JAPANSTY_Rename"});
#line 161
 testRunner.Then("I should see the checkbox in enabled state and checked by default for the Domain " +
                    "Item", ((string)(null)), table12, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForDomain"});
            table13.AddRow(new string[] {
                        "11",
                        "CodeList1_Yes04_Rename"});
            table13.AddRow(new string[] {
                        "20",
                        "CodeList2_No05_Rename"});
            table13.AddRow(new string[] {
                        "27",
                        "JAPANSTY_Rename"});
#line 166
 testRunner.And("I shouldnot see the orange background color for the Domain Item", ((string)(null)), table13, "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForCodelist"});
            table14.AddRow(new string[] {
                        "11",
                        "XYN"});
            table14.AddRow(new string[] {
                        "20",
                        "XYN"});
            table14.AddRow(new string[] {
                        "27",
                        "XYN"});
#line 171
 testRunner.And("I should see the Target Codelist textbox in enabled state as below", ((string)(null)), table14, "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "IncludeForCodelist",
                        "TargetForCodelist"});
            table15.AddRow(new string[] {
                        "11",
                        "disabled",
                        "XYN"});
            table15.AddRow(new string[] {
                        "20",
                        "disabled",
                        "XYN"});
            table15.AddRow(new string[] {
                        "27",
                        "disabled",
                        "XYN"});
#line 176
 testRunner.And("the CodeList Include Checkbox should be unchecked and disabled for the below Code" +
                    "lists", ((string)(null)), table15, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T07_When I click on Create Form from Existing and select a same study then verify" +
            " button should be displayed")]
        public virtual void T07_WhenIClickOnCreateFormFromExistingAndSelectASameStudyThenVerifyButtonShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T07_When I click on Create Form from Existing and select a same study then verify" +
                    " button should be displayed", null, ((string[])(null)));
#line 182
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForCodelist",
                        "TargetRenameForCodelist"});
            table16.AddRow(new string[] {
                        "11",
                        "XYN",
                        "XYN_Rename1"});
            table16.AddRow(new string[] {
                        "20",
                        "XYN",
                        "XYN_Rename2"});
            table16.AddRow(new string[] {
                        "27",
                        "XYN",
                        "XYN_Rename3"});
#line 183
 testRunner.When("I rename the Codelist as below", ((string)(null)), table16, "When ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForCodelist"});
            table17.AddRow(new string[] {
                        "11",
                        "XYN_Rename1"});
            table17.AddRow(new string[] {
                        "20",
                        "XYN_Rename2"});
            table17.AddRow(new string[] {
                        "27",
                        "XYN_Rename3"});
#line 188
 testRunner.Then("I should see the renamed Codelist as below", ((string)(null)), table17, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "IncludeForCodelist",
                        "TargetForCodelist"});
            table18.AddRow(new string[] {
                        "11",
                        "enabled",
                        "XYN_Rename1"});
            table18.AddRow(new string[] {
                        "20",
                        "enabled",
                        "XYN_Rename2"});
            table18.AddRow(new string[] {
                        "27",
                        "enabled",
                        "XYN_Rename3"});
#line 193
 testRunner.And("the CodeList Include Checkbox should be checked and enabled for the below Codelis" +
                    "ts", ((string)(null)), table18, "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForCodelist"});
            table19.AddRow(new string[] {
                        "11",
                        "XYN_Rename1"});
            table19.AddRow(new string[] {
                        "20",
                        "XYN_Rename2"});
            table19.AddRow(new string[] {
                        "27",
                        "XYN_Rename3"});
#line 198
 testRunner.And("I shouldnot see the Orange background color for the codelists", ((string)(null)), table19, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T08_When user renames the first codelist item then all the similar codelist items" +
            " will be renamed")]
        public virtual void T08_WhenUserRenamesTheFirstCodelistItemThenAllTheSimilarCodelistItemsWillBeRenamed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T08_When user renames the first codelist item then all the similar codelist items" +
                    " will be renamed", null, ((string[])(null)));
#line 204
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 205
 testRunner.When("I click on Verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForCodelist"});
            table20.AddRow(new string[] {
                        "11",
                        "XYN_Rename1"});
            table20.AddRow(new string[] {
                        "20",
                        "XYN_Rename1"});
            table20.AddRow(new string[] {
                        "27",
                        "XYN_Rename1"});
#line 206
 testRunner.Then("I should see the renamed Codelist as below", ((string)(null)), table20, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T09_When user unchecks the Domain Item then validation should not happen for the " +
            "entire record upon verify")]
        public virtual void T09_WhenUserUnchecksTheDomainItemThenValidationShouldNotHappenForTheEntireRecordUponVerify()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T09_When user unchecks the Domain Item then validation should not happen for the " +
                    "entire record upon verify", null, ((string[])(null)));
#line 212
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForDomain"});
            table21.AddRow(new string[] {
                        "11",
                        "CodeList1_Yes04_Rename"});
            table21.AddRow(new string[] {
                        "20",
                        "CodeList2_No05_Rename"});
            table21.AddRow(new string[] {
                        "27",
                        "JAPANSTY_Rename"});
#line 213
 testRunner.When("I Uncheck the Include checkbox for Domain Item", ((string)(null)), table21, "When ");
#line 218
 testRunner.And("I click on Verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForCodelist"});
            table22.AddRow(new string[] {
                        "11",
                        "XYN_Rename1"});
            table22.AddRow(new string[] {
                        "20",
                        "XYN_Rename1"});
            table22.AddRow(new string[] {
                        "27",
                        "XYN_Rename1"});
#line 219
 testRunner.Then("the CodeList Include Checkbox should be unchecked and disabled automatically for " +
                    "codelists", ((string)(null)), table22, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForDomain"});
            table23.AddRow(new string[] {
                        "11",
                        "CodeList1_Yes04_Rename"});
            table23.AddRow(new string[] {
                        "20",
                        "CodeList2_No05_Rename"});
            table23.AddRow(new string[] {
                        "27",
                        "JAPANSTY_Rename"});
#line 224
 testRunner.And("the Domain Item textbox is disabled for Domain Item", ((string)(null)), table23, "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForCodelist"});
            table24.AddRow(new string[] {
                        "11",
                        "XYN_Rename1"});
            table24.AddRow(new string[] {
                        "20",
                        "XYN_Rename1"});
            table24.AddRow(new string[] {
                        "27",
                        "XYN_Rename1"});
#line 229
 testRunner.And("the CodeList textbox is disabled for CodeList", ((string)(null)), table24, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T10_When the user checks")]
        public virtual void T10_WhenTheUserChecks()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T10_When the user checks", null, ((string[])(null)));
#line 235
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForDomain"});
            table25.AddRow(new string[] {
                        "11",
                        "CodeList1_Yes04_Rename"});
            table25.AddRow(new string[] {
                        "20",
                        "CodeList2_No05_Rename"});
            table25.AddRow(new string[] {
                        "27",
                        "JAPANSTY_Rename"});
#line 236
 testRunner.When("I check the Include checkbox for Domain Item", ((string)(null)), table25, "When ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForDomain"});
            table26.AddRow(new string[] {
                        "11",
                        "CodeList1_Yes04_Rename"});
            table26.AddRow(new string[] {
                        "20",
                        "CodeList2_No05_Rename"});
            table26.AddRow(new string[] {
                        "27",
                        "JAPANSTY_Rename"});
#line 241
 testRunner.Then("the Domain Item textbox is enabled for Domain Item", ((string)(null)), table26, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "IncludeForCodelist",
                        "TargetForCodelist"});
            table27.AddRow(new string[] {
                        "11",
                        "enabled",
                        "XYN_Rename1"});
            table27.AddRow(new string[] {
                        "20",
                        "enabled",
                        "XYN_Rename1"});
            table27.AddRow(new string[] {
                        "27",
                        "enabled",
                        "XYN_Rename1"});
#line 246
 testRunner.And("the CodeList Include Checkbox should be checked and enabled for the below Codelis" +
                    "ts", ((string)(null)), table27, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T11_When the user renames the Domain Item name then the system should throw the e" +
            "rror that the Item Name is already in use")]
        public virtual void T11_WhenTheUserRenamesTheDomainItemNameThenTheSystemShouldThrowTheErrorThatTheItemNameIsAlreadyInUse()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T11_When the user renames the Domain Item name then the system should throw the e" +
                    "rror that the Item Name is already in use", null, ((string[])(null)));
#line 252
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 253
 testRunner.When("I click on Verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "SourceForDoamin",
                        "TargetForDomain",
                        "TargetRenameForDomain"});
            table28.AddRow(new string[] {
                        "12",
                        "CodeList2_Yes04",
                        "CodeList2_Yes04",
                        "CodeList1_Yes04_Rename"});
            table28.AddRow(new string[] {
                        "21",
                        "CodeList3_Yes05",
                        "CodeList3_Yes05",
                        "CodeList2_No05_Rename"});
            table28.AddRow(new string[] {
                        "28",
                        "BRNINJAP",
                        "BRNINJAP",
                        "JAPANSTY_Rename"});
#line 254
 testRunner.And("I rename the DomainItem as below", ((string)(null)), table28, "And ");
#line 259
 testRunner.And("I click on Verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row"});
            table29.AddRow(new string[] {
                        "12"});
            table29.AddRow(new string[] {
                        "21"});
            table29.AddRow(new string[] {
                        "28"});
#line 260
 testRunner.Then("I should see the error message \"Item name is already in use.\"", ((string)(null)), table29, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T12_When the user renames the Domain name then the system should throw the alread" +
            "y in use error upon verify")]
        public virtual void T12_WhenTheUserRenamesTheDomainNameThenTheSystemShouldThrowTheAlreadyInUseErrorUponVerify()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T12_When the user renames the Domain name then the system should throw the alread" +
                    "y in use error upon verify", null, ((string[])(null)));
#line 266
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 267
 testRunner.When("I click on Verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 268
 testRunner.And("I rename the Domain \"AB_Table05\" to \"AB_Table04\" in row \"17\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 269
 testRunner.And("I click on Verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 270
 testRunner.Then("I should see the error message \"Item name is already in use.\" in row \"17\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T13_When the user clicks on Forms tab then Forms page should be displayed")]
        public virtual void T13_WhenTheUserClicksOnFormsTabThenFormsPageShouldBeDisplayed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T13_When the user clicks on Forms tab then Forms page should be displayed", null, ((string[])(null)));
#line 272
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 273
 testRunner.When("I click on cancel button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 274
 testRunner.And("I click on the \"Forms\" tab", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 275
 testRunner.Then("I should see the \"Forms\" page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T14_When the user unchecks the Include checkbox of Codelist then validation shoul" +
            "d not happen for Codelist upon verify")]
        public virtual void T14_WhenTheUserUnchecksTheIncludeCheckboxOfCodelistThenValidationShouldNotHappenForCodelistUponVerify()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T14_When the user unchecks the Include checkbox of Codelist then validation shoul" +
                    "d not happen for Codelist upon verify", null, ((string[])(null)));
#line 277
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 278
 testRunner.When("I click on the Link \"Create Form from Existing\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 279
 testRunner.And("I select the pop up having title \"Create Form from Existing\" and partial message " +
                    "\"Please select a Study\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 280
 testRunner.And("I click on the Link \"Import_Study59\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 281
 testRunner.And("I click on the Link \"AutoBuild_Form03\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row"});
            table30.AddRow(new string[] {
                        "18"});
            table30.AddRow(new string[] {
                        "26"});
#line 282
 testRunner.And("I expand the domain of row", ((string)(null)), table30, "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForCodelist"});
            table31.AddRow(new string[] {
                        "11",
                        "XYN"});
            table31.AddRow(new string[] {
                        "20",
                        "XYN"});
            table31.AddRow(new string[] {
                        "27",
                        "XYN"});
#line 286
 testRunner.And("I Uncheck the Include checkbox for Codelist Item", ((string)(null)), table31, "And ");
#line 291
 testRunner.And("I click on Verify button", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForCodelist"});
            table32.AddRow(new string[] {
                        "11",
                        "XYN"});
            table32.AddRow(new string[] {
                        "20",
                        "XYN"});
            table32.AddRow(new string[] {
                        "27",
                        "XYN"});
#line 292
 testRunner.Then("I shouldnot see the Orange background color for the codelists", ((string)(null)), table32, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForCodelist"});
            table33.AddRow(new string[] {
                        "11",
                        "XYN"});
            table33.AddRow(new string[] {
                        "20",
                        "XYN"});
            table33.AddRow(new string[] {
                        "27",
                        "XYN"});
#line 297
 testRunner.And("I should see the blue background color for the codelists", ((string)(null)), table33, "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Row",
                        "TargetForCodelist"});
            table34.AddRow(new string[] {
                        "11",
                        "XYN"});
            table34.AddRow(new string[] {
                        "20",
                        "XYN"});
            table34.AddRow(new string[] {
                        "27",
                        "XYN"});
#line 302
 testRunner.Then("the CodeList Include Checkbox should be unchecked and disabled automatically for " +
                    "codelists", ((string)(null)), table34, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("15_When I navigate back to the Home page and click on Delete all previously creat" +
            "ed studies then I should see all those studies")]
        public virtual void _15_WhenINavigateBackToTheHomePageAndClickOnDeleteAllPreviouslyCreatedStudiesThenIShouldSeeAllThoseStudies()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("15_When I navigate back to the Home page and click on Delete all previously creat" +
                    "ed studies then I should see all those studies", null, ((string[])(null)));
#line 308
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 309
 testRunner.When("I click breadcrumb item \"Home\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "StudyName"});
            table35.AddRow(new string[] {
                        "Import_Study59_US63112_SameStudy"});
#line 310
 testRunner.And("I Search for the study in the studies list of Home page and delete the study", ((string)(null)), table35, "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "StudyName"});
            table36.AddRow(new string[] {
                        "Import_Study59_US63112_SameStudy"});
#line 313
testRunner.Then("I should not see these studies in the Home page", ((string)(null)), table36, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

