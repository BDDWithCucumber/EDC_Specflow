// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.Labs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("PopulateLabInformationLabManagementChanges")]
    public partial class PopulateLabInformationLabManagementChangesFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Labs_Populate Lab Information on eCRF based on Lab Management changes_impacts.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "PopulateLabInformationLabManagementChanges", @"		Test Summary:

		1. Verify Lab Name, Company, Lab Address and Country are populated on Lab eCRF based on the Lab ID selected.
		2. Verify Lab Name, Company, Lab Address and Country are updated on Lab eCRF based on the changes made to these fields on Lab Management.
		3. Verify Lab Name, Company, Lab Address and Country are cleared when Site is de-associated from Lab.
		4. Verify Lab Name, Company, Lab Address and Country are cleared when Lab is de-associated from Site.
		5. Verify changed information on item history for Lab Information fields.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01_Login to Datalabs")]
        public virtual void _01_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_Login to Datalabs", null, ((string[])(null)));
#line 16
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 17
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 18
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02_Delete a study")]
        public virtual void _02_DeleteAStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02_Delete a study", null, ((string[])(null)));
#line 20
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 21
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("03_Upload and publish the study.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US52354.1")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US47059.1")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US52804.1")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US58955.1")]
        public virtual void _03_UploadAndPublishTheStudy_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03_Upload and publish the study.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US52354.1",
                        "ObjectiveEvidence",
                        "ReqID:US47059.1",
                        "ObjectiveEvidence",
                        "ReqID:US52804.1",
                        "ObjectiveEvidence",
                        "ReqID:US58955.1"});
#line 37
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 38
    testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
    testRunner.And("I upload a study \"Test4500_Labs_Original.zip\" with study label \"Test4500_Codleist" +
                    "Linkages_Base\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
   testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table1.AddRow(new string[] {
                        "Publishing of Study file (Test4500_CodleistLinkages_Base) - complete."});
#line 41
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("04_Add sites and associate user.")]
        public virtual void _04_AddSitesAndAssociateUser_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04_Add sites and associate user.", null, ((string[])(null)));
#line 45
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 46
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 47
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteId",
                        "SiteName",
                        "Address1",
                        "Address2",
                        "Address3",
                        "Address4",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "SiteStatus",
                        "DCFWorkflow",
                        "ExternalSource",
                        "ExternalId"});
            table2.AddRow(new string[] {
                        "01",
                        "Site",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        "-"});
#line 48
 testRunner.And("I enter sites details and Save", ((string)(null)), table2, "And ");
#line 51
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.Then("I see Site details page for \"01-Site\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("05_Add Labs")]
        public virtual void _05_AddLabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05_Add Labs", null, ((string[])(null)));
#line 57
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 58
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 59
 testRunner.And("I click Link \"Lab Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.And("I click Link \"Manage Laboratories\" In Lab Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "LabId",
                        "LaboratoryName",
                        "Company",
                        "Department",
                        "Address1",
                        "Address2",
                        "Address3",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "LaboratoryStatus",
                        "ContactPerson"});
            table3.AddRow(new string[] {
                        "L01",
                        "Lab01",
                        "Perceptive",
                        "EDC",
                        "Building No 20",
                        "Mindspace",
                        "Hitech city",
                        "Hyderabad",
                        "TG",
                        "500081",
                        "INDIA(IND)",
                        "",
                        "11111111",
                        "22222222",
                        "Active",
                        "Mr.XYZ"});
#line 61
 testRunner.And("I enter labs details and Save", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "LabId",
                        "LaboratoryName",
                        "Company",
                        "Department",
                        "Address1",
                        "Address2",
                        "Address3",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "LaboratoryStatus",
                        "ContactPerson"});
            table4.AddRow(new string[] {
                        "L01",
                        "Lab01",
                        "Perceptive",
                        "EDC",
                        "Building No 20",
                        "Mindspace",
                        "Hitech city",
                        "Hyderabad",
                        "TG",
                        "500081",
                        "INDIA(IND)",
                        "INDIA",
                        "11111111",
                        "22222222",
                        "Active",
                        "Mr.XYZ"});
#line 64
 testRunner.Then("I see labs with details in lab grid", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("06_Associate Lab L01 to 01-Site")]
        public virtual void _06_AssociateLabL01To01_Site()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06_Associate Lab L01 to 01-Site", null, ((string[])(null)));
#line 69
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 70
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 71
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.And("I click ActionPalette Item \"Associate Lab(s)\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.And("I add and save lab id \"L01\" and lab name \"Lab01\" to associated labs in AssociateL" +
                    "abs page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.And("I select sub tab \"Labs\" in site page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "LabId",
                        "LaboratoryName",
                        "Company",
                        "Department",
                        "LaboratoryStatus"});
            table5.AddRow(new string[] {
                        "L01",
                        "Lab01",
                        "Perceptive",
                        "EDC",
                        "Active"});
#line 76
 testRunner.Then("I see lab data in labs tab of Site in SitePage", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("07_Select Complete Change History in User preferences")]
        public virtual void _07_SelectCompleteChangeHistoryInUserPreferences()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("07_Select Complete Change History in User preferences", null, ((string[])(null)));
#line 80
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 81
 testRunner.When("I select DataManagerPortal item \"User Preferences\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 82
 testRunner.And("I enable CompleteChangeHistory in UserPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
 testRunner.And("I click save button in UserPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
 testRunner.Then("I see Save Success message on User Preferences page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("08_Add Patient")]
        public virtual void _08_AddPatient()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("08_Add Patient", null, ((string[])(null)));
#line 86
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 87
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 88
    testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table6.AddRow(new string[] {
                        "01",
                        "PAT",
                        "06/13/2018"});
#line 89
    testRunner.When("I add patient with below details.", ((string)(null)), table6, "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table7.AddRow(new string[] {
                        "01-PAT"});
#line 92
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table7, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("09_Select and enroll patient 01-PAT.")]
        public virtual void _09_SelectAndEnrollPatient01_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("09_Select and enroll patient 01-PAT.", null, ((string[])(null)));
#line 96
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 97
      testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 98
      testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
      testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table8.AddRow(new string[] {
                        "01",
                        "06/13/2018",
                        "Yes"});
#line 100
      testRunner.When("I enroll the patient \"01-PAT\" with below data.", ((string)(null)), table8, "When ");
#line 103
      testRunner.Then("I see patient \"01-PAT\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("10_Expand the Visit (Week 2) event and open LabForm1 and enter the LAB ID.")]
        public virtual void _10_ExpandTheVisitWeek2EventAndOpenLabForm1AndEnterTheLABID_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("10_Expand the Visit (Week 2) event and open LabForm1 and enter the LAB ID.", null, ((string[])(null)));
#line 106
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 107
   testRunner.When("I expand \"Visit (Week 2)\" to select and open \"LabForm1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 108
      testRunner.And("I click \"Checkout\" button on \"LabForm1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table9.AddRow(new string[] {
                        "Lab ID",
                        "Lab01 (L01)",
                        "ListBox"});
#line 109
      testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table9, "And ");
#line 112
   testRunner.And("I click on \"Save & Close\" button on \"LabForm1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 113
   testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("11_Verify the lab data without form checkout.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US59775.1")]
        public virtual void _11_VerifyTheLabDataWithoutFormCheckout_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("11_Verify the lab data without form checkout.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US59775.1"});
#line 117
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 118
  testRunner.When("I expand \"Visit (Week 2)\" to select and open \"LabForm1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table10.AddRow(new string[] {
                        "Lab ID",
                        "Lab01 (L01)",
                        "Text"});
            table10.AddRow(new string[] {
                        "Lab Name",
                        "Lab01",
                        "Text"});
            table10.AddRow(new string[] {
                        "Company",
                        "Perceptive",
                        "Text"});
            table10.AddRow(new string[] {
                        "Lab Address",
                        "Building No 20 Mindspace Hitech city",
                        "Text"});
            table10.AddRow(new string[] {
                        "Country",
                        "INDIA",
                        "Text"});
#line 119
  testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("12_Verify the lab data on form checkout.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US59775.1")]
        public virtual void _12_VerifyTheLabDataOnFormCheckout_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("12_Verify the lab data on form checkout.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US59775.1"});
#line 129
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 130
  testRunner.When("I click \"Checkout\" button on \"LabForm1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table11.AddRow(new string[] {
                        "Lab Name",
                        "Lab01",
                        "Text"});
            table11.AddRow(new string[] {
                        "Company",
                        "Perceptive",
                        "Text"});
            table11.AddRow(new string[] {
                        "Lab Address",
                        "Building No 20 Mindspace Hitech city",
                        "Text"});
            table11.AddRow(new string[] {
                        "Country",
                        "INDIA",
                        "Text"});
#line 131
  testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table11, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("13_Select Change History icon for Q3.Response displays as \"Lab01\" and Reason as \"" +
            "Initial Entry[Derived]\" and Notes as \"Submitted\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.3,4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.4,5")]
        public virtual void _13_SelectChangeHistoryIconForQ3_ResponseDisplaysAsLab01AndReasonAsInitialEntryDerivedAndNotesAsSubmitted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("13_Select Change History icon for Q3.Response displays as \"Lab01\" and Reason as \"" +
                    "Initial Entry[Derived]\" and Notes as \"Submitted\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.3,4",
                        "ObjectiveEvidence",
                        "ReqId:US63247.4,5"});
#line 142
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 143
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Lab Name\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table12.AddRow(new string[] {
                        "",
                        "Lab01",
                        "Reason: Initial Entry[Derived]"});
#line 144
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("14_Select Change History icon for Q4.Response displays as \"Perceptive\" and Reason" +
            " as \"Initial Entry[Derived]\" and Notes as \"Submitted\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.3,4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.4,5")]
        public virtual void _14_SelectChangeHistoryIconForQ4_ResponseDisplaysAsPerceptiveAndReasonAsInitialEntryDerivedAndNotesAsSubmitted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("14_Select Change History icon for Q4.Response displays as \"Perceptive\" and Reason" +
                    " as \"Initial Entry[Derived]\" and Notes as \"Submitted\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.3,4",
                        "ObjectiveEvidence",
                        "ReqId:US63247.4,5"});
#line 151
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 152
 testRunner.When("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 153
 testRunner.And("I click icon \"changeHistory.gif\" for the flat question \"Company\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table13.AddRow(new string[] {
                        "",
                        "Perceptive",
                        "Reason: Initial Entry[Derived]"});
#line 154
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table13, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("15_Select Change History icon for Q5.Response displays as \"Building No 20 Mindspa" +
            "ce Hitechcity\" and Reason as \"Initial Entry[Derived]\" and Notes as \"Submitted\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.3,4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.4,5")]
        public virtual void _15_SelectChangeHistoryIconForQ5_ResponseDisplaysAsBuildingNo20MindspaceHitechcityAndReasonAsInitialEntryDerivedAndNotesAsSubmitted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("15_Select Change History icon for Q5.Response displays as \"Building No 20 Mindspa" +
                    "ce Hitechcity\" and Reason as \"Initial Entry[Derived]\" and Notes as \"Submitted\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.3,4",
                        "ObjectiveEvidence",
                        "ReqId:US63247.4,5"});
#line 160
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 161
 testRunner.When("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 162
 testRunner.And("I click icon \"changeHistory.gif\" for the flat question \"Lab Address\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table14.AddRow(new string[] {
                        "",
                        "Building No 20 Mindspace Hitech city",
                        "Reason: Initial Entry[Derived]"});
#line 163
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table14, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("16_Select Change History icon for Q6.Response displays as \"INDIA\" and Reason as \"" +
            "Initial Entry[Derived]\" and Notes as \"Submitted\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.3,4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.4,5")]
        public virtual void _16_SelectChangeHistoryIconForQ6_ResponseDisplaysAsINDIAAndReasonAsInitialEntryDerivedAndNotesAsSubmitted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("16_Select Change History icon for Q6.Response displays as \"INDIA\" and Reason as \"" +
                    "Initial Entry[Derived]\" and Notes as \"Submitted\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.3,4",
                        "ObjectiveEvidence",
                        "ReqId:US63247.4,5"});
#line 169
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 170
 testRunner.When("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 171
 testRunner.And("I click icon \"changeHistory.gif\" for the flat question \"Country\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table15.AddRow(new string[] {
                        "",
                        "INDIA",
                        "Reason: Initial Entry[Derived]"});
#line 172
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table15, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("17_Update Lab details")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.2")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.1")]
        public virtual void _17_UpdateLabDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("17_Update Lab details", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.2",
                        "ObjectiveEvidence",
                        "ReqId:US63247.1"});
#line 179
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 180
 testRunner.When("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 181
 testRunner.And("I click on \"cancel\" button on \"LabForm1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 182
 testRunner.And("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
 testRunner.And("I click Link \"Lab Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
 testRunner.And("I click Link \"Manage Laboratories\" In Lab Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "LabId",
                        "LaboratoryName",
                        "Company",
                        "Department",
                        "Address1",
                        "Address2",
                        "Address3",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "LaboratoryStatus",
                        "ContactPerson"});
            table16.AddRow(new string[] {
                        "L01",
                        "Lab01 Updated",
                        "Perceptive Informatics",
                        "EDC",
                        "",
                        "Mindspace",
                        "Hitech city",
                        "Hyderabad",
                        "TG",
                        "500081",
                        "UNITED STATES(USA)",
                        "",
                        "11111111",
                        "22222222",
                        "Active",
                        "Mr.XYZ"});
#line 185
 testRunner.And("I edit Lab \"L01\" And Save Lab with details", ((string)(null)), table16, "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "LabId",
                        "LaboratoryName",
                        "Company",
                        "Department",
                        "Address1",
                        "Address2",
                        "Address3",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "LaboratoryStatus",
                        "ContactPerson"});
            table17.AddRow(new string[] {
                        "L01",
                        "Lab01 Updated",
                        "Perceptive Informatics",
                        "EDC",
                        "",
                        "Mindspace",
                        "Hitech city",
                        "Hyderabad",
                        "TG",
                        "500081",
                        "UNITED STATES(USA)",
                        "",
                        "11111111",
                        "22222222",
                        "Active",
                        "Mr.XYZ"});
#line 188
 testRunner.Then("I see labs with details in lab grid", ((string)(null)), table17, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("18_Verify the lab data without form checkout.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.2")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.1")]
        public virtual void _18_VerifyTheLabDataWithoutFormCheckout_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("18_Verify the lab data without form checkout.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.2",
                        "ObjectiveEvidence",
                        "ReqId:US63247.1"});
#line 195
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 196
      testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 197
      testRunner.When("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 198
      testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
   testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LabForm1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table18.AddRow(new string[] {
                        "Lab ID",
                        "Lab01 Updated (L01)",
                        "Text"});
            table18.AddRow(new string[] {
                        "Lab Name",
                        "Lab01 Updated",
                        "Text"});
            table18.AddRow(new string[] {
                        "Company",
                        "Perceptive Informatics",
                        "Text"});
            table18.AddRow(new string[] {
                        "Lab Address",
                        "Mindspace Hitech city",
                        "Text"});
            table18.AddRow(new string[] {
                        "Country",
                        "UNITED STATES",
                        "Text"});
#line 200
   testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table18, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("19_Verify the lab data on form checkout.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US59775.2")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.1")]
        public virtual void _19_VerifyTheLabDataOnFormCheckout_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("19_Verify the lab data on form checkout.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US59775.2",
                        "ObjectiveEvidence",
                        "ReqId:US63247.1"});
#line 212
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 213
  testRunner.When("I click \"Checkout\" button on \"LabForm1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table19.AddRow(new string[] {
                        "Lab Name",
                        "Lab01 Updated",
                        "Text"});
            table19.AddRow(new string[] {
                        "Company",
                        "Perceptive Informatics",
                        "Text"});
            table19.AddRow(new string[] {
                        "Lab Address",
                        "Mindspace Hitech city",
                        "Text"});
            table19.AddRow(new string[] {
                        "Country",
                        "UNITED STATES",
                        "Text"});
#line 214
  testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table19, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("20_Select Change History icon for Q3.Response displays as \"Lab01 Updated\" and Rea" +
            "son as \"Derived\" and Notes is empty.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.3,4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.1,4,5,6")]
        public virtual void _20_SelectChangeHistoryIconForQ3_ResponseDisplaysAsLab01UpdatedAndReasonAsDerivedAndNotesIsEmpty_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("20_Select Change History icon for Q3.Response displays as \"Lab01 Updated\" and Rea" +
                    "son as \"Derived\" and Notes is empty.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.3,4",
                        "ObjectiveEvidence",
                        "ReqId:US63247.1,4,5,6"});
#line 224
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 225
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Lab Name\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table20.AddRow(new string[] {
                        "",
                        "Lab01 Updated",
                        "Reason: Derived"});
            table20.AddRow(new string[] {
                        "",
                        "Lab01",
                        "Reason: Initial Entry[Derived]"});
#line 226
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table20, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("21_Select Change History icon for Q4.Response displays as \"Perceptive Informatics" +
            "\" and Reason as \"Derived\" and Notes is empty.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.3,4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.1,4,5,6")]
        public virtual void _21_SelectChangeHistoryIconForQ4_ResponseDisplaysAsPerceptiveInformaticsAndReasonAsDerivedAndNotesIsEmpty_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("21_Select Change History icon for Q4.Response displays as \"Perceptive Informatics" +
                    "\" and Reason as \"Derived\" and Notes is empty.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.3,4",
                        "ObjectiveEvidence",
                        "ReqId:US63247.1,4,5,6"});
#line 233
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 234
 testRunner.When("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 235
 testRunner.And("I click icon \"changeHistory.gif\" for the flat question \"Company\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table21.AddRow(new string[] {
                        "",
                        "Perceptive informatics",
                        "Reason: Derived"});
            table21.AddRow(new string[] {
                        "",
                        "Perceptive",
                        "Reason: Initial Entry[Derived]"});
#line 236
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table21, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("22_Select Change History icon for Q5.Response displays as \"Mindspace Hitechcity\" " +
            "and Reason as \"Derived\" and Notes is empty.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.3,4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.1,4,5,6")]
        public virtual void _22_SelectChangeHistoryIconForQ5_ResponseDisplaysAsMindspaceHitechcityAndReasonAsDerivedAndNotesIsEmpty_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22_Select Change History icon for Q5.Response displays as \"Mindspace Hitechcity\" " +
                    "and Reason as \"Derived\" and Notes is empty.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.3,4",
                        "ObjectiveEvidence",
                        "ReqId:US63247.1,4,5,6"});
#line 243
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 244
 testRunner.When("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 245
 testRunner.And("I click icon \"changeHistory.gif\" for the flat question \"Lab Address\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table22.AddRow(new string[] {
                        "",
                        "Mindspace Hitech city",
                        "Reason: Derived"});
            table22.AddRow(new string[] {
                        "",
                        "Building No 20 Mindspace Hitech city",
                        "Reason: Initial Entry[Derived]"});
#line 246
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table22, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("23_Select Change History icon for Q6.Response displays as \"UNITED STATES\" and Rea" +
            "son as Reason as \"Derived\" and Notes is empty.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.3,4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.1,4,5,6")]
        public virtual void _23_SelectChangeHistoryIconForQ6_ResponseDisplaysAsUNITEDSTATESAndReasonAsReasonAsDerivedAndNotesIsEmpty_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("23_Select Change History icon for Q6.Response displays as \"UNITED STATES\" and Rea" +
                    "son as Reason as \"Derived\" and Notes is empty.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.3,4",
                        "ObjectiveEvidence",
                        "ReqId:US63247.1,4,5,6"});
#line 253
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 254
 testRunner.When("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 255
 testRunner.And("I click icon \"changeHistory.gif\" for the flat question \"Country\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table23.AddRow(new string[] {
                        "",
                        "UNITED STATES",
                        "Reason: Derived"});
            table23.AddRow(new string[] {
                        "",
                        "INDIA",
                        "Reason: Initial Entry[Derived]"});
#line 256
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table23, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("24_De-associate lab \"Lab01\" from site")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.2")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.1")]
        public virtual void _24_De_AssociateLabLab01FromSite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("24_De-associate lab \"Lab01\" from site", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.2",
                        "ObjectiveEvidence",
                        "ReqId:US63247.1"});
#line 265
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 266
 testRunner.When("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 267
 testRunner.And("I click on \"cancel\" button on \"LabForm1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 268
 testRunner.And("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 269
 testRunner.And("I click Link \"Lab Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 270
 testRunner.And("I click Link \"Manage Laboratories\" In Lab Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 271
 testRunner.And("I open lab with labid \"L01\" from LabManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 272
 testRunner.And("I click ActionPalette Item \"Associate Site(s)\" in \"LabMgmt_Actions\" ActionPalette" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 273
 testRunner.And("I remove and save site id \"01\" and site name \"Site\" from assocaited sites in LabM" +
                    "anagementSitesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 274
 testRunner.Then("I see No records message in sites tab of Lab in LabPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("25_Verify the lab data without form checkout.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.2")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.1")]
        public virtual void _25_VerifyTheLabDataWithoutFormCheckout_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("25_Verify the lab data without form checkout.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.2",
                        "ObjectiveEvidence",
                        "ReqId:US63247.1"});
#line 279
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 280
      testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 281
      testRunner.When("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 282
      testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 283
   testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LabForm1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table24.AddRow(new string[] {
                        "Lab ID",
                        "[Blank]",
                        "Text"});
            table24.AddRow(new string[] {
                        "Lab Name",
                        "[Blank]",
                        "Text"});
            table24.AddRow(new string[] {
                        "Company",
                        "[Blank]",
                        "Text"});
            table24.AddRow(new string[] {
                        "Lab Address",
                        "[Blank]",
                        "Text"});
            table24.AddRow(new string[] {
                        "Country",
                        "[Blank]",
                        "Text"});
#line 284
   testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table24, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("26_Verify the lab data on form checkout.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US59775.2")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.1")]
        public virtual void _26_VerifyTheLabDataOnFormCheckout_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("26_Verify the lab data on form checkout.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US59775.2",
                        "ObjectiveEvidence",
                        "ReqId:US63247.1"});
#line 295
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 296
  testRunner.When("I click \"Checkout\" button on \"LabForm1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table25.AddRow(new string[] {
                        "Lab Name",
                        "[Blank]",
                        "Text"});
            table25.AddRow(new string[] {
                        "Company",
                        "[Blank]",
                        "Text"});
            table25.AddRow(new string[] {
                        "Lab Address",
                        "[Blank]",
                        "Text"});
            table25.AddRow(new string[] {
                        "Country",
                        "[Blank]",
                        "Text"});
#line 297
  testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table25, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("27_Select Change History icon for Q3.Response displays as \"[Blank]\" and Reason as" +
            " \"Derived\" and Notes is empty.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.3,4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.1,4,5,6")]
        public virtual void _27_SelectChangeHistoryIconForQ3_ResponseDisplaysAsBlankAndReasonAsDerivedAndNotesIsEmpty_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("27_Select Change History icon for Q3.Response displays as \"[Blank]\" and Reason as" +
                    " \"Derived\" and Notes is empty.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.3,4",
                        "ObjectiveEvidence",
                        "ReqId:US63247.1,4,5,6"});
#line 307
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 308
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Lab Name\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table26.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Derived"});
            table26.AddRow(new string[] {
                        "",
                        "Lab01 Updated",
                        "Reason: Derived"});
            table26.AddRow(new string[] {
                        "",
                        "Lab01",
                        "Reason: Initial Entry[Derived]"});
#line 309
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table26, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("28_Select Change History icon for Q4.Response displays as \"[Blank]\" and Reason as" +
            " \"Derived\" and Notes is empty.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.3,4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.1,4,5,6")]
        public virtual void _28_SelectChangeHistoryIconForQ4_ResponseDisplaysAsBlankAndReasonAsDerivedAndNotesIsEmpty_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("28_Select Change History icon for Q4.Response displays as \"[Blank]\" and Reason as" +
                    " \"Derived\" and Notes is empty.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.3,4",
                        "ObjectiveEvidence",
                        "ReqId:US63247.1,4,5,6"});
#line 317
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 318
 testRunner.When("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 319
 testRunner.And("I click icon \"changeHistory.gif\" for the flat question \"Company\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table27.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Derived"});
            table27.AddRow(new string[] {
                        "",
                        "Perceptive informatics",
                        "Reason: Derived"});
            table27.AddRow(new string[] {
                        "",
                        "Perceptive",
                        "Reason: Initial Entry[Derived]"});
#line 320
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table27, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("29_Select Change History icon for Q5.Response displays as \"[Blank]\" and Reason as" +
            " \"Derived\" and Notes is empty.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.3,4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.1,4,5,6")]
        public virtual void _29_SelectChangeHistoryIconForQ5_ResponseDisplaysAsBlankAndReasonAsDerivedAndNotesIsEmpty_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("29_Select Change History icon for Q5.Response displays as \"[Blank]\" and Reason as" +
                    " \"Derived\" and Notes is empty.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.3,4",
                        "ObjectiveEvidence",
                        "ReqId:US63247.1,4,5,6"});
#line 328
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 329
 testRunner.When("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 330
 testRunner.And("I click icon \"changeHistory.gif\" for the flat question \"Lab Address\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table28.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Derived"});
            table28.AddRow(new string[] {
                        "",
                        "Mindspace Hitech city",
                        "Reason: Derived"});
            table28.AddRow(new string[] {
                        "",
                        "Building No 20 Mindspace Hitech city",
                        "Reason: Initial Entry[Derived]"});
#line 331
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table28, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("30_Select Change History icon for Q6.Response displays as \"[Blank]\" and Reason as" +
            " Reason as \"Derived\" and Notes is empty.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.3,4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.1,4,5,6")]
        public virtual void _30_SelectChangeHistoryIconForQ6_ResponseDisplaysAsBlankAndReasonAsReasonAsDerivedAndNotesIsEmpty_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("30_Select Change History icon for Q6.Response displays as \"[Blank]\" and Reason as" +
                    " Reason as \"Derived\" and Notes is empty.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.3,4",
                        "ObjectiveEvidence",
                        "ReqId:US63247.1,4,5,6"});
#line 339
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 340
 testRunner.When("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 341
 testRunner.And("I click icon \"changeHistory.gif\" for the flat question \"Country\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table29.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Derived"});
            table29.AddRow(new string[] {
                        "",
                        "UNITED STATES",
                        "Reason: Derived"});
            table29.AddRow(new string[] {
                        "",
                        "INDIA",
                        "Reason: Initial Entry[Derived]"});
#line 342
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table29, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("31_Associate lab \"Lab01 Updated\" to site")]
        public virtual void _31_AssociateLabLab01UpdatedToSite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31_Associate lab \"Lab01 Updated\" to site", null, ((string[])(null)));
#line 349
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 350
 testRunner.When("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 351
 testRunner.And("I click on \"cancel\" button on \"LabForm1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 352
 testRunner.And("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 353
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 354
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 355
 testRunner.And("I click ActionPalette Item \"Associate Lab(s)\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 356
 testRunner.And("I add and save lab id \"L01\" and lab name \"Lab01 Updated\" to associated labs in As" +
                    "sociateLabs page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 357
 testRunner.And("I select sub tab \"Labs\" in site page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "LabId",
                        "LaboratoryName",
                        "Company",
                        "Department",
                        "LaboratoryStatus"});
            table30.AddRow(new string[] {
                        "L01",
                        "Lab01 Updated",
                        "Perceptive Informatics",
                        "EDC",
                        "Active"});
#line 358
 testRunner.Then("I see lab data in labs tab of Site in SitePage", ((string)(null)), table30, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("32_Expand the Visit (Week 2) event and open LabForm1 and enter the LAB ID.")]
        public virtual void _32_ExpandTheVisitWeek2EventAndOpenLabForm1AndEnterTheLABID_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32_Expand the Visit (Week 2) event and open LabForm1 and enter the LAB ID.", null, ((string[])(null)));
#line 363
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 364
   testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 365
      testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 366
      testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 367
   testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LabForm1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 368
      testRunner.When("I click \"Checkout\" button on \"LabForm1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes"});
            table31.AddRow(new string[] {
                        "Lab ID",
                        "[Blank]",
                        "ListBox",
                        "Lab01 Updated (L01)",
                        "DCF",
                        "Lab ID selected"});
#line 369
   testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table31, "And ");
#line 372
   testRunner.And("I click on \"Save\" button on \"LabForm1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table32.AddRow(new string[] {
                        "Lab ID",
                        "Lab01 Updated (L01)",
                        "Text"});
            table32.AddRow(new string[] {
                        "Lab Name",
                        "Lab01 Updated",
                        "Text"});
            table32.AddRow(new string[] {
                        "Company",
                        "Perceptive Informatics",
                        "Text"});
            table32.AddRow(new string[] {
                        "Lab Address",
                        "Mindspace Hitech city",
                        "Text"});
            table32.AddRow(new string[] {
                        "Country",
                        "UNITED STATES",
                        "Text"});
#line 373
  testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table32, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("33_De-Associate lab \"Lab01 Updated\" from site")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.2")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.3,4,5,6")]
        public virtual void _33_De_AssociateLabLab01UpdatedFromSite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("33_De-Associate lab \"Lab01 Updated\" from site", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.2",
                        "ObjectiveEvidence",
                        "ReqId:US63247.3,4,5,6"});
#line 384
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 385
 testRunner.When("I click on \"cancel\" button on \"LabForm1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 386
 testRunner.And("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 387
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 388
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 389
 testRunner.And("I click ActionPalette Item \"Associate Lab(s)\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 390
 testRunner.And("I remove and save lab id \"L01\" and lab name \"Lab01 Updated\" from associated labs " +
                    "in AssociateLabs page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 391
 testRunner.Then("I see Site details page for \"01-Site\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("34_Verify the lab data without form checkout.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.2")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.3")]
        public virtual void _34_VerifyTheLabDataWithoutFormCheckout_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34_Verify the lab data without form checkout.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.2",
                        "ObjectiveEvidence",
                        "ReqId:US63247.3"});
#line 396
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 397
      testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 398
      testRunner.When("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 399
      testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 400
   testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LabForm1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table33.AddRow(new string[] {
                        "Lab ID",
                        "[Blank]",
                        "Text"});
            table33.AddRow(new string[] {
                        "Lab Name",
                        "[Blank]",
                        "Text"});
            table33.AddRow(new string[] {
                        "Company",
                        "[Blank]",
                        "Text"});
            table33.AddRow(new string[] {
                        "Lab Address",
                        "[Blank]",
                        "Text"});
            table33.AddRow(new string[] {
                        "Country",
                        "[Blank]",
                        "Text"});
#line 401
   testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table33, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("35_Verify the lab data on form checkout.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US59775.2")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.3")]
        public virtual void _35_VerifyTheLabDataOnFormCheckout_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35_Verify the lab data on form checkout.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US59775.2",
                        "ObjectiveEvidence",
                        "ReqId:US63247.3"});
#line 412
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 413
  testRunner.When("I click \"Checkout\" button on \"LabForm1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table34.AddRow(new string[] {
                        "Lab Name",
                        "[Blank]",
                        "Text"});
            table34.AddRow(new string[] {
                        "Company",
                        "[Blank]",
                        "Text"});
            table34.AddRow(new string[] {
                        "Lab Address",
                        "[Blank]",
                        "Text"});
            table34.AddRow(new string[] {
                        "Country",
                        "[Blank]",
                        "Text"});
#line 414
  testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table34, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("36_Select Change History icon for Q3.Response displays as \"[Blank]\" and Reason as" +
            " \"Derived\" and Notes is empty.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.3,4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.3,4,5,6")]
        public virtual void _36_SelectChangeHistoryIconForQ3_ResponseDisplaysAsBlankAndReasonAsDerivedAndNotesIsEmpty_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("36_Select Change History icon for Q3.Response displays as \"[Blank]\" and Reason as" +
                    " \"Derived\" and Notes is empty.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.3,4",
                        "ObjectiveEvidence",
                        "ReqId:US63247.3,4,5,6"});
#line 424
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 425
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Lab Name\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table35.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Derived"});
            table35.AddRow(new string[] {
                        "",
                        "Lab01 Updated",
                        "Reason: Derived"});
            table35.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Derived"});
            table35.AddRow(new string[] {
                        "",
                        "Lab01 Updated",
                        "Reason: Derived"});
            table35.AddRow(new string[] {
                        "",
                        "Lab01",
                        "Reason: Initial Entry[Derived]"});
#line 426
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table35, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("37_Select Change History icon for Q4.Response displays as \"[Blank]\" and Reason as" +
            " \"Derived\" and Notes is empty.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.3,4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.3,4,5,6")]
        public virtual void _37_SelectChangeHistoryIconForQ4_ResponseDisplaysAsBlankAndReasonAsDerivedAndNotesIsEmpty_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("37_Select Change History icon for Q4.Response displays as \"[Blank]\" and Reason as" +
                    " \"Derived\" and Notes is empty.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.3,4",
                        "ObjectiveEvidence",
                        "ReqId:US63247.3,4,5,6"});
#line 436
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 437
 testRunner.When("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 438
 testRunner.And("I click icon \"changeHistory.gif\" for the flat question \"Company\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table36.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Derived"});
            table36.AddRow(new string[] {
                        "",
                        "Perceptive informatics",
                        "Reason: Derived"});
            table36.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Derived"});
            table36.AddRow(new string[] {
                        "",
                        "Perceptive informatics",
                        "Reason: Derived"});
            table36.AddRow(new string[] {
                        "",
                        "Perceptive",
                        "Reason: Initial Entry[Derived]"});
#line 439
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table36, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("38_Select Change History icon for Q5.Response displays as \"[Blank]\" and Reason as" +
            " \"Derived\" and Notes is empty.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.3,4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.3,4,5,6")]
        public virtual void _38_SelectChangeHistoryIconForQ5_ResponseDisplaysAsBlankAndReasonAsDerivedAndNotesIsEmpty_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("38_Select Change History icon for Q5.Response displays as \"[Blank]\" and Reason as" +
                    " \"Derived\" and Notes is empty.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.3,4",
                        "ObjectiveEvidence",
                        "ReqId:US63247.3,4,5,6"});
#line 449
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 450
 testRunner.When("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 451
 testRunner.And("I click icon \"changeHistory.gif\" for the flat question \"Lab Address\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table37.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Derived"});
            table37.AddRow(new string[] {
                        "",
                        "Mindspace Hitech city",
                        "Reason: Derived"});
            table37.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Derived"});
            table37.AddRow(new string[] {
                        "",
                        "Mindspace Hitech city",
                        "Reason: Derived"});
            table37.AddRow(new string[] {
                        "",
                        "Building No 20 Mindspace Hitech city",
                        "Reason: Initial Entry[Derived]"});
#line 452
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table37, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("39_Select Change History icon for Q6.Response displays as \"[Blank]\" and Reason as" +
            " Reason as \"Derived\" and Notes is empty.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US59775.3,4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US63247.3,4,5,6")]
        public virtual void _39_SelectChangeHistoryIconForQ6_ResponseDisplaysAsBlankAndReasonAsReasonAsDerivedAndNotesIsEmpty_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39_Select Change History icon for Q6.Response displays as \"[Blank]\" and Reason as" +
                    " Reason as \"Derived\" and Notes is empty.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US59775.3,4",
                        "ObjectiveEvidence",
                        "ReqId:US63247.3,4,5,6"});
#line 462
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 463
 testRunner.When("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 464
 testRunner.And("I click icon \"changeHistory.gif\" for the flat question \"Country\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table38.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Derived"});
            table38.AddRow(new string[] {
                        "",
                        "UNITED STATES",
                        "Reason: Derived"});
            table38.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Derived"});
            table38.AddRow(new string[] {
                        "",
                        "UNITED STATES",
                        "Reason: Derived"});
            table38.AddRow(new string[] {
                        "",
                        "INDIA",
                        "Reason: Initial Entry[Derived]"});
#line 465
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table38, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

