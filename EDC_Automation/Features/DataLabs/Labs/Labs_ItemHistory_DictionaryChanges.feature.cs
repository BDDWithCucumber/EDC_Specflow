// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.Labs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Labs_ItemHistory")]
    public partial class Labs_ItemHistoryFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Labs_ItemHistory_DictionaryChanges.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Labs_ItemHistory", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01_Login to Datalabs application.")]
        public virtual void _01_LoginToDatalabsApplication_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_Login to Datalabs application.", null, ((string[])(null)));
#line 3
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
 testRunner.Given("I have logged into DataLabs application as an Administrator user.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 5
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02_Delete a study")]
        public virtual void _02_DeleteAStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02_Delete a study", null, ((string[])(null)));
#line 7
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("03_Prepare a study file that doesn\'t have Lab Parameter mapping for all the field" +
            "s except for the mandatory fields and with valid Questions for the Lab parameter" +
            " Mapping fields and publish it")]
        public virtual void _03_PrepareAStudyFileThatDoesntHaveLabParameterMappingForAllTheFieldsExceptForTheMandatoryFieldsAndWithValidQuestionsForTheLabParameterMappingFieldsAndPublishIt()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03_Prepare a study file that doesn\'t have Lab Parameter mapping for all the field" +
                    "s except for the mandatory fields and with valid Questions for the Lab parameter" +
                    " Mapping fields and publish it", null, ((string[])(null)));
#line 12
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 13
      testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
      testRunner.And("I upload a study \"QuestionAllMapped_D1.zip\" with study label \"Questions\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 15
      testRunner.Then("I see study label \"Questions\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("04_Add sites to associate to labs.")]
        public virtual void _04_AddSitesToAssociateToLabs_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04_Add sites to associate to labs.", null, ((string[])(null)));
#line 17
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 18
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteId",
                        "SiteName",
                        "Address1",
                        "Address2",
                        "Address3",
                        "Address4",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "SiteStatus",
                        "DCFWorkflow",
                        "ExternalSource",
                        "ExternalId"});
            table1.AddRow(new string[] {
                        "01",
                        "Site1",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        "-"});
            table1.AddRow(new string[] {
                        "02",
                        "Site2",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        "-"});
#line 20
 testRunner.And("I enter sites details and Save", ((string)(null)), table1, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("05_Assign testadmin testadmin user to Site1")]
        public virtual void _05_AssignTestadminTestadminUserToSite1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05_Assign testadmin testadmin user to Site1", null, ((string[])(null)));
#line 25
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 26
 testRunner.When("I open site with siteid \"01\" and site name \"Site1\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 27
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And("I click breadcrumb \"Site Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("06_Assign testadmin testadmin user to Site2")]
        public virtual void _06_AssignTestadminTestadminUserToSite2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06_Assign testadmin testadmin user to Site2", null, ((string[])(null)));
#line 31
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 32
 testRunner.When("I open site with siteid \"02\" and site name \"Site2\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
 testRunner.And("I click breadcrumb \"Site Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("07_Add Labs")]
        public virtual void _07_AddLabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("07_Add Labs", null, ((string[])(null)));
#line 37
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 38
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
 testRunner.And("I click Link \"Lab Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "LabId",
                        "LaboratoryName",
                        "Company",
                        "Department",
                        "Address1",
                        "Address2",
                        "Address3",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "LaboratoryStatus",
                        "ContactPerson"});
            table2.AddRow(new string[] {
                        "L01",
                        "Lab01",
                        "PFIZER",
                        "RD",
                        "A1",
                        "A2",
                        "A3",
                        "City1",
                        "AP",
                        "500084",
                        "INDIA(IND)",
                        "",
                        "11111111",
                        "22222222",
                        "Active",
                        "Mr.XYZ"});
            table2.AddRow(new string[] {
                        "L02",
                        "Lab02",
                        "PFIZER2",
                        "RD2",
                        "A12",
                        "A22",
                        "A32",
                        "City2",
                        "MP",
                        "500084",
                        "INDIA(IND)",
                        "",
                        "11111111",
                        "22222222",
                        "Active",
                        "Mr.ABC"});
            table2.AddRow(new string[] {
                        "L03",
                        "Lab03",
                        "NOVARTIS",
                        "Research",
                        "A1",
                        "A2",
                        "A3",
                        "City3",
                        "UP",
                        "500084",
                        "INDIA(IND)",
                        "",
                        "11111111",
                        "22222222",
                        "Active",
                        "Mr.IJK"});
            table2.AddRow(new string[] {
                        "L04",
                        "Lab04",
                        "NOVARTIS",
                        "Research",
                        "A1",
                        "A2",
                        "A3",
                        "City4",
                        "GOA",
                        "500084",
                        "INDIA(IND)",
                        "",
                        "11111111",
                        "22222222",
                        "Active",
                        "Mr.MNO"});
            table2.AddRow(new string[] {
                        "L05",
                        "Lab05",
                        "CIPLA",
                        "Production",
                        "A1",
                        "A2",
                        "A3",
                        "City5",
                        "TN",
                        "500084",
                        "INDIA(IND)",
                        "",
                        "11111111",
                        "22222222",
                        "Active",
                        "Mr.ABC"});
#line 40
 testRunner.And("I enter labs details and Save", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "LabId",
                        "LaboratoryName",
                        "Company",
                        "Department",
                        "Address1",
                        "Address2",
                        "Address3",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "LaboratoryStatus",
                        "ContactPerson"});
            table3.AddRow(new string[] {
                        "L01",
                        "Lab01",
                        "PFIZER",
                        "RD",
                        "A1",
                        "A2",
                        "A3",
                        "City1",
                        "AP",
                        "500084",
                        "INDIA(IND)",
                        "",
                        "11111111",
                        "22222222",
                        "Active",
                        "Mr.XYZ"});
            table3.AddRow(new string[] {
                        "L02",
                        "Lab02",
                        "PFIZER2",
                        "RD2",
                        "A12",
                        "A22",
                        "A32",
                        "City2",
                        "MP",
                        "500084",
                        "INDIA(IND)",
                        "",
                        "11111111",
                        "22222222",
                        "Active",
                        "Mr.ABC"});
            table3.AddRow(new string[] {
                        "L03",
                        "Lab03",
                        "NOVARTIS",
                        "Research",
                        "A1",
                        "A2",
                        "A3",
                        "City3",
                        "UP",
                        "500084",
                        "INDIA(IND)",
                        "",
                        "11111111",
                        "22222222",
                        "Active",
                        "Mr.IJK"});
            table3.AddRow(new string[] {
                        "L04",
                        "Lab04",
                        "NOVARTIS",
                        "Research",
                        "A1",
                        "A2",
                        "A3",
                        "City4",
                        "GOA",
                        "500084",
                        "INDIA(IND)",
                        "",
                        "11111111",
                        "22222222",
                        "Active",
                        "Mr.MNO"});
            table3.AddRow(new string[] {
                        "L05",
                        "Lab05",
                        "CIPLA",
                        "Production",
                        "A1",
                        "A2",
                        "A3",
                        "City5",
                        "TN",
                        "500084",
                        "INDIA(IND)",
                        "",
                        "11111111",
                        "22222222",
                        "Active",
                        "Mr.ABC"});
#line 47
 testRunner.Then("I see labs with details in lab grid", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("08_Associate Lab L01 and L02 for Site1")]
        public virtual void _08_AssociateLabL01AndL02ForSite1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("08_Associate Lab L01 and L02 for Site1", null, ((string[])(null)));
#line 55
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 56
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 57
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.And("I open site with siteid \"01\" and site name \"Site1\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.And("I click ActionPalette Item \"Associate Lab(s)\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.And("I add and save lab id \"L01\" and lab name \"Lab01\" to associated labs in AssociateL" +
                    "abs page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.And("I click ActionPalette Item \"Associate Lab(s)\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
 testRunner.And("I add and save lab id \"L02\" and lab name \"Lab02\" to associated labs in AssociateL" +
                    "abs page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.And("I select sub tab \"Labs\" in site page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "LabId",
                        "LaboratoryName",
                        "Company",
                        "Department",
                        "LaboratoryStatus"});
            table4.AddRow(new string[] {
                        "L01",
                        "Lab01",
                        "PFIZER",
                        "RD",
                        "Active"});
#line 64
 testRunner.Then("I see lab data in labs tab of Site in SitePage", ((string)(null)), table4, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "LabId",
                        "LaboratoryName",
                        "Company",
                        "Department",
                        "LaboratoryStatus"});
            table5.AddRow(new string[] {
                        "L02",
                        "Lab02",
                        "PFIZER2",
                        "RD2",
                        "Active"});
#line 67
 testRunner.And("I see lab data in labs tab of Site in SitePage", ((string)(null)), table5, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("09_Add patient 01-PAT from Datalabs UI")]
        public virtual void _09_AddPatient01_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("09_Add patient 01-PAT from Datalabs UI", null, ((string[])(null)));
#line 71
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 72
      testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 73
      testRunner.And("I select the site \"01-Site1\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table6.AddRow(new string[] {
                        "01",
                        "PAT",
                        "06/13/2018"});
#line 74
      testRunner.When("I add patient with below details.", ((string)(null)), table6, "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table7.AddRow(new string[] {
                        "01-PAT"});
#line 77
      testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table7, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("10_Select and enroll patient 01-PAT.")]
        public virtual void _10_SelectAndEnrollPatient01_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("10_Select and enroll patient 01-PAT.", null, ((string[])(null)));
#line 81
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 82
      testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 83
      testRunner.And("I select the site \"01-Site1\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
      testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table8.AddRow(new string[] {
                        "01",
                        "06/13/2018",
                        "Yes"});
#line 85
      testRunner.When("I enroll the patient \"01-PAT\" with below data.", ((string)(null)), table8, "When ");
#line 88
      testRunner.Then("I see patient \"01-PAT\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("11_Select a site and a patient.")]
        public virtual void _11_SelectASiteAndAPatient_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("11_Select a site and a patient.", null, ((string[])(null)));
#line 90
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 91
      testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 92
      testRunner.And("I select the site \"01-Site1\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
      testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 94
      testRunner.Then("I see Patient details page for \"01-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("12_Navigate to Patient and enter the values in FormD1")]
        public virtual void _12_NavigateToPatientAndEnterTheValuesInFormD1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("12_Navigate to Patient and enter the values in FormD1", null, ((string[])(null)));
#line 96
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 97
      testRunner.And("I expand \"Visit (week2)\" to select and open \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
      testRunner.When("I click \"Checkout\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table9.AddRow(new string[] {
                        "Lab ID Q1 For D1",
                        "Lab01 (L01)",
                        "LISTBOX"});
            table9.AddRow(new string[] {
                        "CRF Collection Date Q1 For D1",
                        "09/06/2016",
                        "TextBox"});
#line 99
      testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table9, "And ");
#line 103
   testRunner.And("I click on \"Save\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("13_Select Change History icon for LabName")]
        public virtual void _13_SelectChangeHistoryIconForLabName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("13_Select Change History icon for LabName", null, ((string[])(null)));
#line 105
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 106
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Lab Name Q1 For D1\" in CR" +
                    "F", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table10.AddRow(new string[] {
                        "System (System\\System)",
                        "Lab01",
                        "Reason: Derived from Lab ID"});
#line 107
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table10, "Then ");
#line 110
 testRunner.And("I click close button in LabInformationModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("14_Select Change History icon for CompanyName")]
        public virtual void _14_SelectChangeHistoryIconForCompanyName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("14_Select Change History icon for CompanyName", null, ((string[])(null)));
#line 112
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 113
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Company Q1 For D1\" in CRF" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table11.AddRow(new string[] {
                        "System (System\\System)",
                        "PFIZER",
                        "Reason: Derived from Lab ID"});
#line 114
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table11, "Then ");
#line 117
 testRunner.And("I click close button in LabInformationModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("15_Select Change History icon for LabAddress")]
        public virtual void _15_SelectChangeHistoryIconForLabAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("15_Select Change History icon for LabAddress", null, ((string[])(null)));
#line 119
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 120
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Lab Address Q1 For D1\" in" +
                    " CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table12.AddRow(new string[] {
                        "System (System\\System)",
                        "A1 A2 A3",
                        "Reason: Derived from Lab ID"});
#line 121
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table12, "Then ");
#line 124
 testRunner.And("I click close button in LabInformationModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("16_Select Change History icon for LabAddress")]
        public virtual void _16_SelectChangeHistoryIconForLabAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("16_Select Change History icon for LabAddress", null, ((string[])(null)));
#line 126
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 127
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Country Q1 For D1\" in CRF" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table13.AddRow(new string[] {
                        "System (System\\System)",
                        "INDIA",
                        "Reason: Derived from Lab ID"});
#line 128
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table13, "Then ");
#line 131
 testRunner.And("I click close button in LabInformationModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("17_Update Lab ID in Lab Testing CRF and save.")]
        public virtual void _17_UpdateLabIDInLabTestingCRFAndSave_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("17_Update Lab ID in Lab Testing CRF and save.", null, ((string[])(null)));
#line 133
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 134
 testRunner.When("I click \"Checkout\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes"});
            table14.AddRow(new string[] {
                        "Lab ID Q1 For D1",
                        "(L01)",
                        "ListBOX",
                        "Lab02 (L02)",
                        "SOR",
                        "To verify History Changes"});
            table14.AddRow(new string[] {
                        "CRF Collection Date Q1 For D1",
                        "09/06/2016",
                        "TEXTBOX",
                        "09/15/2016",
                        "SOR",
                        "To verify History Changes"});
#line 135
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table14, "And ");
#line 139
 testRunner.And("I click on \"Save\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("18_Select Change History icon for LabID")]
        public virtual void _18_SelectChangeHistoryIconForLabID()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("18_Select Change History icon for LabID", null, ((string[])(null)));
#line 141
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 142
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Lab ID\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table15.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "L02",
                        "Reason: SOR\\r\nNotes: To verify History Changes"});
            table15.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "L01",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 143
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table15, "Then ");
#line 147
 testRunner.And("I click close button in LabInformationModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("19_Select Change History icon for LabName")]
        public virtual void _19_SelectChangeHistoryIconForLabName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("19_Select Change History icon for LabName", null, ((string[])(null)));
#line 149
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 150
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Lab Name\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table16.AddRow(new string[] {
                        "System (System\\System)",
                        "Lab02",
                        "Reason: Derived from Lab ID"});
            table16.AddRow(new string[] {
                        "System (System\\System)",
                        "Lab01",
                        "Reason: Derived from Lab ID"});
#line 151
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table16, "Then ");
#line 155
 testRunner.And("I click close button in LabInformationModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("20_Select Change History icon for CompanyName")]
        public virtual void _20_SelectChangeHistoryIconForCompanyName()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("20_Select Change History icon for CompanyName", null, ((string[])(null)));
#line 157
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 158
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Company Q1 For D1\" in CRF" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table17.AddRow(new string[] {
                        "System (System\\System)",
                        "PFIZER2",
                        "Reason: Derived from Lab ID"});
            table17.AddRow(new string[] {
                        "System (System\\System)",
                        "PFIZER",
                        "Reason: Derived from Lab ID"});
#line 159
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table17, "Then ");
#line 163
 testRunner.And("I click close button in LabInformationModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("21_Select Change History icon for LabAddress")]
        public virtual void _21_SelectChangeHistoryIconForLabAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("21_Select Change History icon for LabAddress", null, ((string[])(null)));
#line 165
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 166
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Lab Address Q1 For D1\" in" +
                    " CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table18.AddRow(new string[] {
                        "System (System\\System)",
                        "A12 A22 A32",
                        "Reason: Derived from Lab ID"});
            table18.AddRow(new string[] {
                        "System (System\\System)",
                        "A1 A2 A3",
                        "Reason: Derived from Lab ID"});
#line 167
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table18, "Then ");
#line 171
 testRunner.And("I click close button in LabInformationModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("22_Select Change History icon for LabAddress")]
        public virtual void _22_SelectChangeHistoryIconForLabAddress()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22_Select Change History icon for LabAddress", null, ((string[])(null)));
#line 173
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 174
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Country Q1 For D1\" in CRF" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table19.AddRow(new string[] {
                        "System (System\\System)",
                        "INDIA",
                        "Reason: Derived from Lab ID"});
            table19.AddRow(new string[] {
                        "System (System\\System)",
                        "INDIA",
                        "Reason: Derived from Lab ID"});
#line 175
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table19, "Then ");
#line 179
 testRunner.And("I click close button in LabInformationModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("23_Select Change History icon for CRFCollectionDate")]
        public virtual void _23_SelectChangeHistoryIconForCRFCollectionDate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("23_Select Change History icon for CRFCollectionDate", null, ((string[])(null)));
#line 181
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 182
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"CRF Collection Date Q1 Fo" +
                    "r D1\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table20.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "09/15/2016",
                        "Reason: SOR\\r\nNotes: To verify History Changes"});
            table20.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "09/06/2016",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 183
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table20, "Then ");
#line 187
 testRunner.And("I click close button in LabInformationModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

