// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.Labs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ReasssociateReferenceRangeLabDataChanges")]
    public partial class ReasssociateReferenceRangeLabDataChangesFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Labs_Re-associate Reference Range to a Patient Lab Value_eCRF Lab data change - Clear Item and MNA.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ReasssociateReferenceRangeLabDataChanges", @"		Test Summary:

			1. Verify Reference Ranges are cleared on Lab Form when Clear Item action is performed on Lab ID (or) CRF Collection date (or) CRF Lab Unit.
			2. Verify Reference Ranges are cleared on Lab Form when MNA action is performed on Lab ID (or) CRF Collection date (or) CRF Lab Unit.
			3. Verify Visual Indicator disappears for CRF Lab Value question for above CRF actions.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01_Login to Datalabs")]
        public virtual void _01_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_Login to Datalabs", null, ((string[])(null)));
#line 9
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 10
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02_Delete existing study")]
        public virtual void _02_DeleteExistingStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02_Delete existing study", null, ((string[])(null)));
#line 13
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 14
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("03_Upload and publish the study")]
        public virtual void _03_UploadAndPublishTheStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03_Upload and publish the study", null, ((string[])(null)));
#line 17
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 18
    testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
    testRunner.And("I upload a study \"Test4500_Labs_Original_R.zip\" with study label \"Test4500_Codlei" +
                    "stLinkages_Base\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
    testRunner.Then("I see study label \"Test4500_CodleistLinkages_Base\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("04_Add sites and associate user")]
        public virtual void _04_AddSitesAndAssociateUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04_Add sites and associate user", null, ((string[])(null)));
#line 22
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 23
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteId",
                        "SiteName",
                        "Address1",
                        "Address2",
                        "Address3",
                        "Address4",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "SiteStatus",
                        "DCFWorkflow",
                        "ExternalSource",
                        "ExternalId"});
            table1.AddRow(new string[] {
                        "01",
                        "Site",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        "-"});
#line 25
 testRunner.And("I enter sites details and Save", ((string)(null)), table1, "And ");
#line 28
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.Then("I see Site details page for \"01-Site\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("05_Add Labs")]
        public virtual void _05_AddLabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05_Add Labs", null, ((string[])(null)));
#line 34
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 35
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
 testRunner.And("I click Link \"Lab Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.And("I click Link \"Manage Laboratories\" In Lab Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "LabId",
                        "LaboratoryName",
                        "Company",
                        "Department",
                        "Address1",
                        "Address2",
                        "Address3",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "LaboratoryStatus",
                        "ContactPerson"});
            table2.AddRow(new string[] {
                        "L01",
                        "Lab01",
                        "Perceptive",
                        "EDC",
                        "Building No 20",
                        "Mindspace",
                        "Hitech city",
                        "Hyderabad",
                        "TG",
                        "500081",
                        "INDIA(IND)",
                        "",
                        "11111111",
                        "22222222",
                        "Active",
                        "Mr.XYZ"});
#line 38
 testRunner.And("I enter labs details and Save", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "LabId",
                        "LaboratoryName",
                        "Company",
                        "Department",
                        "Address1",
                        "Address2",
                        "Address3",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "LaboratoryStatus",
                        "ContactPerson"});
            table3.AddRow(new string[] {
                        "L01",
                        "Lab01",
                        "Perceptive",
                        "EDC",
                        "Building No 20",
                        "Mindspace",
                        "Hitech city",
                        "Hyderabad",
                        "TG",
                        "500081",
                        "INDIA(IND)",
                        "INDIA",
                        "11111111",
                        "22222222",
                        "Active",
                        "Mr.XYZ"});
#line 41
 testRunner.Then("I see labs with details in lab grid", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("06_Associate Lab L01 to 01-Site")]
        public virtual void _06_AssociateLabL01To01_Site()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06_Associate Lab L01 to 01-Site", null, ((string[])(null)));
#line 46
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 47
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 48
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.And("I click ActionPalette Item \"Associate Lab(s)\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.And("I add and save lab id \"L01\" and lab name \"Lab01\" to associated labs in AssociateL" +
                    "abs page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.And("I select sub tab \"Labs\" in site page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "LabId",
                        "LaboratoryName",
                        "Company",
                        "Department",
                        "LaboratoryStatus"});
            table4.AddRow(new string[] {
                        "L01",
                        "Lab01",
                        "Perceptive",
                        "EDC",
                        "Active"});
#line 53
 testRunner.Then("I see lab data in labs tab of Site in SitePage", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("07_Add Patient")]
        public virtual void _07_AddPatient()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("07_Add Patient", null, ((string[])(null)));
#line 57
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 58
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 59
    testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table5.AddRow(new string[] {
                        "01",
                        "PAT",
                        "06/13/2018"});
#line 60
    testRunner.When("I add patient with below details.", ((string)(null)), table5, "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table6.AddRow(new string[] {
                        "01-PAT"});
#line 63
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("08_Select and enroll patient 01-PAT")]
        public virtual void _08_SelectAndEnrollPatient01_PAT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("08_Select and enroll patient 01-PAT", null, ((string[])(null)));
#line 67
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 68
      testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 69
      testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
      testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table7.AddRow(new string[] {
                        "01",
                        "06/13/2018",
                        "Yes"});
#line 71
      testRunner.When("I enroll the patient \"01-PAT\" with below data.", ((string)(null)), table7, "When ");
#line 74
      testRunner.Then("I see patient \"01-PAT\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("09_Add a new lab test reference range record")]
        public virtual void _09_AddANewLabTestReferenceRangeRecord()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("09_Add a new lab test reference range record", null, ((string[])(null)));
#line 77
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 78
  testRunner.Given("I navigate to \"Local Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 79
     testRunner.When("I open lab with labid \"L01\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
  testRunner.And("I open labtest with labname \"01\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate",
                        "Gender",
                        "FromAgeSelect",
                        "FromAgeSet",
                        "ToAgeSelect",
                        "ToAgeSet",
                        "NormalRangeLowSelect",
                        "NormalRangeLowSet",
                        "NormalRangeHighSelect",
                        "NormalRangeHighSet",
                        "ClinicalRangeLowSelect",
                        "ClinicalRangeLowSet",
                        "ClinicalRangeHighSelect",
                        "ClinicalRangeHighSet",
                        "Unit",
                        "NA"});
            table8.AddRow(new string[] {
                        "02/25/2019",
                        "03/03/2019",
                        "Male",
                        ">",
                        "20",
                        "<",
                        "35",
                        ">",
                        "3",
                        "<",
                        "15",
                        ">",
                        "20.41",
                        "<",
                        "25.71",
                        "in",
                        "False"});
#line 81
  testRunner.And("I click add and enter reference ranges of a lab test and Save and can see \"LabTes" +
                    "t Reference Range Added Successfully\" message upon each record save in Reference" +
                    "RangesPage including NA", ((string)(null)), table8, "And ");
#line 84
  testRunner.Then("a Reference ID is auto generated for a newly added lab test in ReferenceRangesPag" +
                    "e", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("10_Navigate to site and select patient")]
        public virtual void _10_NavigateToSiteAndSelectPatient()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("10_Navigate to site and select patient", null, ((string[])(null)));
#line 86
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 87
      testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 88
      testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
      testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 90
      testRunner.Then("I see Patient details page for \"01-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("11_Expand the Visit (Screening) and open the demographics form to update the data" +
            "")]
        public virtual void _11_ExpandTheVisitScreeningAndOpenTheDemographicsFormToUpdateTheData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("11_Expand the Visit (Screening) and open the demographics form to update the data" +
                    "", null, ((string[])(null)));
#line 93
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 94
   testRunner.When("I expand \"Visit (Screening)\" to select and open \"Demographics RTSM\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 95
      testRunner.And("I click \"Checkout\" button on \"Demographics RTSM\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table9.AddRow(new string[] {
                        "Gender:",
                        "Male",
                        "ListBox"});
            table9.AddRow(new string[] {
                        "Age at Study Start:",
                        "31",
                        "TextBox"});
            table9.AddRow(new string[] {
                        "Age Units at Study Start:",
                        "Years",
                        "ListBox"});
#line 96
      testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table9, "And ");
#line 101
   testRunner.And("I click on \"Save & Close\" button on \"Demographics RTSM\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
   testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("12_Expand the Visit (Week 2) event and open the LabForm2 form and update the data" +
            "")]
        public virtual void _12_ExpandTheVisitWeek2EventAndOpenTheLabForm2FormAndUpdateTheData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("12_Expand the Visit (Week 2) event and open the LabForm2 form and update the data" +
                    "", null, ((string[])(null)));
#line 105
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 106
   testRunner.When("I expand \"Visit (Week 2)\" to select and open \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 107
      testRunner.And("I click \"Checkout\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table10.AddRow(new string[] {
                        "Lab ID",
                        "Lab01 (L01)",
                        "ListBox"});
            table10.AddRow(new string[] {
                        "CRF Collection Date",
                        "02/28/2019",
                        "TextBox"});
#line 108
      testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table10, "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table11.AddRow(new string[] {
                        "No",
                        "2",
                        "CRF Lab value",
                        "16",
                        "TextBox",
                        ""});
            table11.AddRow(new string[] {
                        "No",
                        "2",
                        "CRF Lab Unit",
                        "01",
                        "ListBox",
                        "Save & Close Row"});
#line 112
   testRunner.And("I enter below \"Autobuild Table:\" autobuild table questions data in the CRF.", ((string)(null)), table11, "And ");
#line 116
   testRunner.And("I click on \"Save & Close\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
   testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("13_Verify the Lab report data")]
        public virtual void _13_VerifyTheLabReportData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("13_Verify the Lab report data", null, ((string[])(null)));
#line 119
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 120
   testRunner.When("I expand \"Visit (Week 2)\" to select and open \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 121
   testRunner.And("I click \"Checkout\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table12.AddRow(new string[] {
                        "2",
                        "CRF Lab Test Name",
                        "Test1",
                        "Link",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Lab Test Description",
                        "01",
                        "Link",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "CRF Lab Unit",
                        "01",
                        "Link",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "CRF Lab value",
                        "16",
                        "Link",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Lab Test Name",
                        "01",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Lab Test Code",
                        "01",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "LOINC Code",
                        "1",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Category",
                        "Cat1",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Subcategory",
                        "SubCat1",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Specimen",
                        "Specimen1",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Method",
                        "Method1",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Result Type",
                        "Result1",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Normal Reference Range High",
                        "< 15.00",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Critical Reference Range Low",
                        "> 20.41",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Normal Reference Range Low",
                        "> 3.00",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Critical Reference Range High",
                        "< 25.71",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Reference Range ID",
                        "{ReferenceRangeID1}",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Out of Normal Range Indicator",
                        "Above normal range high",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Normalized Patient Lab Value",
                        "32",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Normalized Lab Unit",
                        "cm",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Normalized Normal Reference Range Low",
                        "> 6.00",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Normalized Normal Reference Range High",
                        "< 30.00",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Normalized Critical Reference Range Low",
                        "> 40.82",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Reference Range Not Applicable",
                        "No",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Normalized Critical Reference Range High",
                        "< 51.42",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Precision",
                        "2",
                        "Text",
                        ""});
            table12.AddRow(new string[] {
                        "2",
                        "Conversion Factor",
                        "2",
                        "Text",
                        "Save & Close Row"});
#line 122
   testRunner.Then("I verify below ReferenceRange CRF \"Autobuild Table:\" table questions data in the " +
                    "CRF.", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("14_Clear Lab ID and verify References ranges are re-evaluated.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US61136.3.1,2,3,4")]
        public virtual void _14_ClearLabIDAndVerifyReferencesRangesAreRe_Evaluated_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("14_Clear Lab ID and verify References ranges are re-evaluated.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US61136.3.1,2,3,4"});
#line 155
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 156
 testRunner.When("I click on \"Save & Close\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 157
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
 testRunner.And("I click \"Checkout\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
 testRunner.And("I clear question \"Lab ID\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 160
 testRunner.And("I enter notes \"Clear Item 1 for testing\" in ClearItemModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 161
 testRunner.And("I click ok button in ClearItemModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 162
 testRunner.And("I click on \"Save\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
 testRunner.And("I click \"Checkout\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table13.AddRow(new string[] {
                        "Lab Name",
                        "[Blank]",
                        "Text"});
            table13.AddRow(new string[] {
                        "Company",
                        "[Blank]",
                        "Text"});
            table13.AddRow(new string[] {
                        "Lab Address",
                        "[Blank]",
                        "Text"});
            table13.AddRow(new string[] {
                        "Country",
                        "[Blank]",
                        "Text"});
#line 164
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table13, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table14.AddRow(new string[] {
                        "2",
                        "CRF Lab Test Name",
                        "Test1",
                        "Link",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Lab Test Description",
                        "[Blank]",
                        "Link",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "CRF Lab Unit",
                        "01",
                        "Link",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "CRF Lab value",
                        "16",
                        "Link",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Lab Test Name",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Lab Test Code",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "LOINC Code",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Category",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Subcategory",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Specimen",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Method",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Result Type",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Normal Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Critical Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Normal Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Critical Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Reference Range ID",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Out of Normal Range Indicator",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Normalized Patient Lab Value",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Normalized Lab Unit",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Normalized Normal Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Normalized Normal Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Normalized Critical Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Reference Range Not Applicable",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Normalized Critical Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Precision",
                        "[Blank]",
                        "Text",
                        ""});
            table14.AddRow(new string[] {
                        "2",
                        "Conversion Factor",
                        "[Blank]",
                        "Text",
                        "Save & Close Row"});
#line 170
 testRunner.And("I verify below ReferenceRange CRF \"Autobuild Table:\" table questions data in the " +
                    "CRF.", ((string)(null)), table14, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("15_Expand the Visit (Week 2) event and open the LabForm2 form and update the data" +
            ".")]
        public virtual void _15_ExpandTheVisitWeek2EventAndOpenTheLabForm2FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("15_Expand the Visit (Week 2) event and open the LabForm2 form and update the data" +
                    ".", null, ((string[])(null)));
#line 202
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 203
   testRunner.When("I click on \"Save\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 204
   testRunner.And("I click \"Checkout\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table15.AddRow(new string[] {
                        "Lab ID",
                        "Lab01 (L01)",
                        "ListBox"});
#line 205
      testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table15, "And ");
#line 208
   testRunner.And("I click on \"Save\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 209
   testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("16_Clear Lab ID and verify References ranges are re-evaluated.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US61136.3.1,2,3,4")]
        public virtual void _16_ClearLabIDAndVerifyReferencesRangesAreRe_Evaluated_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("16_Clear Lab ID and verify References ranges are re-evaluated.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US61136.3.1,2,3,4"});
#line 213
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 214
 testRunner.When("I click \"Checkout\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 215
 testRunner.And("I clear question \"CRF Collection Date\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 216
 testRunner.And("I enter notes \"Clear Item 6 for testing\" in ClearItemModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
 testRunner.And("I click ok button in ClearItemModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
 testRunner.And("I click on \"Save\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 219
 testRunner.And("I click \"Checkout\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table16.AddRow(new string[] {
                        "Lab Name",
                        "Lab01",
                        "Text"});
            table16.AddRow(new string[] {
                        "Company",
                        "Perceptive",
                        "Text"});
            table16.AddRow(new string[] {
                        "Lab Address",
                        "Building No 20 Mindspace Hitechcity",
                        "Text"});
            table16.AddRow(new string[] {
                        "Country",
                        "INDIA",
                        "Text"});
#line 220
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table16, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table17.AddRow(new string[] {
                        "2",
                        "CRF Lab Test Name",
                        "Test1",
                        "Link",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Lab Test Description",
                        "[Blank]",
                        "Link",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "CRF Lab Unit",
                        "01",
                        "Link",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "CRF Lab value",
                        "16",
                        "Link",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Lab Test Name",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Lab Test Code",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "LOINC Code",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Category",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Subcategory",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Specimen",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Method",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Result Type",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Normal Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Critical Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Normal Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Critical Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Reference Range ID",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Out of Normal Range Indicator",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Normalized Patient Lab Value",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Normalized Lab Unit",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Normalized Normal Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Normalized Normal Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Normalized Critical Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Reference Range Not Applicable",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Normalized Critical Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Precision",
                        "[Blank]",
                        "Text",
                        ""});
            table17.AddRow(new string[] {
                        "2",
                        "Conversion Factor",
                        "[Blank]",
                        "Text",
                        "Save & Close Row"});
#line 226
 testRunner.And("I verify below ReferenceRange CRF \"Autobuild Table:\" table questions data in the " +
                    "CRF.", ((string)(null)), table17, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("17_Expand the Visit (Week 2) event and open the LabForm2 form and update the data" +
            "")]
        public virtual void _17_ExpandTheVisitWeek2EventAndOpenTheLabForm2FormAndUpdateTheData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("17_Expand the Visit (Week 2) event and open the LabForm2 form and update the data" +
                    "", null, ((string[])(null)));
#line 258
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 259
   testRunner.When("I click on \"Save\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 260
   testRunner.And("I click \"Checkout\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table18.AddRow(new string[] {
                        "CRF Collection Date",
                        "02/28/2019",
                        "TextBox"});
#line 261
      testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table18, "And ");
#line 264
   testRunner.And("I click on \"Save\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 265
   testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("18_Clear CRF Lab Unit and verify References ranges are re-evaluated.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US61136.3.1,2,3,4")]
        public virtual void _18_ClearCRFLabUnitAndVerifyReferencesRangesAreRe_Evaluated_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("18_Clear CRF Lab Unit and verify References ranges are re-evaluated.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US61136.3.1,2,3,4"});
#line 269
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 270
 testRunner.When("I click \"Checkout\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 271
 testRunner.And("I expand row \"2\" of table \"Autobuild Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 272
 testRunner.And("I clear question \"CRF Lab Unit\" of table \"Autobuild Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 273
 testRunner.And("I enter notes \"Clear Item 8.2.3 for testing\" in ClearItemModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 274
 testRunner.And("I click ok button in ClearItemModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 275
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Autobuild Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 276
 testRunner.And("I click on \"Save\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 277
 testRunner.And("I click \"Checkout\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table19.AddRow(new string[] {
                        "Lab Name",
                        "Lab01",
                        "Text"});
            table19.AddRow(new string[] {
                        "Company",
                        "Perceptive",
                        "Text"});
            table19.AddRow(new string[] {
                        "Lab Address",
                        "Building No 20 Mindspace Hitechcity",
                        "Text"});
            table19.AddRow(new string[] {
                        "Country",
                        "INDIA",
                        "Text"});
#line 278
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table19, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table20.AddRow(new string[] {
                        "2",
                        "CRF Lab Test Name",
                        "Test1",
                        "Link",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Lab Test Description",
                        "[Blank]",
                        "Link",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "CRF Lab Unit",
                        "[Blank]",
                        "ListBox",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "CRF Lab value",
                        "16",
                        "Link",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Lab Test Name",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Lab Test Code",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "LOINC Code",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Category",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Subcategory",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Specimen",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Method",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Result Type",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Normal Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Critical Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Normal Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Critical Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Reference Range ID",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Out of Normal Range Indicator",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Normalized Patient Lab Value",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Normalized Lab Unit",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Normalized Normal Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Normalized Normal Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Normalized Critical Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Reference Range Not Applicable",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Normalized Critical Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Precision",
                        "[Blank]",
                        "Text",
                        ""});
            table20.AddRow(new string[] {
                        "2",
                        "Conversion Factor",
                        "[Blank]",
                        "Text",
                        "Save & Close Row"});
#line 284
 testRunner.And("I verify below ReferenceRange CRF \"Autobuild Table:\" table questions data in the " +
                    "CRF.", ((string)(null)), table20, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("19_Expand the Visit (Week 2) event and open the LabForm2 form and update the data" +
            "")]
        public virtual void _19_ExpandTheVisitWeek2EventAndOpenTheLabForm2FormAndUpdateTheData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("19_Expand the Visit (Week 2) event and open the LabForm2 form and update the data" +
                    "", null, ((string[])(null)));
#line 316
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 317
   testRunner.When("I click on \"Save\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 318
   testRunner.And("I click \"Checkout\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table21.AddRow(new string[] {
                        "No",
                        "2",
                        "CRF Lab Unit",
                        "01",
                        "ListBox",
                        "Save & Close Row"});
#line 319
   testRunner.And("I enter below \"Autobuild Table:\" autobuild table questions data in the CRF.", ((string)(null)), table21, "And ");
#line 322
   testRunner.And("I click on \"Save & Close\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 323
   testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("20_Clear Lab ID by clicking MarkNotAnswered and verify reference range data.")]
        public virtual void _20_ClearLabIDByClickingMarkNotAnsweredAndVerifyReferenceRangeData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("20_Clear Lab ID by clicking MarkNotAnswered and verify reference range data.", null, ((string[])(null)));
#line 326
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 327
 testRunner.When("I expand \"Visit (Week 2)\" to select and open \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 328
 testRunner.And("I click \"Checkout\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 329
 testRunner.And("I click icon \"icon_mna_disabled.png\" for the flat question \"Lab ID\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 330
    testRunner.And("I enter comments \"Comments for MarkItemNotAnswered\" in MarkItemDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 331
    testRunner.And("I click ok button in MarkItemDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 332
 testRunner.And("I click on \"Save\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 333
 testRunner.And("I click \"Checkout\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table22.AddRow(new string[] {
                        "Lab Name",
                        "[Blank]",
                        "Text"});
            table22.AddRow(new string[] {
                        "Company",
                        "[Blank]",
                        "Text"});
            table22.AddRow(new string[] {
                        "Lab Address",
                        "[Blank]",
                        "Text"});
            table22.AddRow(new string[] {
                        "Country",
                        "[Blank]",
                        "Text"});
#line 334
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table22, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table23.AddRow(new string[] {
                        "2",
                        "CRF Lab Test Name",
                        "Test1",
                        "Link",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Lab Test Description",
                        "[Blank]",
                        "Link",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "CRF Lab Unit",
                        "01",
                        "Link",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "CRF Lab value",
                        "16",
                        "Link",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Lab Test Name",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Lab Test Code",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "LOINC Code",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Category",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Subcategory",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Specimen",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Method",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Result Type",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Normal Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Critical Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Normal Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Critical Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Reference Range ID",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Out of Normal Range Indicator",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Normalized Patient Lab Value",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Normalized Lab Unit",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Normalized Normal Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Normalized Normal Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Normalized Critical Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Reference Range Not Applicable",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Normalized Critical Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Precision",
                        "[Blank]",
                        "Text",
                        ""});
            table23.AddRow(new string[] {
                        "2",
                        "Conversion Factor",
                        "[Blank]",
                        "Text",
                        "Save & Close Row"});
#line 340
 testRunner.And("I verify below ReferenceRange CRF \"Autobuild Table:\" table questions data in the " +
                    "CRF.", ((string)(null)), table23, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("21_Expand the Visit (Week 2) event and open the LabForm2 form and update the data" +
            "")]
        public virtual void _21_ExpandTheVisitWeek2EventAndOpenTheLabForm2FormAndUpdateTheData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("21_Expand the Visit (Week 2) event and open the LabForm2 form and update the data" +
                    "", null, ((string[])(null)));
#line 372
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 373
   testRunner.When("I click on \"Save\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 374
   testRunner.And("I click \"Checkout\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes"});
            table24.AddRow(new string[] {
                        "Lab ID",
                        "[Blank]",
                        "ListBox",
                        "Lab01 (L01)",
                        "DCF",
                        "Lab ID selected"});
#line 375
   testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table24, "And ");
#line 378
   testRunner.And("I click on \"Save\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 379
   testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("22_Clear CRF Collection Date and verify References ranges are re-evaluated.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US61136.3.1,2,3,4")]
        public virtual void _22_ClearCRFCollectionDateAndVerifyReferencesRangesAreRe_Evaluated_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22_Clear CRF Collection Date and verify References ranges are re-evaluated.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US61136.3.1,2,3,4"});
#line 383
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 384
 testRunner.When("I click \"Checkout\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 385
 testRunner.And("I click icon \"icon_mna_disabled.png\" for the flat question \"CRF Collection Date\" " +
                    "in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 386
    testRunner.And("I enter comments \"Comments for MarkItemNotAnswered\" in MarkItemDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 387
    testRunner.And("I click ok button in MarkItemDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 388
 testRunner.And("I click on \"Save\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table25.AddRow(new string[] {
                        "Lab Name",
                        "Lab01",
                        "Text"});
            table25.AddRow(new string[] {
                        "Company",
                        "Perceptive",
                        "Text"});
            table25.AddRow(new string[] {
                        "Lab Address",
                        "Building No 20 Mindspace Hitechcity",
                        "Text"});
            table25.AddRow(new string[] {
                        "Country",
                        "INDIA",
                        "Text"});
#line 389
 testRunner.And("I click \"Checkout\" button on \"LabForm2\" CRF.", ((string)(null)), table25, "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table26.AddRow(new string[] {
                        "2",
                        "CRF Lab Test Name",
                        "Test1",
                        "Link",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Lab Test Description",
                        "[Blank]",
                        "Link",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "CRF Lab Unit",
                        "01",
                        "Link",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "CRF Lab value",
                        "16",
                        "Link",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Lab Test Name",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Lab Test Code",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "LOINC Code",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Category",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Subcategory",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Specimen",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Method",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Result Type",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Normal Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Critical Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Normal Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Critical Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Reference Range ID",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Out of Normal Range Indicator",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Normalized Patient Lab Value",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Normalized Lab Unit",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Normalized Normal Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Normalized Normal Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Normalized Critical Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Reference Range Not Applicable",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Normalized Critical Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Precision",
                        "[Blank]",
                        "Text",
                        ""});
            table26.AddRow(new string[] {
                        "2",
                        "Conversion Factor",
                        "[Blank]",
                        "Text",
                        "Save & Close Row"});
#line 395
 testRunner.Then("I verify below ReferenceRange CRF \"Autobuild Table:\" table questions data in the " +
                    "CRF.", ((string)(null)), table26, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("23_Expand the Visit (Week 2) event and open the LabForm2 form and update the data" +
            "")]
        public virtual void _23_ExpandTheVisitWeek2EventAndOpenTheLabForm2FormAndUpdateTheData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("23_Expand the Visit (Week 2) event and open the LabForm2 form and update the data" +
                    "", null, ((string[])(null)));
#line 427
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 428
   testRunner.When("I click on \"Save\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 429
   testRunner.And("I click \"Checkout\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes"});
            table27.AddRow(new string[] {
                        "CRF Collection Date",
                        "[Blank]",
                        "TextBox",
                        "02/28/2019",
                        "DCF",
                        "Updated"});
#line 430
      testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table27, "And ");
#line 433
   testRunner.And("I click on \"Save\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 434
   testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("24_Clear CRF Lab Unit and verify References ranges are re-evaluated")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US61136.3.1,2,3,4")]
        public virtual void _24_ClearCRFLabUnitAndVerifyReferencesRangesAreRe_Evaluated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("24_Clear CRF Lab Unit and verify References ranges are re-evaluated", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US61136.3.1,2,3,4"});
#line 438
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 439
 testRunner.When("I click \"Checkout\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 440
 testRunner.And("I expand row \"2\" of table \"Autobuild Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 441
 testRunner.And("I click \"icon_mna_disabled.png\" icon of a question \"CRF Lab Unit\" of table \"Autob" +
                    "uild Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 442
    testRunner.And("I enter comments \"Comments for MarkItemNotAnswered\" in MarkItemDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 443
    testRunner.And("I click ok button in MarkItemDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 444
    testRunner.And("I see icon \"icon_mna.png\" of a question \"CRF Lab Unit\" of table \"Autobuild Table:" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 445
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Autobuild Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 446
 testRunner.And("I click on \"Save\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 447
 testRunner.And("I click \"Checkout\" button on \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table28.AddRow(new string[] {
                        "Lab Name",
                        "Lab01",
                        "Text"});
            table28.AddRow(new string[] {
                        "Company",
                        "Perceptive",
                        "Text"});
            table28.AddRow(new string[] {
                        "Lab Address",
                        "Building No 20 Mindspace Hitechcity",
                        "Text"});
            table28.AddRow(new string[] {
                        "Country",
                        "INDIA",
                        "Text"});
#line 448
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table28, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table29.AddRow(new string[] {
                        "2",
                        "CRF Lab Test Name",
                        "Test1",
                        "Link",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Lab Test Description",
                        "[Blank]",
                        "Link",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "CRF Lab Unit",
                        "[Blank]",
                        "Link",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "CRF Lab value",
                        "16",
                        "Link",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Lab Test Name",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Lab Test Code",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "LOINC Code",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Category",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Subcategory",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Specimen",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Method",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Result Type",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Normal Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Critical Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Normal Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Critical Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Reference Range ID",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Out of Normal Range Indicator",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Normalized Patient Lab Value",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Normalized Lab Unit",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Normalized Normal Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Normalized Normal Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Normalized Critical Reference Range Low",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Reference Range Not Applicable",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Normalized Critical Reference Range High",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Precision",
                        "[Blank]",
                        "Text",
                        ""});
            table29.AddRow(new string[] {
                        "2",
                        "Conversion Factor",
                        "[Blank]",
                        "Text",
                        "Save & Close Row"});
#line 454
 testRunner.And("I verify below ReferenceRange CRF \"Autobuild Table:\" table questions data in the " +
                    "CRF.", ((string)(null)), table29, "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

