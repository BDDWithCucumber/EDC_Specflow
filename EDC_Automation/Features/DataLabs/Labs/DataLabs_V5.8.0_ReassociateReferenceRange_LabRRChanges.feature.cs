// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.Labs
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DataLabs_V5.8.0_ReassociateReferenceRange_LabRRChanges")]
    public partial class DataLabs_V5_8_0_ReassociateReferenceRange_LabRRChangesFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "DataLabs_V5.8.0_ReassociateReferenceRange_LabRRChanges.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DataLabs_V5.8.0_ReassociateReferenceRange_LabRRChanges", @"	Test Summary: US59255, US56635
		System shall associate/re-evaluate the reference range for a lab value when any of the below mentioned Reference Range attribute is changed or new RR is added:
			Start Date
			End Date
			Gender
			From Age
			To Age
			RR Unit Name
		System shall make a call to Lab API which will re-evaluate associated Reference Range record and associate matching record.
		Update of Reference Range Records shall happen asynchronously after form save. I can view updated reference ranges when accessed the form again.
		If Reference Ranges are added as questions & mapped on Lab Mappings,
		Re-evaluated Reference Ranges shall be displayed on eCRF under respective question column.
		If Reference Ranges are not added as questions but mapped on Lab Mappings item.
		Re-evaluated Reference Ranges shall not be displayed on eCRF. Verify DB to check values.
		If any of the Patient records are not associated with RR, newly added record will be matched against this patient record and associate accordingly if attributes are matching.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01_Login to Datalabs")]
        public virtual void _01_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_Login to Datalabs", null, ((string[])(null)));
#line 18
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 19
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02_Delete a study")]
        public virtual void _02_DeleteAStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02_Delete a study", null, ((string[])(null)));
#line 22
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 23
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("03_Upload and publish the study.")]
        public virtual void _03_UploadAndPublishTheStudy_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03_Upload and publish the study.", null, ((string[])(null)));
#line 26
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 27
    testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
    testRunner.And("I upload a study \"TestLabs_Dictionary.zip\" with study label \"TestLabs_Data\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
    testRunner.Then("I see study label \"TestLabs_Data\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("04_Add sites to associate to labs.")]
        public virtual void _04_AddSitesToAssociateToLabs_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04_Add sites to associate to labs.", null, ((string[])(null)));
#line 31
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 32
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteId",
                        "SiteName",
                        "Address1",
                        "Address2",
                        "Address3",
                        "Address4",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "SiteStatus",
                        "DCFWorkflow",
                        "ExternalSource",
                        "ExternalId"});
            table1.AddRow(new string[] {
                        "01",
                        "Site",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        "-"});
            table1.AddRow(new string[] {
                        "02",
                        "Site",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        "-"});
#line 34
 testRunner.And("I enter sites details and Save", ((string)(null)), table1, "And ");
#line 38
 testRunner.Then("I see site \"01-Site\" in SiteManagementPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 39
 testRunner.And("I see site \"02-Site\" in SiteManagementPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("05_Assign testadmin testadmin user to 01-Site")]
        public virtual void _05_AssignTestadminTestadminUserTo01_Site()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05_Assign testadmin testadmin user to 01-Site", null, ((string[])(null)));
#line 41
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 42
 testRunner.When("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.Then("I see Site details page for \"01-Site\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("06_Assign testadmin testadmin user to 02-Site")]
        public virtual void _06_AssignTestadminTestadminUserTo02_Site()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06_Assign testadmin testadmin user to 02-Site", null, ((string[])(null)));
#line 47
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 48
 testRunner.When("I click breadcrumb \"Site Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 49
 testRunner.And("I open site with siteid \"02\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.Then("I see Site details page for \"02-Site\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("07_Remove the ODM URL")]
        public virtual void _07_RemoveTheODMURL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("07_Remove the ODM URL", null, ((string[])(null)));
#line 54
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 55
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 56
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.And("I click ActionPalette Item \"Edit Preferences\" in \"StudyResetAction\" ActionPalette" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.And("I open tab \"Forms\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.And("I select the \"Partial\" for Default Save: in StudyEditPreferencesFormsPage.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.And("I open tab \"patient data eventing\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.And("I remove the endpoint URL under Patient Data Eventing tab.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
 testRunner.And("I click \"Save\" button on the Edit Preferences page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 63
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("08_Add Labs")]
        public virtual void _08_AddLabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("08_Add Labs", null, ((string[])(null)));
#line 65
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 66
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 67
 testRunner.And("I click Link \"Lab Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
 testRunner.And("I click Link \"Manage Laboratories\" In Lab Management Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "LabId",
                        "LaboratoryName",
                        "Company",
                        "Department",
                        "Address1",
                        "Address2",
                        "Address3",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "LaboratoryStatus",
                        "ContactPerson"});
            table2.AddRow(new string[] {
                        "L01",
                        "Lab01",
                        "PFIZER",
                        "RD",
                        "A1",
                        "A2",
                        "A3",
                        "City1",
                        "AP",
                        "500084",
                        "INDIA(IND)",
                        "",
                        "11111111",
                        "22222222",
                        "Active",
                        "Mr.XYZ"});
#line 69
 testRunner.And("I enter labs details and Save", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "LabId",
                        "LaboratoryName",
                        "Company",
                        "Department",
                        "Address1",
                        "Address2",
                        "Address3",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "LaboratoryStatus",
                        "ContactPerson"});
            table3.AddRow(new string[] {
                        "L01",
                        "Lab01",
                        "PFIZER",
                        "RD",
                        "A1",
                        "A2",
                        "A3",
                        "City1",
                        "AP",
                        "500084",
                        "INDIA(IND)",
                        "",
                        "11111111",
                        "22222222",
                        "Active",
                        "Mr.XYZ"});
#line 72
 testRunner.Then("I see labs with details in lab grid", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("09_Associate Labs L01 for 01-SIte")]
        public virtual void _09_AssociateLabsL01For01_SIte()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("09_Associate Labs L01 for 01-SIte", null, ((string[])(null)));
#line 76
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 77
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
 testRunner.And("I click ActionPalette Item \"Associate Lab(s)\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
 testRunner.And("I add and save lab id \"L01\" and lab name \"Lab01\" to associated labs in AssociateL" +
                    "abs page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.And("I select sub tab \"Labs\" in site page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "LabId",
                        "LaboratoryName",
                        "Company",
                        "Department",
                        "LaboratoryStatus"});
            table4.AddRow(new string[] {
                        "L01",
                        "Lab01",
                        "PFIZER",
                        "RD",
                        "Active"});
#line 83
 testRunner.Then("I see lab data in labs tab of Site in SitePage", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("10_Associate Labs L01 for 02-SIte")]
        public virtual void _10_AssociateLabsL01For02_SIte()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("10_Associate Labs L01 for 02-SIte", null, ((string[])(null)));
#line 87
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 88
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 89
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
 testRunner.And("I open site with siteid \"02\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
 testRunner.And("I click ActionPalette Item \"Associate Lab(s)\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.And("I add and save lab id \"L01\" and lab name \"Lab01\" to associated labs in AssociateL" +
                    "abs page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.And("I select sub tab \"Labs\" in site page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "LabId",
                        "LaboratoryName",
                        "Company",
                        "Department",
                        "LaboratoryStatus"});
            table5.AddRow(new string[] {
                        "L01",
                        "Lab01",
                        "PFIZER",
                        "RD",
                        "Active"});
#line 94
 testRunner.Then("I see lab data in labs tab of Site in SitePage", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("11_Add Form Data and Patients using CDISC webservice ConsumeODM1_StrTransactional" +
            " method")]
        public virtual void _11_AddFormDataAndPatientsUsingCDISCWebserviceConsumeODM1_StrTransactionalMethod()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("11_Add Form Data and Patients using CDISC webservice ConsumeODM1_StrTransactional" +
                    " method", null, ((string[])(null)));
#line 98
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransactionTypeData",
                        "AddNewPatientsData",
                        "ODMDATA"});
            table6.AddRow(new string[] {
                        "Legacy",
                        "true",
                        "Lab_Multiple Patient_Data_CDISCUpdate01PAT.xml"});
            table6.AddRow(new string[] {
                        "Legacy",
                        "true",
                        "Lab_Multiple Patient_Data_CDISCUpdate02PAT.xml"});
            table6.AddRow(new string[] {
                        "Legacy",
                        "true",
                        "Lab_Multiple Patient_Data_CDISCUpdate03PAT.xml"});
            table6.AddRow(new string[] {
                        "Legacy",
                        "true",
                        "Lab_Multiple Patient_Data_CDISCUpdate04PAT.xml"});
            table6.AddRow(new string[] {
                        "Legacy",
                        "true",
                        "Lab_Multiple Patient_Data_CDISCUpdate05PAT.xml"});
            table6.AddRow(new string[] {
                        "Legacy",
                        "true",
                        "Lab_Multiple Patient_Data_CDISCUpdate06PAT.xml"});
            table6.AddRow(new string[] {
                        "Legacy",
                        "true",
                        "Lab_Multiple Patient_Data_CDISCUpdate07PAT.xml"});
            table6.AddRow(new string[] {
                        "Legacy",
                        "true",
                        "Lab_Multiple Patient_Data_CDISCUpdate08PAT.xml"});
            table6.AddRow(new string[] {
                        "Legacy",
                        "true",
                        "Lab_Multiple Patient_Data_CDISCUpdate09PAT.xml"});
            table6.AddRow(new string[] {
                        "Legacy",
                        "true",
                        "Lab_Multiple Patient_Data_CDISCUpdate10PAT.xml"});
            table6.AddRow(new string[] {
                        "Legacy",
                        "true",
                        "Lab_Multiple Patient_Data_CDISCUpdate11PAT.xml"});
            table6.AddRow(new string[] {
                        "Legacy",
                        "true",
                        "Lab_Multiple Patient_Data_CDISCUpdate12PAT.xml"});
#line 99
 testRunner.When("I add item data using ConsumeODMStrTransactional webservice with below data and o" +
                    "dmfile.", ((string)(null)), table6, "When ");
#line 113
 testRunner.Then("The response should contain success status code as \"200\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("12_Update the ODM Endpoint URL")]
        public virtual void _12_UpdateTheODMEndpointURL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("12_Update the ODM Endpoint URL", null, ((string[])(null)));
#line 121
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 122
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 123
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
 testRunner.And("I click ActionPalette Item \"Edit Preferences\" in \"StudyResetAction\" ActionPalette" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 125
 testRunner.And("I open tab \"patient data eventing\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
 testRunner.And("I update the endpoint URL under Patient Data Eventing tab.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
 testRunner.And("I click \"Save\" button on the Edit Preferences page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.Then("I verify the success message displayed as \"Edit Preferences Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("13_Add a new lab test reference range record under Lab01 under RBC")]
        public virtual void _13_AddANewLabTestReferenceRangeRecordUnderLab01UnderRBC()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("13_Add a new lab test reference range record under Lab01 under RBC", null, ((string[])(null)));
#line 130
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 131
  testRunner.Given("I navigate to \"Local Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 132
     testRunner.When("I open lab with labid \"L01\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 133
  testRunner.And("I open labtest with labname \"RBC\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate",
                        "Gender",
                        "FromAgeSelect",
                        "FromAgeSet",
                        "ToAgeSelect",
                        "ToAgeSet",
                        "NormalRangeLowSelect",
                        "NormalRangeLowSet",
                        "NormalRangeHighSelect",
                        "NormalRangeHighSet",
                        "ClinicalRangeLowSelect",
                        "ClinicalRangeLowSet",
                        "ClinicalRangeHighSelect",
                        "ClinicalRangeHighSet",
                        "Unit",
                        "NA"});
            table7.AddRow(new string[] {
                        "01/01/2019",
                        "01/31/2019",
                        "Male",
                        ">",
                        "20",
                        "<",
                        "30",
                        ">",
                        "5",
                        "<",
                        "15",
                        ">",
                        "4",
                        "<",
                        "16",
                        "fL",
                        "False"});
#line 134
  testRunner.And("I click add and enter reference ranges of a lab test and Save and can see \"LabTes" +
                    "t Reference Range Added Successfully\" message upon each record save in Reference" +
                    "RangesPage including NA", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReferenceRangeID"});
            table8.AddRow(new string[] {
                        "{ReferenceRangeID1}"});
#line 137
  testRunner.Then("I see the reference range ids in the Reference Range Table.", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("14_Verify the Non e CRF question RR values are calculated on adding RR attribute")]
        public virtual void _14_VerifyTheNonECRFQuestionRRValuesAreCalculatedOnAddingRRAttribute()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("14_Verify the Non e CRF question RR values are calculated on adding RR attribute", null, ((string[])(null)));
#line 141
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 142
  testRunner.When(@"I execute the query ""Select DataValue from PatientData where DataRowActive=0 and DataRow=2 and PatientFormKey in (Select PatientFormKey from PatientForm a Join PatientEvent b on a.PatientEventKey=b.PatientEventKey join Patient c on b.PatientKey=c.PatientKey and c.PatientIdentity = '01-PAT')"".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "DataValue"});
            table9.AddRow(new string[] {
                        "RBC"});
            table9.AddRow(new string[] {
                        "02"});
            table9.AddRow(new string[] {
                        "2"});
            table9.AddRow(new string[] {
                        "Cat2"});
            table9.AddRow(new string[] {
                        "SubCat2"});
            table9.AddRow(new string[] {
                        "Specimen2"});
            table9.AddRow(new string[] {
                        "Method2"});
            table9.AddRow(new string[] {
                        "Result2"});
            table9.AddRow(new string[] {
                        "> 5.00"});
            table9.AddRow(new string[] {
                        "< 15.00"});
            table9.AddRow(new string[] {
                        "> 4.00"});
            table9.AddRow(new string[] {
                        "< 16.00"});
            table9.AddRow(new string[] {
                        "Below normal range low"});
            table9.AddRow(new string[] {
                        "20"});
            table9.AddRow(new string[] {
                        "pg"});
            table9.AddRow(new string[] {
                        "> 25.00"});
            table9.AddRow(new string[] {
                        "< 75.00"});
            table9.AddRow(new string[] {
                        "> 20.00"});
            table9.AddRow(new string[] {
                        "< 80.00"});
            table9.AddRow(new string[] {
                        "3"});
            table9.AddRow(new string[] {
                        "5"});
#line 143
  testRunner.Then("The below result should be retrieved.", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("15_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        public virtual void _15_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("15_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, ((string[])(null)));
#line 167
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 168
 testRunner.Given(@"I save the Event XML data in ""NoneCRFRRValuesOnRRUpdateActual1.xml"" file by executing the query ""Select Top 1 XmlMessage from OdmSubscriberDetail where XmlMessage like '%'+ (Select SubjectKey from Patient where PatientIdentity = '01-PAT') +  '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 169
 testRunner.And("I have the XML file \"NoneCRFRRValuesOnRRUpdateExpected1.xml\" available in the pro" +
                    "ject folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
 testRunner.And("I have the XML file \"NoneCRFRRValuesOnRRUpdateActual1.xml\" available in the Resul" +
                    "t XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table10.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table10.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table10.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table10.AddRow(new string[] {
                        "",
                        "FileOID"});
            table10.AddRow(new string[] {
                        "",
                        "SourceID"});
            table10.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 171
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("16_Modify the reference range  From age and To age to update reference range valu" +
            "es")]
        public virtual void _16_ModifyTheReferenceRangeFromAgeAndToAgeToUpdateReferenceRangeValues()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("16_Modify the reference range  From age and To age to update reference range valu" +
                    "es", null, ((string[])(null)));
#line 181
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 182
 testRunner.When("I click on \"Edit\" icon for the first record to modify the data in ReferenceRanges" +
                    "Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "FromAgeSet",
                        "ToAgeSet"});
            table11.AddRow(new string[] {
                        "60",
                        "70"});
#line 183
 testRunner.And("I modify reference ranges of a existing lab test and Save in ReferenceRangesPage", ((string)(null)), table11, "And ");
#line 186
 testRunner.And("I Click the save button in ReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 187
 testRunner.Then("a \"LabTest Reference Range Updated Successfully\" message should be displayed in R" +
                    "eferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("17_Verify the Non e CRF question RR values are calculated on updating Form age an" +
            "d To Age RR attribute")]
        public virtual void _17_VerifyTheNonECRFQuestionRRValuesAreCalculatedOnUpdatingFormAgeAndToAgeRRAttribute()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("17_Verify the Non e CRF question RR values are calculated on updating Form age an" +
                    "d To Age RR attribute", null, ((string[])(null)));
#line 189
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 190
  testRunner.When(@"I execute the query ""Select DataValue from PatientData where DataRowActive=0 and DataRow=2 and PatientFormKey in (Select PatientFormKey from PatientForm a Join PatientEvent b on a.PatientEventKey=b.PatientEventKey join Patient c on b.PatientKey=c.PatientKey and c.PatientIdentity = '09-PAT')"".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "DataValue"});
            table12.AddRow(new string[] {
                        "RBC"});
            table12.AddRow(new string[] {
                        "02"});
            table12.AddRow(new string[] {
                        "2"});
            table12.AddRow(new string[] {
                        "Cat2"});
            table12.AddRow(new string[] {
                        "SubCat2"});
            table12.AddRow(new string[] {
                        "Specimen2"});
            table12.AddRow(new string[] {
                        "Method2"});
            table12.AddRow(new string[] {
                        "Result2"});
            table12.AddRow(new string[] {
                        "> 5.00"});
            table12.AddRow(new string[] {
                        "< 15.00"});
            table12.AddRow(new string[] {
                        "> 4.00"});
            table12.AddRow(new string[] {
                        "< 16.00"});
            table12.AddRow(new string[] {
                        "Above normal range high"});
            table12.AddRow(new string[] {
                        "125"});
            table12.AddRow(new string[] {
                        "pg"});
            table12.AddRow(new string[] {
                        "> 25.00"});
            table12.AddRow(new string[] {
                        "< 75.00"});
            table12.AddRow(new string[] {
                        "> 20.00"});
            table12.AddRow(new string[] {
                        "< 80.00"});
            table12.AddRow(new string[] {
                        "3"});
            table12.AddRow(new string[] {
                        "5"});
#line 191
  testRunner.Then("The below result should be retrieved.", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("18_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        public virtual void _18_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("18_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, ((string[])(null)));
#line 215
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 216
 testRunner.Given(@"I save the Event XML data in ""NoneCRFRRValuesOnRRUpdateActual2.xml"" file by executing the query ""Select Top 1 XmlMessage from OdmSubscriberDetail where XmlMessage like '%'+ (Select SubjectKey from Patient where PatientIdentity = '09-PAT') +  '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 217
 testRunner.And("I have the XML file \"NoneCRFRRValuesOnRRUpdateExpected2.xml\" available in the pro" +
                    "ject folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
 testRunner.And("I have the XML file \"NoneCRFRRValuesOnRRUpdateActual2.xml\" available in the Resul" +
                    "t XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table13.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table13.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table13.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table13.AddRow(new string[] {
                        "",
                        "FileOID"});
            table13.AddRow(new string[] {
                        "",
                        "SourceID"});
            table13.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 219
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table13, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("19_Verify the Non eCRF question RR values are removed when RR From Age and RR To " +
            "Age is updated")]
        public virtual void _19_VerifyTheNonECRFQuestionRRValuesAreRemovedWhenRRFromAgeAndRRToAgeIsUpdated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("19_Verify the Non eCRF question RR values are removed when RR From Age and RR To " +
                    "Age is updated", null, ((string[])(null)));
#line 228
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 229
  testRunner.When(@"I execute the query ""Select DataValue from PatientData where DataRowActive=0 and DataRow=2 and PatientFormKey in (Select PatientFormKey from PatientForm a Join PatientEvent b on a.PatientEventKey=b.PatientEventKey join Patient c on b.PatientKey=c.PatientKey and c.PatientIdentity = '01-PAT')"".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 230
  testRunner.Then("The result should have empty values.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("20_Modify the reference range  Start Date and End Date to update reference range " +
            "values")]
        public virtual void _20_ModifyTheReferenceRangeStartDateAndEndDateToUpdateReferenceRangeValues()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("20_Modify the reference range  Start Date and End Date to update reference range " +
                    "values", null, ((string[])(null)));
#line 233
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 234
 testRunner.When("I click on \"Edit\" icon for the first record to modify the data in ReferenceRanges" +
                    "Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate"});
            table14.AddRow(new string[] {
                        "05/01/2019",
                        "05/31/2019"});
#line 235
 testRunner.And("I modify reference ranges of a existing lab test and Save in ReferenceRangesPage", ((string)(null)), table14, "And ");
#line 238
 testRunner.And("I Click the save button in ReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 239
 testRunner.Then("a \"LabTest Reference Range Updated Successfully\" message should be displayed in R" +
                    "eferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("21_Verify the Non e CRF question RR values are calculated on updating Start Date " +
            "and End Date RR attribute")]
        public virtual void _21_VerifyTheNonECRFQuestionRRValuesAreCalculatedOnUpdatingStartDateAndEndDateRRAttribute()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("21_Verify the Non e CRF question RR values are calculated on updating Start Date " +
                    "and End Date RR attribute", null, ((string[])(null)));
#line 241
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 242
  testRunner.When(@"I execute the query ""Select DataValue from PatientData where DataRowActive=0 and DataRow=2 and PatientFormKey in (Select PatientFormKey from PatientForm a Join PatientEvent b on a.PatientEventKey=b.PatientEventKey join Patient c on b.PatientKey=c.PatientKey and c.PatientIdentity = '03-PAT')"".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "DataValue"});
            table15.AddRow(new string[] {
                        "RBC"});
            table15.AddRow(new string[] {
                        "02"});
            table15.AddRow(new string[] {
                        "2"});
            table15.AddRow(new string[] {
                        "Cat2"});
            table15.AddRow(new string[] {
                        "SubCat2"});
            table15.AddRow(new string[] {
                        "Specimen2"});
            table15.AddRow(new string[] {
                        "Method2"});
            table15.AddRow(new string[] {
                        "Result2"});
            table15.AddRow(new string[] {
                        "> 5.00"});
            table15.AddRow(new string[] {
                        "< 15.00"});
            table15.AddRow(new string[] {
                        "> 4.00"});
            table15.AddRow(new string[] {
                        "< 16.00"});
            table15.AddRow(new string[] {
                        "Above normal range high"});
            table15.AddRow(new string[] {
                        "140"});
            table15.AddRow(new string[] {
                        "pg"});
            table15.AddRow(new string[] {
                        "> 25.00"});
            table15.AddRow(new string[] {
                        "< 75.00"});
            table15.AddRow(new string[] {
                        "> 20.00"});
            table15.AddRow(new string[] {
                        "< 80.00"});
            table15.AddRow(new string[] {
                        "3"});
            table15.AddRow(new string[] {
                        "5"});
#line 243
  testRunner.Then("The below result should be retrieved.", ((string)(null)), table15, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("22_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        public virtual void _22_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, ((string[])(null)));
#line 267
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 268
 testRunner.Given(@"I save the Event XML data in ""NoneCRFRRValuesOnRRUpdateActual3.xml"" file by executing the query ""Select Top 1 XmlMessage from OdmSubscriberDetail where XmlMessage like '%'+ (Select SubjectKey from Patient where PatientIdentity = '03-PAT') +  '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 269
 testRunner.And("I have the XML file \"NoneCRFRRValuesOnRRUpdateExpected3.xml\" available in the pro" +
                    "ject folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 270
 testRunner.And("I have the XML file \"NoneCRFRRValuesOnRRUpdateActual3.xml\" available in the Resul" +
                    "t XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table16.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table16.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table16.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table16.AddRow(new string[] {
                        "",
                        "FileOID"});
            table16.AddRow(new string[] {
                        "",
                        "SourceID"});
            table16.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 271
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table16, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("23_Verify the Non eCRF question RR values are removed when Start Date and End Dat" +
            "e is updated")]
        public virtual void _23_VerifyTheNonECRFQuestionRRValuesAreRemovedWhenStartDateAndEndDateIsUpdated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("23_Verify the Non eCRF question RR values are removed when Start Date and End Dat" +
                    "e is updated", null, ((string[])(null)));
#line 280
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 281
  testRunner.When(@"I execute the query ""Select DataValue from PatientData where DataRowActive=0 and DataRow=2 and PatientFormKey in (Select PatientFormKey from PatientForm a Join PatientEvent b on a.PatientEventKey=b.PatientEventKey join Patient c on b.PatientKey=c.PatientKey and c.PatientIdentity = '09-PAT')"".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 282
  testRunner.Then("The result should have empty values.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("24_Modify the reference range  Gender to update reference range values")]
        public virtual void _24_ModifyTheReferenceRangeGenderToUpdateReferenceRangeValues()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("24_Modify the reference range  Gender to update reference range values", null, ((string[])(null)));
#line 285
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 286
 testRunner.When("I click on \"Edit\" icon for the first record to modify the data in ReferenceRanges" +
                    "Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Gender"});
            table17.AddRow(new string[] {
                        "Female"});
#line 287
 testRunner.And("I modify reference ranges of a existing lab test and Save in ReferenceRangesPage", ((string)(null)), table17, "And ");
#line 290
 testRunner.And("I Click the save button in ReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 291
 testRunner.Then("a \"LabTest Reference Range Updated Successfully\" message should be displayed in R" +
                    "eferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("25_Verify the Non e CRF question RR values are calculated on updating Start Date " +
            "and End Date RR attribute")]
        public virtual void _25_VerifyTheNonECRFQuestionRRValuesAreCalculatedOnUpdatingStartDateAndEndDateRRAttribute()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("25_Verify the Non e CRF question RR values are calculated on updating Start Date " +
                    "and End Date RR attribute", null, ((string[])(null)));
#line 293
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 294
  testRunner.When(@"I execute the query ""Select DataValue from PatientData where DataRowActive=0 and DataRow=2 and PatientFormKey in (Select PatientFormKey from PatientForm a Join PatientEvent b on a.PatientEventKey=b.PatientEventKey join Patient c on b.PatientKey=c.PatientKey and c.PatientIdentity = '06-PAT')"".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "DataValue"});
            table18.AddRow(new string[] {
                        "RBC"});
            table18.AddRow(new string[] {
                        "02"});
            table18.AddRow(new string[] {
                        "2"});
            table18.AddRow(new string[] {
                        "Cat2"});
            table18.AddRow(new string[] {
                        "SubCat2"});
            table18.AddRow(new string[] {
                        "Specimen2"});
            table18.AddRow(new string[] {
                        "Method2"});
            table18.AddRow(new string[] {
                        "Result2"});
            table18.AddRow(new string[] {
                        "> 5.00"});
            table18.AddRow(new string[] {
                        "< 15.00"});
            table18.AddRow(new string[] {
                        "> 4.00"});
            table18.AddRow(new string[] {
                        "< 16.00"});
            table18.AddRow(new string[] {
                        "Above normal range high"});
            table18.AddRow(new string[] {
                        "140"});
            table18.AddRow(new string[] {
                        "pg"});
            table18.AddRow(new string[] {
                        "> 25.00"});
            table18.AddRow(new string[] {
                        "< 75.00"});
            table18.AddRow(new string[] {
                        "> 20.00"});
            table18.AddRow(new string[] {
                        "< 80.00"});
            table18.AddRow(new string[] {
                        "3"});
            table18.AddRow(new string[] {
                        "5"});
#line 295
  testRunner.Then("The below result should be retrieved.", ((string)(null)), table18, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("26_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        public virtual void _26_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("26_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, ((string[])(null)));
#line 319
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 320
 testRunner.Given(@"I save the Event XML data in ""NoneCRFRRValuesOnRRUpdateActual4.xml"" file by executing the query ""Select Top 1 XmlMessage from OdmSubscriberDetail where XmlMessage like '%'+ (Select SubjectKey from Patient where PatientIdentity = '06-PAT') +  '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 321
 testRunner.And("I have the XML file \"NoneCRFRRValuesOnRRUpdateExpected4.xml\" available in the pro" +
                    "ject folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 322
 testRunner.And("I have the XML file \"NoneCRFRRValuesOnRRUpdateActual4.xml\" available in the Resul" +
                    "t XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table19.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table19.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table19.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table19.AddRow(new string[] {
                        "",
                        "FileOID"});
            table19.AddRow(new string[] {
                        "",
                        "SourceID"});
            table19.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 323
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table19, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("27_Verify the Non eCRF question RR values are removed when Start Date and End Dat" +
            "e is updated")]
        public virtual void _27_VerifyTheNonECRFQuestionRRValuesAreRemovedWhenStartDateAndEndDateIsUpdated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("27_Verify the Non eCRF question RR values are removed when Start Date and End Dat" +
                    "e is updated", null, ((string[])(null)));
#line 332
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 333
  testRunner.When(@"I execute the query ""Select DataValue from PatientData where DataRowActive=0 and DataRow=2 and PatientFormKey in (Select PatientFormKey from PatientForm a Join PatientEvent b on a.PatientEventKey=b.PatientEventKey join Patient c on b.PatientKey=c.PatientKey and c.PatientIdentity = '03-PAT')"".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 334
  testRunner.Then("The result should have empty values.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("28_Modify the reference range  From age and To age to update reference range valu" +
            "es")]
        public virtual void _28_ModifyTheReferenceRangeFromAgeAndToAgeToUpdateReferenceRangeValues()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("28_Modify the reference range  From age and To age to update reference range valu" +
                    "es", null, ((string[])(null)));
#line 337
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 338
 testRunner.When("I click on \"Edit\" icon for the first record to modify the data in ReferenceRanges" +
                    "Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "FromAgeSet",
                        "ToAgeSet"});
            table20.AddRow(new string[] {
                        "40",
                        "50"});
#line 339
 testRunner.And("I modify reference ranges of a existing lab test and Save in ReferenceRangesPage", ((string)(null)), table20, "And ");
#line 342
 testRunner.And("I Click the save button in ReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 343
 testRunner.Then("a \"LabTest Reference Range Updated Successfully\" message should be displayed in R" +
                    "eferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("29_Verify the Non e CRF question RR values are calculated on updating Form age an" +
            "d To Age RR attribute")]
        public virtual void _29_VerifyTheNonECRFQuestionRRValuesAreCalculatedOnUpdatingFormAgeAndToAgeRRAttribute()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("29_Verify the Non e CRF question RR values are calculated on updating Form age an" +
                    "d To Age RR attribute", null, ((string[])(null)));
#line 345
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 346
  testRunner.When(@"I execute the query ""Select DataValue from PatientData where DataRowActive=0 and DataRow=2 and PatientFormKey in (Select PatientFormKey from PatientForm a Join PatientEvent b on a.PatientEventKey=b.PatientEventKey join Patient c on b.PatientKey=c.PatientKey and c.PatientIdentity = '11-PAT')"".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "DataValue"});
            table21.AddRow(new string[] {
                        "RBC"});
            table21.AddRow(new string[] {
                        "02"});
            table21.AddRow(new string[] {
                        "2"});
            table21.AddRow(new string[] {
                        "Cat2"});
            table21.AddRow(new string[] {
                        "SubCat2"});
            table21.AddRow(new string[] {
                        "Specimen2"});
            table21.AddRow(new string[] {
                        "Method2"});
            table21.AddRow(new string[] {
                        "Result2"});
            table21.AddRow(new string[] {
                        "> 5.00"});
            table21.AddRow(new string[] {
                        "< 15.00"});
            table21.AddRow(new string[] {
                        "> 4.00"});
            table21.AddRow(new string[] {
                        "< 16.00"});
            table21.AddRow(new string[] {
                        "Above normal range high"});
            table21.AddRow(new string[] {
                        "90"});
            table21.AddRow(new string[] {
                        "pg"});
            table21.AddRow(new string[] {
                        "> 25.00"});
            table21.AddRow(new string[] {
                        "< 75.00"});
            table21.AddRow(new string[] {
                        "> 20.00"});
            table21.AddRow(new string[] {
                        "< 80.00"});
            table21.AddRow(new string[] {
                        "3"});
            table21.AddRow(new string[] {
                        "5"});
#line 347
  testRunner.Then("The below result should be retrieved.", ((string)(null)), table21, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("30_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        public virtual void _30_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("30_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, ((string[])(null)));
#line 371
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 372
 testRunner.Given(@"I save the Event XML data in ""NoneCRFRRValuesOnRRUpdateActual5.xml"" file by executing the query ""Select Top 1 XmlMessage from OdmSubscriberDetail where XmlMessage like '%'+ (Select SubjectKey from Patient where PatientIdentity = '11-PAT') +  '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 373
 testRunner.And("I have the XML file \"NoneCRFRRValuesOnRRUpdateExpected5.xml\" available in the pro" +
                    "ject folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 374
 testRunner.And("I have the XML file \"NoneCRFRRValuesOnRRUpdateActual5.xml\" available in the Resul" +
                    "t XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table22.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table22.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table22.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table22.AddRow(new string[] {
                        "",
                        "FileOID"});
            table22.AddRow(new string[] {
                        "",
                        "SourceID"});
            table22.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 375
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table22, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("31_Verify the Non eCRF question RR values are removed when RR From Age and RR To " +
            "Age is updated")]
        public virtual void _31_VerifyTheNonECRFQuestionRRValuesAreRemovedWhenRRFromAgeAndRRToAgeIsUpdated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31_Verify the Non eCRF question RR values are removed when RR From Age and RR To " +
                    "Age is updated", null, ((string[])(null)));
#line 384
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 385
  testRunner.When(@"I execute the query ""Select DataValue from PatientData where DataRowActive=0 and DataRow=2 and PatientFormKey in (Select PatientFormKey from PatientForm a Join PatientEvent b on a.PatientEventKey=b.PatientEventKey join Patient c on b.PatientKey=c.PatientKey and c.PatientIdentity = '06-PAT')"".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 386
  testRunner.Then("The result should have empty values.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("32_Modify the reference range  Start Date and End Date to update reference range " +
            "values")]
        public virtual void _32_ModifyTheReferenceRangeStartDateAndEndDateToUpdateReferenceRangeValues()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32_Modify the reference range  Start Date and End Date to update reference range " +
                    "values", null, ((string[])(null)));
#line 389
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 390
 testRunner.When("I click on \"Edit\" icon for the first record to modify the data in ReferenceRanges" +
                    "Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate"});
            table23.AddRow(new string[] {
                        "03/01/2019",
                        "03/31/2019"});
#line 391
 testRunner.And("I modify reference ranges of a existing lab test and Save in ReferenceRangesPage", ((string)(null)), table23, "And ");
#line 394
 testRunner.And("I Click the save button in ReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 395
 testRunner.Then("a \"LabTest Reference Range Updated Successfully\" message should be displayed in R" +
                    "eferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("33_Verify the Non e CRF question RR values are calculated on updating Start Date " +
            "and End Date RR attribute")]
        public virtual void _33_VerifyTheNonECRFQuestionRRValuesAreCalculatedOnUpdatingStartDateAndEndDateRRAttribute()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("33_Verify the Non e CRF question RR values are calculated on updating Start Date " +
                    "and End Date RR attribute", null, ((string[])(null)));
#line 397
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 398
  testRunner.When(@"I execute the query ""Select DataValue from PatientData where DataRowActive=0 and DataRow=2 and PatientFormKey in (Select PatientFormKey from PatientForm a Join PatientEvent b on a.PatientEventKey=b.PatientEventKey join Patient c on b.PatientKey=c.PatientKey and c.PatientIdentity = '05-PAT')"".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "DataValue"});
            table24.AddRow(new string[] {
                        "RBC"});
            table24.AddRow(new string[] {
                        "02"});
            table24.AddRow(new string[] {
                        "2"});
            table24.AddRow(new string[] {
                        "Cat2"});
            table24.AddRow(new string[] {
                        "SubCat2"});
            table24.AddRow(new string[] {
                        "Specimen2"});
            table24.AddRow(new string[] {
                        "Method2"});
            table24.AddRow(new string[] {
                        "Result2"});
            table24.AddRow(new string[] {
                        "> 5.00"});
            table24.AddRow(new string[] {
                        "< 15.00"});
            table24.AddRow(new string[] {
                        "> 4.00"});
            table24.AddRow(new string[] {
                        "< 16.00"});
            table24.AddRow(new string[] {
                        "Above normal range high"});
            table24.AddRow(new string[] {
                        "90"});
            table24.AddRow(new string[] {
                        "pg"});
            table24.AddRow(new string[] {
                        "> 25.00"});
            table24.AddRow(new string[] {
                        "< 75.00"});
            table24.AddRow(new string[] {
                        "> 20.00"});
            table24.AddRow(new string[] {
                        "< 80.00"});
            table24.AddRow(new string[] {
                        "3"});
            table24.AddRow(new string[] {
                        "5"});
#line 399
  testRunner.Then("The below result should be retrieved.", ((string)(null)), table24, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("34_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        public virtual void _34_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, ((string[])(null)));
#line 423
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 424
 testRunner.Given(@"I save the Event XML data in ""NoneCRFRRValuesOnRRUpdateActual6.xml"" file by executing the query ""Select Top 1 XmlMessage from OdmSubscriberDetail where XmlMessage like '%'+ (Select SubjectKey from Patient where PatientIdentity = '05-PAT') +  '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 425
 testRunner.And("I have the XML file \"NoneCRFRRValuesOnRRUpdateExpected6.xml\" available in the pro" +
                    "ject folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 426
 testRunner.And("I have the XML file \"NoneCRFRRValuesOnRRUpdateActual6.xml\" available in the Resul" +
                    "t XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table25.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table25.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table25.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table25.AddRow(new string[] {
                        "",
                        "FileOID"});
            table25.AddRow(new string[] {
                        "",
                        "SourceID"});
            table25.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 427
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table25, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("35_Verify the Non eCRF question RR values are removed when Start Date and End Dat" +
            "e is updated")]
        public virtual void _35_VerifyTheNonECRFQuestionRRValuesAreRemovedWhenStartDateAndEndDateIsUpdated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35_Verify the Non eCRF question RR values are removed when Start Date and End Dat" +
                    "e is updated", null, ((string[])(null)));
#line 436
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 437
  testRunner.When(@"I execute the query ""Select DataValue from PatientData where DataRowActive=0 and DataRow=2 and PatientFormKey in (Select PatientFormKey from PatientForm a Join PatientEvent b on a.PatientEventKey=b.PatientEventKey join Patient c on b.PatientKey=c.PatientKey and c.PatientIdentity = '11-PAT')"".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 438
  testRunner.Then("The result should have empty values.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("36_Modify the reference range  Gender to update reference range values")]
        public virtual void _36_ModifyTheReferenceRangeGenderToUpdateReferenceRangeValues()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("36_Modify the reference range  Gender to update reference range values", null, ((string[])(null)));
#line 441
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 442
 testRunner.When("I click on \"Edit\" icon for the first record to modify the data in ReferenceRanges" +
                    "Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Gender"});
            table26.AddRow(new string[] {
                        "Male"});
#line 443
 testRunner.And("I modify reference ranges of a existing lab test and Save in ReferenceRangesPage", ((string)(null)), table26, "And ");
#line 446
 testRunner.And("I Click the save button in ReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 447
 testRunner.Then("a \"LabTest Reference Range Updated Successfully\" message should be displayed in R" +
                    "eferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("37_Verify the Non e CRF question RR values are calculated on updating Start Date " +
            "and End Date RR attribute")]
        public virtual void _37_VerifyTheNonECRFQuestionRRValuesAreCalculatedOnUpdatingStartDateAndEndDateRRAttribute()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("37_Verify the Non e CRF question RR values are calculated on updating Start Date " +
                    "and End Date RR attribute", null, ((string[])(null)));
#line 449
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 450
  testRunner.When(@"I execute the query ""Select DataValue from PatientData where DataRowActive=0 and DataRow=2 and PatientFormKey in (Select PatientFormKey from PatientForm a Join PatientEvent b on a.PatientEventKey=b.PatientEventKey join Patient c on b.PatientKey=c.PatientKey and c.PatientIdentity = '02-PAT')"".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "DataValue"});
            table27.AddRow(new string[] {
                        "RBC"});
            table27.AddRow(new string[] {
                        "02"});
            table27.AddRow(new string[] {
                        "2"});
            table27.AddRow(new string[] {
                        "Cat2"});
            table27.AddRow(new string[] {
                        "SubCat2"});
            table27.AddRow(new string[] {
                        "Specimen2"});
            table27.AddRow(new string[] {
                        "Method2"});
            table27.AddRow(new string[] {
                        "Result2"});
            table27.AddRow(new string[] {
                        "> 5.00"});
            table27.AddRow(new string[] {
                        "< 15.00"});
            table27.AddRow(new string[] {
                        "> 4.00"});
            table27.AddRow(new string[] {
                        "< 16.00"});
            table27.AddRow(new string[] {
                        "Above normal range high"});
            table27.AddRow(new string[] {
                        "90"});
            table27.AddRow(new string[] {
                        "pg"});
            table27.AddRow(new string[] {
                        "> 25.00"});
            table27.AddRow(new string[] {
                        "< 75.00"});
            table27.AddRow(new string[] {
                        "> 20.00"});
            table27.AddRow(new string[] {
                        "< 80.00"});
            table27.AddRow(new string[] {
                        "3"});
            table27.AddRow(new string[] {
                        "5"});
#line 451
  testRunner.Then("The below result should be retrieved.", ((string)(null)), table27, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("38_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        public virtual void _38_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("38_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, ((string[])(null)));
#line 475
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 476
 testRunner.Given(@"I save the Event XML data in ""NoneCRFRRValuesOnRRUpdateActual7.xml"" file by executing the query ""Select Top 1 XmlMessage from OdmSubscriberDetail where XmlMessage like '%'+ (Select SubjectKey from Patient where PatientIdentity = '02-PAT') +  '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 477
 testRunner.And("I have the XML file \"NoneCRFRRValuesOnRRUpdateExpected7.xml\" available in the pro" +
                    "ject folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 478
 testRunner.And("I have the XML file \"NoneCRFRRValuesOnRRUpdateActual7.xml\" available in the Resul" +
                    "t XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table28.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table28.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table28.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table28.AddRow(new string[] {
                        "",
                        "FileOID"});
            table28.AddRow(new string[] {
                        "",
                        "SourceID"});
            table28.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 479
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table28, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("39_Verify the Non eCRF question RR values are removed when Start Date and End Dat" +
            "e is updated")]
        public virtual void _39_VerifyTheNonECRFQuestionRRValuesAreRemovedWhenStartDateAndEndDateIsUpdated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39_Verify the Non eCRF question RR values are removed when Start Date and End Dat" +
                    "e is updated", null, ((string[])(null)));
#line 488
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 489
  testRunner.When(@"I execute the query ""Select DataValue from PatientData where DataRowActive=0 and DataRow=2 and PatientFormKey in (Select PatientFormKey from PatientForm a Join PatientEvent b on a.PatientEventKey=b.PatientEventKey join Patient c on b.PatientKey=c.PatientKey and c.PatientIdentity = '05-PAT')"".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 490
  testRunner.Then("The result should have empty values.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("40_Modify the reference range  Start Date and End Date to update reference range " +
            "values")]
        public virtual void _40_ModifyTheReferenceRangeStartDateAndEndDateToUpdateReferenceRangeValues()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40_Modify the reference range  Start Date and End Date to update reference range " +
                    "values", null, ((string[])(null)));
#line 493
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 494
 testRunner.When("I click on \"Edit\" icon for the first record to modify the data in ReferenceRanges" +
                    "Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate"});
            table29.AddRow(new string[] {
                        "05/01/2019",
                        "05/31/2019"});
#line 495
 testRunner.And("I modify reference ranges of a existing lab test and Save in ReferenceRangesPage", ((string)(null)), table29, "And ");
#line 498
 testRunner.And("I Click the save button in ReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 499
 testRunner.Then("a \"LabTest Reference Range Updated Successfully\" message should be displayed in R" +
                    "eferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("41_Verify the Non e CRF question RR values are calculated on updating Start Date " +
            "and End Date RR attribute")]
        public virtual void _41_VerifyTheNonECRFQuestionRRValuesAreCalculatedOnUpdatingStartDateAndEndDateRRAttribute()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("41_Verify the Non e CRF question RR values are calculated on updating Start Date " +
                    "and End Date RR attribute", null, ((string[])(null)));
#line 501
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 502
  testRunner.When(@"I execute the query ""Select DataValue from PatientData where DataRowActive=0 and DataRow=2 and PatientFormKey in (Select PatientFormKey from PatientForm a Join PatientEvent b on a.PatientEventKey=b.PatientEventKey join Patient c on b.PatientKey=c.PatientKey and c.PatientIdentity = '08-PAT')"".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "DataValue"});
            table30.AddRow(new string[] {
                        "RBC"});
            table30.AddRow(new string[] {
                        "02"});
            table30.AddRow(new string[] {
                        "2"});
            table30.AddRow(new string[] {
                        "Cat2"});
            table30.AddRow(new string[] {
                        "SubCat2"});
            table30.AddRow(new string[] {
                        "Specimen2"});
            table30.AddRow(new string[] {
                        "Method2"});
            table30.AddRow(new string[] {
                        "Result2"});
            table30.AddRow(new string[] {
                        "> 5.00"});
            table30.AddRow(new string[] {
                        "< 15.00"});
            table30.AddRow(new string[] {
                        "> 4.00"});
            table30.AddRow(new string[] {
                        "< 16.00"});
            table30.AddRow(new string[] {
                        "Above normal range high"});
            table30.AddRow(new string[] {
                        "90"});
            table30.AddRow(new string[] {
                        "pg"});
            table30.AddRow(new string[] {
                        "> 25.00"});
            table30.AddRow(new string[] {
                        "< 75.00"});
            table30.AddRow(new string[] {
                        "> 20.00"});
            table30.AddRow(new string[] {
                        "< 80.00"});
            table30.AddRow(new string[] {
                        "3"});
            table30.AddRow(new string[] {
                        "5"});
#line 503
  testRunner.Then("The below result should be retrieved.", ((string)(null)), table30, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("42_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        public virtual void _42_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("42_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, ((string[])(null)));
#line 527
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 528
 testRunner.Given(@"I save the Event XML data in ""NoneCRFRRValuesOnRRUpdateActual8.xml"" file by executing the query ""Select Top 1 XmlMessage from OdmSubscriberDetail where XmlMessage like '%'+ (Select SubjectKey from Patient where PatientIdentity = '08-PAT') +  '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 529
 testRunner.And("I have the XML file \"NoneCRFRRValuesOnRRUpdateExpected8.xml\" available in the pro" +
                    "ject folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 530
 testRunner.And("I have the XML file \"NoneCRFRRValuesOnRRUpdateActual8.xml\" available in the Resul" +
                    "t XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table31.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table31.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table31.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table31.AddRow(new string[] {
                        "",
                        "FileOID"});
            table31.AddRow(new string[] {
                        "",
                        "SourceID"});
            table31.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 531
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table31, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("43_Verify the Non eCRF question RR values are removed when Start Date and End Dat" +
            "e is updated")]
        public virtual void _43_VerifyTheNonECRFQuestionRRValuesAreRemovedWhenStartDateAndEndDateIsUpdated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("43_Verify the Non eCRF question RR values are removed when Start Date and End Dat" +
                    "e is updated", null, ((string[])(null)));
#line 540
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 541
  testRunner.When(@"I execute the query ""Select DataValue from PatientData where DataRowActive=0 and DataRow=2 and PatientFormKey in (Select PatientFormKey from PatientForm a Join PatientEvent b on a.PatientEventKey=b.PatientEventKey join Patient c on b.PatientKey=c.PatientKey and c.PatientIdentity = '02-PAT')"".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 542
  testRunner.Then("The result should have empty values.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("44_Add a new lab test reference range record under Lab01 under WBC")]
        public virtual void _44_AddANewLabTestReferenceRangeRecordUnderLab01UnderWBC()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("44_Add a new lab test reference range record under Lab01 under WBC", null, ((string[])(null)));
#line 547
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 548
  testRunner.Given("I navigate to \"Local Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 549
     testRunner.When("I open lab with labid \"L01\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 550
  testRunner.And("I open labtest with labname \"WBC\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate",
                        "Gender",
                        "FromAgeSelect",
                        "FromAgeSet",
                        "ToAgeSelect",
                        "ToAgeSet",
                        "NormalRangeLowSelect",
                        "NormalRangeLowSet",
                        "NormalRangeHighSelect",
                        "NormalRangeHighSet",
                        "ClinicalRangeLowSelect",
                        "ClinicalRangeLowSet",
                        "ClinicalRangeHighSelect",
                        "ClinicalRangeHighSet",
                        "Unit",
                        "NA"});
            table32.AddRow(new string[] {
                        "01/01/2019",
                        "01/31/2019",
                        "Female",
                        ">",
                        "60",
                        "<",
                        "70",
                        ">",
                        "5",
                        "<",
                        "15",
                        ">",
                        "4",
                        "<",
                        "17",
                        "µL",
                        "False"});
#line 551
  testRunner.And("I click add and enter reference ranges of a lab test and Save and can see \"LabTes" +
                    "t Reference Range Added Successfully\" message upon each record save in Reference" +
                    "RangesPage including NA", ((string)(null)), table32, "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReferenceRangeID"});
            table33.AddRow(new string[] {
                        "{ReferenceRangeID2}"});
#line 554
  testRunner.Then("I see the reference range ids in the Reference Range Table.", ((string)(null)), table33, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("45_Verify the e CRF question RR values are calculated on updating Form age and To" +
            " Age RR attribute")]
        public virtual void _45_VerifyTheECRFQuestionRRValuesAreCalculatedOnUpdatingFormAgeAndToAgeRRAttribute()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("45_Verify the e CRF question RR values are calculated on updating Form age and To" +
                    " Age RR attribute", null, ((string[])(null)));
#line 558
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 560
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 561
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 562
 testRunner.When("I select \"12-PAT\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 563
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table34.AddRow(new string[] {
                        "1",
                        "CRF Lab Test Name",
                        "WBC",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Lab Test Description",
                        "WBC",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "CRF Lab Unit",
                        "µL",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "CRF Lab value",
                        "28",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Lab Test Name",
                        "WBC",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Lab Test Code",
                        "01",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "LOINC Code",
                        "1",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Category",
                        "Cat1",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Subcategory",
                        "SubCat1",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Specimen",
                        "Specimen1",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Method",
                        "Method1",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Result Type",
                        "Result1",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Normal Reference Range High",
                        "< 15.00",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Critical Reference Range Low",
                        "> 4.00",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Normal Reference Range Low",
                        "> 5.00",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Critical Reference Range High",
                        "< 17.00",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Out of Normal Range Indicator",
                        "Above normal range high",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Normalized Patient Lab Value",
                        "84",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Normalized Lab Unit",
                        "gm/dL",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range Low",
                        "> 15.00",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range High",
                        "< 45.00",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range Low",
                        "> 12.00",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Reference Range Not Applicable",
                        "No",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range High",
                        "< 51.00",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Precision",
                        "2",
                        "TEXT",
                        ""});
            table34.AddRow(new string[] {
                        "1",
                        "Conversion Factor",
                        "3",
                        "TEXT",
                        ""});
#line 564
 testRunner.Then("I verify below ReferenceRange CRF \"Autobuild Table:\" table questions data in the " +
                    "CRF.", ((string)(null)), table34, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("46_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        public virtual void _46_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("46_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, ((string[])(null)));
#line 594
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 595
 testRunner.Given(@"I save the Event XML data in ""eCRFRRValuesOnRRUpdateActual9.xml"" file by executing the query ""Select Top 1 XmlMessage from OdmSubscriberDetail where XmlMessage like '%'+ (Select SubjectKey from Patient where PatientIdentity = '12-PAT') +  '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 596
 testRunner.And("I have the XML file \"eCRFRRValuesOnRRUpdateExpected9.xml\" available in the projec" +
                    "t folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 597
 testRunner.And("I have the XML file \"eCRFRRValuesOnRRUpdateActual9.xml\" available in the Result X" +
                    "ML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table35.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table35.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table35.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table35.AddRow(new string[] {
                        "",
                        "FileOID"});
            table35.AddRow(new string[] {
                        "",
                        "SourceID"});
            table35.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 598
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table35, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("47_Modify the reference range  From age and To age to update reference range valu" +
            "es")]
        public virtual void _47_ModifyTheReferenceRangeFromAgeAndToAgeToUpdateReferenceRangeValues()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("47_Modify the reference range  From age and To age to update reference range valu" +
                    "es", null, ((string[])(null)));
#line 607
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 608
 testRunner.Given("I navigate to \"Local Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 609
    testRunner.When("I open lab with labid \"L01\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 610
 testRunner.And("I open labtest with labname \"WBC\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 611
 testRunner.When("I click on \"Edit\" icon for the first record to modify the data in ReferenceRanges" +
                    "Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "FromAgeSet",
                        "ToAgeSet"});
            table36.AddRow(new string[] {
                        "20",
                        "30"});
#line 612
 testRunner.And("I modify reference ranges of a existing lab test and Save in ReferenceRangesPage", ((string)(null)), table36, "And ");
#line 615
 testRunner.And("I Click the save button in ReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 616
 testRunner.Then("a \"LabTest Reference Range Updated Successfully\" message should be displayed in R" +
                    "eferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("48_Verify the e CRF question RR values are calculated on updating Form age and To" +
            " Age RR attribute")]
        public virtual void _48_VerifyTheECRFQuestionRRValuesAreCalculatedOnUpdatingFormAgeAndToAgeRRAttribute()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48_Verify the e CRF question RR values are calculated on updating Form age and To" +
                    " Age RR attribute", null, ((string[])(null)));
#line 618
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 620
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 621
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 622
 testRunner.When("I select \"04-PAT\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 623
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table37.AddRow(new string[] {
                        "1",
                        "CRF Lab Test Name",
                        "WBC",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Lab Test Description",
                        "WBC",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "CRF Lab Unit",
                        "µL",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "CRF Lab value",
                        "4",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Lab Test Name",
                        "WBC",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Lab Test Code",
                        "01",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "LOINC Code",
                        "1",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Category",
                        "Cat1",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Subcategory",
                        "SubCat1",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Specimen",
                        "Specimen1",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Method",
                        "Method1",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Result Type",
                        "Result1",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Normal Reference Range High",
                        "< 15.00",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Critical Reference Range Low",
                        "> 4.00",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Normal Reference Range Low",
                        "> 5.00",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Critical Reference Range High",
                        "< 17.00",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Out of Normal Range Indicator",
                        "Below normal range low",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Normalized Patient Lab Value",
                        "12",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Normalized Lab Unit",
                        "gm/dL",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range Low",
                        "> 15.00",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range High",
                        "< 45.00",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range Low",
                        "> 12.00",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Reference Range Not Applicable",
                        "No",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range High",
                        "< 51.00",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Precision",
                        "2",
                        "TEXT",
                        ""});
            table37.AddRow(new string[] {
                        "1",
                        "Conversion Factor",
                        "3",
                        "TEXT",
                        ""});
#line 624
 testRunner.Then("I verify below ReferenceRange CRF \"Autobuild Table:\" table questions data in the " +
                    "CRF.", ((string)(null)), table37, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("49_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        public virtual void _49_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("49_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, ((string[])(null)));
#line 654
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 655
 testRunner.Given(@"I save the Event XML data in ""eCRFRRValuesOnRRUpdateActual10.xml"" file by executing the query ""Select Top 1 XmlMessage from OdmSubscriberDetail where XmlMessage like '%'+ (Select SubjectKey from Patient where PatientIdentity = '04-PAT') +  '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 656
 testRunner.And("I have the XML file \"eCRFRRValuesOnRRUpdateExpected10.xml\" available in the proje" +
                    "ct folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 657
 testRunner.And("I have the XML file \"eCRFRRValuesOnRRUpdateActual10.xml\" available in the Result " +
                    "XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table38.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table38.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table38.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table38.AddRow(new string[] {
                        "",
                        "FileOID"});
            table38.AddRow(new string[] {
                        "",
                        "SourceID"});
            table38.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 658
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table38, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("50_Verify the eCRF question RR values are removed when RR From Age and RR To Age " +
            "is updated")]
        public virtual void _50_VerifyTheECRFQuestionRRValuesAreRemovedWhenRRFromAgeAndRRToAgeIsUpdated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("50_Verify the eCRF question RR values are removed when RR From Age and RR To Age " +
                    "is updated", null, ((string[])(null)));
#line 667
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 669
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 670
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 671
 testRunner.When("I select \"12-PAT\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 672
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table39.AddRow(new string[] {
                        "1",
                        "CRF Lab Test Name",
                        "WBC",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Lab Test Description",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "CRF Lab Unit",
                        "µL",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "CRF Lab value",
                        "28",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Lab Test Name",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Lab Test Code",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "LOINC Code",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Category",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Subcategory",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Specimen",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Method",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Result Type",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Normal Reference Range High",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Critical Reference Range Low",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Normal Reference Range Low",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Critical Reference Range High",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Reference Range ID",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Out of Normal Range Indicator",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Normalized Patient Lab Value",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Normalized Lab Unit",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range Low",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range High",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range Low",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Reference Range Not Applicable",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range High",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Precision",
                        "[Blank]",
                        "TEXT",
                        ""});
            table39.AddRow(new string[] {
                        "1",
                        "Conversion Factor",
                        "[Blank]",
                        "TEXT",
                        ""});
#line 673
 testRunner.Then("I verify below ReferenceRange CRF \"Autobuild Table:\" table questions data in the " +
                    "CRF.", ((string)(null)), table39, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("51_Modify the reference range  Start Date and End Date to update reference range " +
            "values")]
        public virtual void _51_ModifyTheReferenceRangeStartDateAndEndDateToUpdateReferenceRangeValues()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("51_Modify the reference range  Start Date and End Date to update reference range " +
                    "values", null, ((string[])(null)));
#line 704
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 705
 testRunner.Given("I navigate to \"Local Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 706
    testRunner.When("I open lab with labid \"L01\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 707
 testRunner.And("I open labtest with labname \"WBC\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 708
 testRunner.When("I click on \"Edit\" icon for the first record to modify the data in ReferenceRanges" +
                    "Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate"});
            table40.AddRow(new string[] {
                        "03/01/2019",
                        "03/31/2019"});
#line 709
 testRunner.And("I modify reference ranges of a existing lab test and Save in ReferenceRangesPage", ((string)(null)), table40, "And ");
#line 712
 testRunner.And("I Click the save button in ReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 713
 testRunner.Then("a \"LabTest Reference Range Updated Successfully\" message should be displayed in R" +
                    "eferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("52_Verify the e CRF question RR values are calculated on updating Start Date and " +
            "End Date attribute")]
        public virtual void _52_VerifyTheECRFQuestionRRValuesAreCalculatedOnUpdatingStartDateAndEndDateAttribute()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("52_Verify the e CRF question RR values are calculated on updating Start Date and " +
                    "End Date attribute", null, ((string[])(null)));
#line 715
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 717
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 718
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 719
 testRunner.When("I select \"10-PAT\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 720
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table41.AddRow(new string[] {
                        "1",
                        "CRF Lab Test Name",
                        "WBC",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Lab Test Description",
                        "WBC",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "CRF Lab Unit",
                        "µL",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "CRF Lab value",
                        "4",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Lab Test Name",
                        "WBC",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Lab Test Code",
                        "01",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "LOINC Code",
                        "1",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Category",
                        "Cat1",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Subcategory",
                        "SubCat1",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Specimen",
                        "Specimen1",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Method",
                        "Method1",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Result Type",
                        "Result1",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Normal Reference Range High",
                        "< 15.00",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Critical Reference Range Low",
                        "> 4.00",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Normal Reference Range Low",
                        "> 5.00",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Critical Reference Range High",
                        "< 17.00",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Out of Normal Range Indicator",
                        "Below normal range low",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Normalized Patient Lab Value",
                        "12",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Normalized Lab Unit",
                        "gm/dL",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range Low",
                        "> 15.00",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range High",
                        "< 45.00",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range Low",
                        "> 12.00",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Reference Range Not Applicable",
                        "No",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range High",
                        "< 51.00",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Precision",
                        "2",
                        "TEXT",
                        ""});
            table41.AddRow(new string[] {
                        "1",
                        "Conversion Factor",
                        "3",
                        "TEXT",
                        ""});
#line 721
 testRunner.Then("I verify below ReferenceRange CRF \"Autobuild Table:\" table questions data in the " +
                    "CRF.", ((string)(null)), table41, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("53_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        public virtual void _53_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("53_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, ((string[])(null)));
#line 751
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 752
 testRunner.Given(@"I save the Event XML data in ""eCRFRRValuesOnRRUpdateActual11.xml"" file by executing the query ""Select Top 1 XmlMessage from OdmSubscriberDetail where XmlMessage like '%'+ (Select SubjectKey from Patient where PatientIdentity = '10-PAT') +  '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 753
 testRunner.And("I have the XML file \"eCRFRRValuesOnRRUpdateExpected11.xml\" available in the proje" +
                    "ct folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 754
 testRunner.And("I have the XML file \"eCRFRRValuesOnRRUpdateActual11.xml\" available in the Result " +
                    "XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table42.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table42.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table42.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table42.AddRow(new string[] {
                        "",
                        "FileOID"});
            table42.AddRow(new string[] {
                        "",
                        "SourceID"});
            table42.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 755
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table42, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("54_Verify the eCRF question RR values are removed when RR Start Date and End Date" +
            " is updated")]
        public virtual void _54_VerifyTheECRFQuestionRRValuesAreRemovedWhenRRStartDateAndEndDateIsUpdated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("54_Verify the eCRF question RR values are removed when RR Start Date and End Date" +
                    " is updated", null, ((string[])(null)));
#line 764
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 766
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 767
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 768
 testRunner.When("I select \"04-PAT\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 769
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table43.AddRow(new string[] {
                        "1",
                        "CRF Lab Test Name",
                        "WBC",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Lab Test Description",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "CRF Lab Unit",
                        "µL",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "CRF Lab value",
                        "4",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Lab Test Name",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Lab Test Code",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "LOINC Code",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Category",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Subcategory",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Specimen",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Method",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Result Type",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Normal Reference Range High",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Critical Reference Range Low",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Normal Reference Range Low",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Critical Reference Range High",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Reference Range ID",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Out of Normal Range Indicator",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Normalized Patient Lab Value",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Normalized Lab Unit",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range Low",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range High",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range Low",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Reference Range Not Applicable",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range High",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Precision",
                        "[Blank]",
                        "TEXT",
                        ""});
            table43.AddRow(new string[] {
                        "1",
                        "Conversion Factor",
                        "[Blank]",
                        "TEXT",
                        ""});
#line 770
 testRunner.Then("I verify below ReferenceRange CRF \"Autobuild Table:\" table questions data in the " +
                    "CRF.", ((string)(null)), table43, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("55_Modify the reference range  Gender to update reference range values")]
        public virtual void _55_ModifyTheReferenceRangeGenderToUpdateReferenceRangeValues()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("55_Modify the reference range  Gender to update reference range values", null, ((string[])(null)));
#line 801
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 802
 testRunner.Given("I navigate to \"Local Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 803
     testRunner.When("I open lab with labid \"L01\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 804
  testRunner.And("I open labtest with labname \"WBC\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 805
  testRunner.When("I click on \"Edit\" icon for the first record to modify the data in ReferenceRanges" +
                    "Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Gender"});
            table44.AddRow(new string[] {
                        "Male"});
#line 806
 testRunner.And("I modify reference ranges of a existing lab test and Save in ReferenceRangesPage", ((string)(null)), table44, "And ");
#line 809
 testRunner.And("I Click the save button in ReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 810
 testRunner.Then("a \"LabTest Reference Range Updated Successfully\" message should be displayed in R" +
                    "eferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("56_Verify the e CRF question RR values are calculated on updating Gender RR attri" +
            "bute")]
        public virtual void _56_VerifyTheECRFQuestionRRValuesAreCalculatedOnUpdatingGenderRRAttribute()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("56_Verify the e CRF question RR values are calculated on updating Gender RR attri" +
                    "bute", null, ((string[])(null)));
#line 812
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 814
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 815
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 816
 testRunner.When("I select \"07-PAT\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 817
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table45.AddRow(new string[] {
                        "1",
                        "CRF Lab Test Name",
                        "WBC",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Lab Test Description",
                        "WBC",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "CRF Lab Unit",
                        "µL",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "CRF Lab value",
                        "4",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Lab Test Name",
                        "WBC",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Lab Test Code",
                        "01",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "LOINC Code",
                        "1",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Category",
                        "Cat1",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Subcategory",
                        "SubCat1",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Specimen",
                        "Specimen1",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Method",
                        "Method1",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Result Type",
                        "Result1",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Normal Reference Range High",
                        "< 15.00",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Critical Reference Range Low",
                        "> 4.00",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Normal Reference Range Low",
                        "> 5.00",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Critical Reference Range High",
                        "< 17.00",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Out of Normal Range Indicator",
                        "Below normal range low",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Normalized Patient Lab Value",
                        "12",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Normalized Lab Unit",
                        "gm/dL",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range Low",
                        "> 15.00",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range High",
                        "< 45.00",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range Low",
                        "> 12.00",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Reference Range Not Applicable",
                        "No",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range High",
                        "< 51.00",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Precision",
                        "2",
                        "TEXT",
                        ""});
            table45.AddRow(new string[] {
                        "1",
                        "Conversion Factor",
                        "3",
                        "TEXT",
                        ""});
#line 818
 testRunner.Then("I verify below ReferenceRange CRF \"Autobuild Table:\" table questions data in the " +
                    "CRF.", ((string)(null)), table45, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("57_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        public virtual void _57_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("57_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, ((string[])(null)));
#line 848
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 849
 testRunner.Given(@"I save the Event XML data in ""eCRFRRValuesOnRRUpdateActual12.xml"" file by executing the query ""Select Top 1 XmlMessage from OdmSubscriberDetail where XmlMessage like '%'+ (Select SubjectKey from Patient where PatientIdentity = '07-PAT') +  '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 850
 testRunner.And("I have the XML file \"eCRFRRValuesOnRRUpdateExpected12.xml\" available in the proje" +
                    "ct folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 851
 testRunner.And("I have the XML file \"eCRFRRValuesOnRRUpdateActual12.xml\" available in the Result " +
                    "XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table46.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table46.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table46.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table46.AddRow(new string[] {
                        "",
                        "FileOID"});
            table46.AddRow(new string[] {
                        "",
                        "SourceID"});
            table46.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 852
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table46, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("58_Verify the eCRF question RR values are removed when Gender is updated")]
        public virtual void _58_VerifyTheECRFQuestionRRValuesAreRemovedWhenGenderIsUpdated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("58_Verify the eCRF question RR values are removed when Gender is updated", null, ((string[])(null)));
#line 861
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 863
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 864
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 865
 testRunner.When("I select \"10-PAT\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 866
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table47.AddRow(new string[] {
                        "1",
                        "CRF Lab Test Name",
                        "WBC",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Lab Test Description",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "CRF Lab Unit",
                        "µL",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "CRF Lab value",
                        "4",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Lab Test Name",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Lab Test Code",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "LOINC Code",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Category",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Subcategory",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Specimen",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Method",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Result Type",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Normal Reference Range High",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Critical Reference Range Low",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Normal Reference Range Low",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Critical Reference Range High",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Reference Range ID",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Out of Normal Range Indicator",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Normalized Patient Lab Value",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Normalized Lab Unit",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range Low",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range High",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range Low",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Reference Range Not Applicable",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range High",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Precision",
                        "[Blank]",
                        "TEXT",
                        ""});
            table47.AddRow(new string[] {
                        "1",
                        "Conversion Factor",
                        "[Blank]",
                        "TEXT",
                        ""});
#line 867
 testRunner.Then("I verify below ReferenceRange CRF \"Autobuild Table:\" table questions data in the " +
                    "CRF.", ((string)(null)), table47, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("59_Modify the reference range  From age and To age to update reference range valu" +
            "es")]
        public virtual void _59_ModifyTheReferenceRangeFromAgeAndToAgeToUpdateReferenceRangeValues()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("59_Modify the reference range  From age and To age to update reference range valu" +
                    "es", null, ((string[])(null)));
#line 897
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 898
 testRunner.Given("I navigate to \"Local Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 899
     testRunner.When("I open lab with labid \"L01\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 900
  testRunner.And("I open labtest with labname \"WBC\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 901
  testRunner.When("I click on \"Edit\" icon for the first record to modify the data in ReferenceRanges" +
                    "Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "FromAgeSet",
                        "ToAgeSet"});
            table48.AddRow(new string[] {
                        "40",
                        "50"});
#line 902
 testRunner.And("I modify reference ranges of a existing lab test and Save in ReferenceRangesPage", ((string)(null)), table48, "And ");
#line 905
 testRunner.And("I Click the save button in ReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 906
 testRunner.Then("a \"LabTest Reference Range Updated Successfully\" message should be displayed in R" +
                    "eferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("60_Verify the eCRF question RR values are calculated on updating From age and To " +
            "age RR attribute")]
        public virtual void _60_VerifyTheECRFQuestionRRValuesAreCalculatedOnUpdatingFromAgeAndToAgeRRAttribute()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("60_Verify the eCRF question RR values are calculated on updating From age and To " +
                    "age RR attribute", null, ((string[])(null)));
#line 908
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 910
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 911
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 912
 testRunner.When("I select \"02-PAT\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 913
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table49.AddRow(new string[] {
                        "1",
                        "CRF Lab Test Name",
                        "WBC",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Lab Test Description",
                        "WBC",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "CRF Lab Unit",
                        "µL",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "CRF Lab value",
                        "18",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Lab Test Name",
                        "WBC",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Lab Test Code",
                        "01",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "LOINC Code",
                        "1",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Category",
                        "Cat1",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Subcategory",
                        "SubCat1",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Specimen",
                        "Specimen1",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Method",
                        "Method1",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Result Type",
                        "Result1",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Normal Reference Range High",
                        "< 15.00",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Critical Reference Range Low",
                        "> 4.00",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Normal Reference Range Low",
                        "> 5.00",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Critical Reference Range High",
                        "< 17.00",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Out of Normal Range Indicator",
                        "Above normal range high",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Normalized Patient Lab Value",
                        "54",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Normalized Lab Unit",
                        "gm/dL",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range Low",
                        "> 15.00",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range High",
                        "< 45.00",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range Low",
                        "> 12.00",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Reference Range Not Applicable",
                        "No",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range High",
                        "< 51.00",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Precision",
                        "2",
                        "TEXT",
                        ""});
            table49.AddRow(new string[] {
                        "1",
                        "Conversion Factor",
                        "3",
                        "TEXT",
                        ""});
#line 914
 testRunner.Then("I verify below ReferenceRange CRF \"Autobuild Table:\" table questions data in the " +
                    "CRF.", ((string)(null)), table49, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("61_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        public virtual void _61_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("61_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, ((string[])(null)));
#line 944
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 945
 testRunner.Given(@"I save the Event XML data in ""eCRFRRValuesOnRRUpdateActual13.xml"" file by executing the query ""Select Top 1 XmlMessage from OdmSubscriberDetail where XmlMessage like '%'+ (Select SubjectKey from Patient where PatientIdentity = '02-PAT') +  '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 946
 testRunner.And("I have the XML file \"eCRFRRValuesOnRRUpdateExpected13.xml\" available in the proje" +
                    "ct folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 947
 testRunner.And("I have the XML file \"eCRFRRValuesOnRRUpdateActual13.xml\" available in the Result " +
                    "XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table50.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table50.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table50.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table50.AddRow(new string[] {
                        "",
                        "FileOID"});
            table50.AddRow(new string[] {
                        "",
                        "SourceID"});
            table50.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 948
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table50, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("62_Verify the eCRF question RR values are removed when From age and To age is upd" +
            "ated")]
        public virtual void _62_VerifyTheECRFQuestionRRValuesAreRemovedWhenFromAgeAndToAgeIsUpdated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("62_Verify the eCRF question RR values are removed when From age and To age is upd" +
                    "ated", null, ((string[])(null)));
#line 957
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 959
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 960
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 961
 testRunner.When("I select \"07-PAT\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 962
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table51.AddRow(new string[] {
                        "1",
                        "CRF Lab Test Name",
                        "WBC",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Lab Test Description",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "CRF Lab Unit",
                        "µL",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "CRF Lab value",
                        "4",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Lab Test Name",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Lab Test Code",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "LOINC Code",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Category",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Subcategory",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Specimen",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Method",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Result Type",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Normal Reference Range High",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Critical Reference Range Low",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Normal Reference Range Low",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Critical Reference Range High",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Reference Range ID",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Out of Normal Range Indicator",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Normalized Patient Lab Value",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Normalized Lab Unit",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range Low",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range High",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range Low",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Reference Range Not Applicable",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range High",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Precision",
                        "[Blank]",
                        "TEXT",
                        ""});
            table51.AddRow(new string[] {
                        "1",
                        "Conversion Factor",
                        "[Blank]",
                        "TEXT",
                        ""});
#line 963
 testRunner.Then("I verify below ReferenceRange CRF \"Autobuild Table:\" table questions data in the " +
                    "CRF.", ((string)(null)), table51, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("63_Modify the reference range  Start Date and End Date to update reference range " +
            "values")]
        public virtual void _63_ModifyTheReferenceRangeStartDateAndEndDateToUpdateReferenceRangeValues()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("63_Modify the reference range  Start Date and End Date to update reference range " +
                    "values", null, ((string[])(null)));
#line 994
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 995
 testRunner.Given("I navigate to \"Local Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 996
     testRunner.When("I open lab with labid \"L01\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 997
  testRunner.And("I open labtest with labname \"WBC\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 998
  testRunner.When("I click on \"Edit\" icon for the first record to modify the data in ReferenceRanges" +
                    "Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate"});
            table52.AddRow(new string[] {
                        "05/01/2019",
                        "05/31/2019"});
#line 999
 testRunner.And("I modify reference ranges of a existing lab test and Save in ReferenceRangesPage", ((string)(null)), table52, "And ");
#line 1002
 testRunner.And("I Click the save button in ReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1003
 testRunner.Then("a \"LabTest Reference Range Updated Successfully\" message should be displayed in R" +
                    "eferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("64_Verify the e CRF question RR values are calculated on updating Start Date and " +
            "End Date attribute")]
        public virtual void _64_VerifyTheECRFQuestionRRValuesAreCalculatedOnUpdatingStartDateAndEndDateAttribute()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("64_Verify the e CRF question RR values are calculated on updating Start Date and " +
                    "End Date attribute", null, ((string[])(null)));
#line 1006
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1008
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1009
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1010
 testRunner.When("I select \"08-PAT\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1011
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table53.AddRow(new string[] {
                        "1",
                        "CRF Lab Test Name",
                        "WBC",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Lab Test Description",
                        "WBC",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "CRF Lab Unit",
                        "µL",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "CRF Lab value",
                        "18",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Lab Test Name",
                        "WBC",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Lab Test Code",
                        "01",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "LOINC Code",
                        "1",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Category",
                        "Cat1",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Subcategory",
                        "SubCat1",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Specimen",
                        "Specimen1",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Method",
                        "Method1",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Result Type",
                        "Result1",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Normal Reference Range High",
                        "< 15.00",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Critical Reference Range Low",
                        "> 4.00",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Normal Reference Range Low",
                        "> 5.00",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Critical Reference Range High",
                        "< 17.00",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Out of Normal Range Indicator",
                        "Above normal range high",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Normalized Patient Lab Value",
                        "54",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Normalized Lab Unit",
                        "gm/dL",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range Low",
                        "> 15.00",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range High",
                        "< 45.00",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range Low",
                        "> 12.00",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Reference Range Not Applicable",
                        "No",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range High",
                        "< 51.00",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Precision",
                        "2",
                        "TEXT",
                        ""});
            table53.AddRow(new string[] {
                        "1",
                        "Conversion Factor",
                        "3",
                        "TEXT",
                        ""});
#line 1012
 testRunner.Then("I verify below ReferenceRange CRF \"Autobuild Table:\" table questions data in the " +
                    "CRF.", ((string)(null)), table53, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("65_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        public virtual void _65_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("65_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, ((string[])(null)));
#line 1042
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1043
 testRunner.Given(@"I save the Event XML data in ""eCRFRRValuesOnRRUpdateActual14.xml"" file by executing the query ""Select Top 1 XmlMessage from OdmSubscriberDetail where XmlMessage like '%'+ (Select SubjectKey from Patient where PatientIdentity = '08-PAT') +  '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1044
 testRunner.And("I have the XML file \"eCRFRRValuesOnRRUpdateExpected14.xml\" available in the proje" +
                    "ct folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1045
 testRunner.And("I have the XML file \"eCRFRRValuesOnRRUpdateActual14.xml\" available in the Result " +
                    "XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table54.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table54.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table54.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table54.AddRow(new string[] {
                        "",
                        "FileOID"});
            table54.AddRow(new string[] {
                        "",
                        "SourceID"});
            table54.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 1046
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table54, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("66_Verify the eCRF question RR values are removed when RR Start Date and End Date" +
            " is updated")]
        public virtual void _66_VerifyTheECRFQuestionRRValuesAreRemovedWhenRRStartDateAndEndDateIsUpdated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("66_Verify the eCRF question RR values are removed when RR Start Date and End Date" +
                    " is updated", null, ((string[])(null)));
#line 1055
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1057
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1058
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1059
 testRunner.When("I select \"02-PAT\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1060
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LabForm2\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table55.AddRow(new string[] {
                        "1",
                        "CRF Lab Test Name",
                        "WBC",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Lab Test Description",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "CRF Lab Unit",
                        "µL",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "CRF Lab value",
                        "18",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Lab Test Name",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Lab Test Code",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "LOINC Code",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Category",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Subcategory",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Specimen",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Method",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Result Type",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Normal Reference Range High",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Critical Reference Range Low",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Normal Reference Range Low",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Critical Reference Range High",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Reference Range ID",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Out of Normal Range Indicator",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Normalized Patient Lab Value",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Normalized Lab Unit",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range Low",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range High",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range Low",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Reference Range Not Applicable",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range High",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Precision",
                        "[Blank]",
                        "TEXT",
                        ""});
            table55.AddRow(new string[] {
                        "1",
                        "Conversion Factor",
                        "[Blank]",
                        "TEXT",
                        ""});
#line 1061
 testRunner.Then("I verify below ReferenceRange CRF \"Autobuild Table:\" table questions data in the " +
                    "CRF.", ((string)(null)), table55, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("67_Logout from Datalabs")]
        public virtual void _67_LogoutFromDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("67_Logout from Datalabs", null, ((string[])(null)));
#line 1091
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1092
 testRunner.When("I clik logout of Datalabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1093
 testRunner.Then("I see login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

