// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.TempFeatures
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("CRF_Actions_Scenarios")]
    public partial class CRF_Actions_ScenariosFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "CRF_Actions_Scenarios.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "CRF_Actions_Scenarios", "\tIn order to avoid silly mistakes\r\n\tAs a math idiot\r\n\tI want to be told the sum o" +
                    "f two numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_001_Login to Datalabs application.")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void CRF_001_LoginToDatalabsApplication_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_001_Login to Datalabs application.", null, new string[] {
                        "mytag"});
#line 7
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 testRunner.Given("I have logged into DataLabs application as an Administrator user.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_002_Navigate to Patients tab and select a site and add patient(s).")]
        public virtual void CRF_002_NavigateToPatientsTabAndSelectASiteAndAddPatientS_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_002_Navigate to Patients tab and select a site and add patient(s).", null, ((string[])(null)));
#line 11
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 12
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 13
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table1.AddRow(new string[] {
                        "01",
                        "PAT",
                        "12/06/2017"});
            table1.AddRow(new string[] {
                        "02",
                        "PAT",
                        "12/06/2017"});
            table1.AddRow(new string[] {
                        "03",
                        "PAT",
                        "12/06/2017"});
#line 14
 testRunner.When("I add patient with below details.", ((string)(null)), table1, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table2.AddRow(new string[] {
                        "01-PAT"});
            table2.AddRow(new string[] {
                        "02-PAT"});
            table2.AddRow(new string[] {
                        "03-PAT"});
#line 19
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_003_Select and enroll a patient.")]
        public virtual void CRF_003_SelectAndEnrollAPatient_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_003_Select and enroll a patient.", null, ((string[])(null)));
#line 25
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 26
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 27
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table3.AddRow(new string[] {
                        "01",
                        "12/06/2017",
                        "Yes"});
#line 29
 testRunner.When("I enroll the patient \"01-PAT\" with below data.", ((string)(null)), table3, "When ");
#line 32
 testRunner.Then("I see patient \"01-PAT\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_004_Select a site and a patient.")]
        public virtual void CRF_004_SelectASiteAndAPatient_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_004_Select a site and a patient.", null, ((string[])(null)));
#line 34
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 35
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 36
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
 testRunner.Then("I see Patient details page for \"01-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_005_Select a Form with only flat questions and enter data in CRF.")]
        public virtual void CRF_005_SelectAFormWithOnlyFlatQuestionsAndEnterDataInCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_005_Select a Form with only flat questions and enter data in CRF.", null, ((string[])(null)));
#line 40
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 45
 testRunner.Given("I expand \"Visit (Week 3)\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 46
 testRunner.When("I click \"Checkout\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table4.AddRow(new string[] {
                        "Date of Birth:",
                        "01/01/1980",
                        "TextBox"});
            table4.AddRow(new string[] {
                        "Gender:",
                        "Male",
                        "ListBox"});
            table4.AddRow(new string[] {
                        "Race:",
                        "Asian",
                        "ListBox"});
            table4.AddRow(new string[] {
                        "Dictionary Term verbatim for RACEO:",
                        "NA",
                        "TextBox"});
            table4.AddRow(new string[] {
                        "Encoding Type for RACEO:",
                        "NA",
                        "TextBox"});
            table4.AddRow(new string[] {
                        "RACE + RACE01 combined for reporting purposes:",
                        "NA",
                        "TextBox"});
            table4.AddRow(new string[] {
                        "If Race is Asian, is Patient of Japanese Ancestry?",
                        "Yes",
                        "ListBox"});
            table4.AddRow(new string[] {
                        "Was Patient Born in Japan?",
                        "No",
                        "ListBox"});
            table4.AddRow(new string[] {
                        "Number of parents born in Japan:",
                        "1",
                        "ListBox"});
            table4.AddRow(new string[] {
                        "Number of Grandparents Born in Japan?",
                        "2",
                        "ListBox"});
            table4.AddRow(new string[] {
                        "Treatment Group Code:",
                        "G1",
                        "TextBox"});
            table4.AddRow(new string[] {
                        "Treatment Group Description:",
                        "Group1",
                        "TextBox"});
            table4.AddRow(new string[] {
                        "Age at Study Start:",
                        "37",
                        "TextBox"});
            table4.AddRow(new string[] {
                        "Age Units at Study Start:",
                        "Years",
                        "TextBox"});
            table4.AddRow(new string[] {
                        "Study Start Date:",
                        "11/28/2017",
                        "TextBox"});
#line 47
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table4, "And ");
#line 64
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.And("I click on \"Save & Close\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 66
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_006_Select a Form with with both flat and table questions and enter data in C" +
            "RF.")]
        public virtual void CRF_006_SelectAFormWithWithBothFlatAndTableQuestionsAndEnterDataInCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_006_Select a Form with with both flat and table questions and enter data in C" +
                    "RF.", null, ((string[])(null)));
#line 68
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 69
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 70
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table5.AddRow(new string[] {
                        "Sample text question:",
                        "Text",
                        "TextBox"});
            table5.AddRow(new string[] {
                        "Sample radio question:",
                        "No",
                        "Radio"});
#line 71
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table6.AddRow(new string[] {
                        "Yes",
                        "1",
                        "Drug Name:",
                        "Test Drug",
                        "TextBox",
                        ""});
            table6.AddRow(new string[] {
                        "No",
                        "1",
                        "Condition:",
                        "Initial",
                        "TextBox",
                        ""});
            table6.AddRow(new string[] {
                        "No",
                        "1",
                        "Start Date:",
                        "01/01/2000",
                        "TextBox",
                        "Save & Close Row"});
            table6.AddRow(new string[] {
                        "Yes",
                        "2",
                        "Drug Name:",
                        "Test Drug 2",
                        "TextBox",
                        ""});
            table6.AddRow(new string[] {
                        "N0",
                        "2",
                        "Start Date:",
                        "01/01/2010",
                        "TextBox",
                        "Save & Close Row"});
#line 75
 testRunner.And("I enter below \"Sample Table:\" table questions data in the CRF.", ((string)(null)), table6, "And ");
#line 82
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_007_Select a Form with table questions and enter data in CRF.")]
        public virtual void CRF_007_SelectAFormWithTableQuestionsAndEnterDataInCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_007_Select a Form with table questions and enter data in CRF.", null, ((string[])(null)));
#line 85
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 86
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form 6\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 87
 testRunner.When("I click \"Checkout\" button on \"Form 6\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table7.AddRow(new string[] {
                        "Yes",
                        "1",
                        "Text:",
                        "Test",
                        "TextBox",
                        ""});
            table7.AddRow(new string[] {
                        "No",
                        "1",
                        "Text Area:",
                        "Initial",
                        "TextArea",
                        ""});
            table7.AddRow(new string[] {
                        "No",
                        "1",
                        "Select:",
                        "Yes",
                        "ListBox",
                        ""});
            table7.AddRow(new string[] {
                        "No",
                        "1",
                        "Radio (PDE Verify Only):",
                        "No",
                        "Radio",
                        ""});
            table7.AddRow(new string[] {
                        "N0",
                        "1",
                        "Date:",
                        "01/01/2010",
                        "TextBox",
                        "Save & Close Row"});
#line 88
 testRunner.And("I enter below \"Table with All Data Types:\" table questions data in the CRF.", ((string)(null)), table7, "And ");
#line 95
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
 testRunner.And("I click on \"Save & Close\" button on \"Form 6\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_008_Select a Form with questions in multiple tables. Enter data in CRF and ha" +
            "ndle queries popup.")]
        public virtual void CRF_008_SelectAFormWithQuestionsInMultipleTables_EnterDataInCRFAndHandleQueriesPopup_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_008_Select a Form with questions in multiple tables. Enter data in CRF and ha" +
                    "ndle queries popup.", null, ((string[])(null)));
#line 99
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 100
 testRunner.Given("I expand \"Visit (Week 8)\" to select and open \"Form 4\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 101
 testRunner.When("I click \"Checkout\" button on \"Form 4\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table8.AddRow(new string[] {
                        "Yes",
                        "1",
                        "Text question: (MinL: 3)(Edit Check: MinL {Sent})",
                        "T12",
                        "TextBox",
                        ""});
            table8.AddRow(new string[] {
                        "No",
                        "1",
                        "Text question: (MaxL: 10)(Edit Check: MaxL {Draft})",
                        "T2",
                        "TextBox",
                        "Save & Close Row"});
#line 102
 testRunner.And("I enter below \"Text Table:\" table questions data in the CRF.", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table9.AddRow(new string[] {
                        "Yes",
                        "1",
                        "Date question: (Edit Check: Required {Sent})",
                        "12/06/2017",
                        "TextBox",
                        "Save & Close Row"});
#line 106
 testRunner.And("I enter below \"Date Table:\" table questions data in the CRF.", ((string)(null)), table9, "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table10.AddRow(new string[] {
                        "Yes",
                        "1",
                        "Integer question (Edit Check: Required {Sent})",
                        "12",
                        "TextBox",
                        "Save & Close Row"});
#line 109
 testRunner.And("I enter below \"Integer Table:\" table questions data in the CRF.", ((string)(null)), table10, "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table11.AddRow(new string[] {
                        "Yes",
                        "1",
                        "Float question: (Edit Check: Required {Sent})",
                        "12.12",
                        "TextBox",
                        "Save & Close Row"});
#line 112
 testRunner.And("I enter below \"Float Table:\" table questions data in the CRF.", ((string)(null)), table11, "And ");
#line 115
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 116
 testRunner.And("I click on \"Save & Close\" button on \"Form 4\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Queries"});
            table12.AddRow(new string[] {
                        "Row # 1: (Q4.10) This is a required item."});
            table12.AddRow(new string[] {
                        "Row # 1: (Q1.3) This is a required item."});
            table12.AddRow(new string[] {
                        "Row # 1: (Q1.5) This is a required item."});
            table12.AddRow(new string[] {
                        "Row # 1: (Q2.6) This is a required item."});
            table12.AddRow(new string[] {
                        "Row # 1: (Q3.8) This is a required item."});
            table12.AddRow(new string[] {
                        "Row # 1: (Q4.5) The value entered does not meet the minimum length requirement of" +
                            " 2."});
            table12.AddRow(new string[] {
                        "Row # 1: (Q4.7) The value entered does not meet the minimum precision of 1."});
            table12.AddRow(new string[] {
                        "Row # 1: (Q3.5) Item does not meet minimum length requirement of 2."});
#line 117
 testRunner.Then("I verify queries under queries type \"New Queries\" in Modal \"Queries Result\"", ((string)(null)), table12, "Then ");
#line 127
 testRunner.And("I click Continue button of Modal \"Queries Result\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.And("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_009_Select a Form with Autobuild table (fixed) questions and enter data in CR" +
            "F.")]
        public virtual void CRF_009_SelectAFormWithAutobuildTableFixedQuestionsAndEnterDataInCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_009_Select a Form with Autobuild table (fixed) questions and enter data in CR" +
                    "F.", null, ((string[])(null)));
#line 130
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 131
 testRunner.Given("I expand \"Visit (Week 20)\" to select and open \"Autobuild Fixed 1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 132
 testRunner.When("I click \"Checkout\" button on \"Autobuild Fixed 1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table13.AddRow(new string[] {
                        "No",
                        "1",
                        "Gender question (male or female):",
                        "Male",
                        "ListBox",
                        ""});
            table13.AddRow(new string[] {
                        "No",
                        "1",
                        "Non-key sequence code list (inches or centimeters):",
                        "cm",
                        "Radio",
                        ""});
            table13.AddRow(new string[] {
                        "No",
                        "1",
                        "Float value: (Maxlength: 5 {Sent}, DataType {Sent}, MaxPrecision: 3 {Draft}",
                        "166.12",
                        "TextBox",
                        "Save & Close Row"});
            table13.AddRow(new string[] {
                        "No",
                        "3",
                        "Float value: (Maxlength: 5 {Sent}, DataType {Sent}, MaxPrecision: 3 {Draft}",
                        "166.12",
                        "TextBox",
                        "Save & Close Row"});
#line 133
 testRunner.And("I enter below \"First auto build table (max rows: 6, structure: fixed):\" autobuild" +
                    " table questions data in the CRF.", ((string)(null)), table13, "And ");
#line 139
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 140
 testRunner.And("I click on \"Save & Close\" button on \"Autobuild Fixed 1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 141
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_010_Select a Form with Autobuild table (non-fixed) questions and enter data i" +
            "n CRF.")]
        public virtual void CRF_010_SelectAFormWithAutobuildTableNon_FixedQuestionsAndEnterDataInCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_010_Select a Form with Autobuild table (non-fixed) questions and enter data i" +
                    "n CRF.", null, ((string[])(null)));
#line 143
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 144
 testRunner.Given("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form02\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 145
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form02\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table14.AddRow(new string[] {
                        "Yes",
                        "1",
                        "Does the chicken come first?",
                        "Yes",
                        "ListBox",
                        ""});
            table14.AddRow(new string[] {
                        "No",
                        "1",
                        "Enter hour in military time:",
                        "14",
                        "ListBox",
                        ""});
            table14.AddRow(new string[] {
                        "No",
                        "1",
                        "Enter Minutes:",
                        "12",
                        "ListBox",
                        "Save & Close Row"});
            table14.AddRow(new string[] {
                        "Yes",
                        "2",
                        "Does the chicken come first?",
                        "No",
                        "ListBox",
                        ""});
            table14.AddRow(new string[] {
                        "No",
                        "2",
                        "Enter hour in military time:",
                        "11",
                        "ListBox",
                        ""});
            table14.AddRow(new string[] {
                        "No",
                        "2",
                        "Enter Minutes:",
                        "13",
                        "ListBox",
                        "Save & Close Row"});
#line 146
 testRunner.And("I enter below \"Key Sequence is not used.  Maximum table rows are 3.  Hidden Quest" +
                    "ions (Integer, Float, Text, Date) are derives:\" autobuild table questions data i" +
                    "n the CRF.", ((string)(null)), table14, "And ");
#line 154
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 155
 testRunner.And("I click on \"Save & Close\" button on \"AutoBuild Form02\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 156
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_011_Select a Form with questions in multiple Autobuild tables (fixed and non-" +
            "fixed) questions. Enter data in CRF and handle queries popup.")]
        public virtual void CRF_011_SelectAFormWithQuestionsInMultipleAutobuildTablesFixedAndNon_FixedQuestions_EnterDataInCRFAndHandleQueriesPopup_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_011_Select a Form with questions in multiple Autobuild tables (fixed and non-" +
                    "fixed) questions. Enter data in CRF and handle queries popup.", null, ((string[])(null)));
#line 158
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 159
 testRunner.Given("I expand \"Visit (Week 52)\" to select and open \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 160
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table15.AddRow(new string[] {
                        "Yes",
                        "1",
                        "Select the color:",
                        "Red",
                        "Radio",
                        ""});
            table15.AddRow(new string[] {
                        "No",
                        "1",
                        "Select your drug:",
                        "Contact",
                        "ListBox",
                        ""});
            table15.AddRow(new string[] {
                        "No",
                        "1",
                        "Select Work Shift:",
                        "AM",
                        "ListBox",
                        "Save & Close Row"});
            table15.AddRow(new string[] {
                        "Yes",
                        "2",
                        "Select the color:",
                        "Red",
                        "Radio",
                        ""});
            table15.AddRow(new string[] {
                        "No",
                        "2",
                        "Select your drug:",
                        "Contact",
                        "ListBox",
                        ""});
            table15.AddRow(new string[] {
                        "No",
                        "2",
                        "Select Work Shift:",
                        "PM",
                        "ListBox",
                        "Save & Close Row"});
#line 161
 testRunner.And("I enter below \"Key Sequence is not used.  Maximum rows is 2.  Question (4-7) have" +
                    " queries.:\" autobuild table questions data in the CRF.", ((string)(null)), table15, "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table16.AddRow(new string[] {
                        "No",
                        "1",
                        "Race:",
                        "Asian",
                        "ListBox",
                        ""});
            table16.AddRow(new string[] {
                        "No",
                        "1",
                        "The some Text value:",
                        "Test",
                        "TextBox",
                        "Save & Close Row"});
            table16.AddRow(new string[] {
                        "Yes",
                        "3",
                        "Race:",
                        "White",
                        "ListBox",
                        "Save & Close Row"});
#line 169
 testRunner.And("I enter below \"Key Sequence is on question #1.  Question (4 & 7) are derives.  Ta" +
                    "ble structure is open.  Maximum Table Rows are 5.:\" autobuild table questions da" +
                    "ta in the CRF.", ((string)(null)), table16, "And ");
#line 174
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 175
 testRunner.And("I click on \"Save & Close\" button on \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Queries"});
            table17.AddRow(new string[] {
                        "Row # 1: Required date value"});
            table17.AddRow(new string[] {
                        "Row # 1: Value does not meet the minimum length of 1"});
            table17.AddRow(new string[] {
                        "Row # 2: Required date value"});
            table17.AddRow(new string[] {
                        "Row # 2: Value does not meet the minimum length of 1"});
#line 176
 testRunner.Then("I verify queries under queries type \"New Queries\" in Modal \"Queries Result\"", ((string)(null)), table17, "Then ");
#line 182
 testRunner.And("I click Continue button of Modal \"Queries Result\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
 testRunner.And("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_012_Select a Form with questions in multiple Autobuild tables (fixed) questio" +
            "ns. Enter data in CRF and handle queries popup.")]
        public virtual void CRF_012_SelectAFormWithQuestionsInMultipleAutobuildTablesFixedQuestions_EnterDataInCRFAndHandleQueriesPopup_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_012_Select a Form with questions in multiple Autobuild tables (fixed) questio" +
                    "ns. Enter data in CRF and handle queries popup.", null, ((string[])(null)));
#line 185
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 186
 testRunner.Given("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 187
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table18.AddRow(new string[] {
                        "No",
                        "1",
                        "Race:",
                        "Asian",
                        "ListBox",
                        ""});
            table18.AddRow(new string[] {
                        "No",
                        "1",
                        "Gender:",
                        "Male",
                        "Radio",
                        "Save & Close Row"});
            table18.AddRow(new string[] {
                        "No",
                        "4",
                        "Race:",
                        "Asian",
                        "ListBox",
                        ""});
            table18.AddRow(new string[] {
                        "No",
                        "4",
                        "Gender:",
                        "Male",
                        "Radio",
                        "Save & Close Row"});
#line 188
 testRunner.And("I enter below \"Key Sequence on question #2.  Table Structure is fixed.  Maximum R" +
                    "ows is not exact.  Questions (4-7) are derives.:\" autobuild table questions data" +
                    " in the CRF.", ((string)(null)), table18, "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table19.AddRow(new string[] {
                        "No",
                        "2",
                        "Placebo:",
                        "Yes",
                        "ListBox",
                        ""});
            table19.AddRow(new string[] {
                        "No",
                        "2",
                        "Name: {Required - Sent}",
                        "Drug1",
                        "TextBox",
                        "Save & Close Row"});
            table19.AddRow(new string[] {
                        "No",
                        "5",
                        "Placebo:",
                        "No",
                        "ListBox",
                        "Save & Close Row"});
#line 194
 testRunner.And("I enter below \"Key Sequence on question #1 & #3.  Table Structure is fixed.  Maxi" +
                    "mum Rows is exact.  Questions (4-7) have queries.:\" autobuild table questions da" +
                    "ta in the CRF.", ((string)(null)), table19, "And ");
#line 199
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
 testRunner.And("I click on \"Save & Close\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "Queries"});
            table20.AddRow(new string[] {
                        "Row # 1: Patient\'s Name is required"});
            table20.AddRow(new string[] {
                        "Row # 2: Value does not have minimum precision of 1"});
            table20.AddRow(new string[] {
                        "Row # 3: Patient\'s Name is required"});
            table20.AddRow(new string[] {
                        "Row # 4: Patient\'s Name is required"});
            table20.AddRow(new string[] {
                        "Row # 5: Patient\'s Name is required"});
            table20.AddRow(new string[] {
                        "Row # 6: Patient\'s Name is required"});
#line 201
 testRunner.Then("I verify queries under queries type \"New Queries\" in Modal \"Queries Result\"", ((string)(null)), table20, "Then ");
#line 209
 testRunner.And("I click Continue button of Modal \"Queries Result\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 210
 testRunner.And("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_013_Verify questions data of flat questions in un-submitted CRF.")]
        public virtual void CRF_013_VerifyQuestionsDataOfFlatQuestionsInUn_SubmittedCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_013_Verify questions data of flat questions in un-submitted CRF.", null, ((string[])(null)));
#line 212
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 213
 testRunner.Given("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table21.AddRow(new string[] {
                        "Sample select question:",
                        "[Blank]",
                        "ListBox"});
            table21.AddRow(new string[] {
                        "Sample radio question:",
                        "[Blank]",
                        "Radio"});
#line 214
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table21, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_014_Verify questions data of flat questions in completely submitted CRF.")]
        public virtual void CRF_014_VerifyQuestionsDataOfFlatQuestionsInCompletelySubmittedCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_014_Verify questions data of flat questions in completely submitted CRF.", null, ((string[])(null)));
#line 220
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 221
 testRunner.Given("I expand \"Visit (Week 3)\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table22.AddRow(new string[] {
                        "Date of Birth:",
                        "01/01/1980",
                        "Text"});
            table22.AddRow(new string[] {
                        "Gender:",
                        "Male",
                        "Text"});
            table22.AddRow(new string[] {
                        "Race:",
                        "Asian",
                        "Text"});
            table22.AddRow(new string[] {
                        "Dictionary Term verbatim for RACEO:",
                        "NA",
                        "Text"});
            table22.AddRow(new string[] {
                        "Encoding Type for RACEO:",
                        "NA",
                        "Text"});
            table22.AddRow(new string[] {
                        "RACE + RACE01 combined for reporting purposes:",
                        "NA",
                        "Text"});
            table22.AddRow(new string[] {
                        "If Race is Asian, is Patient of Japanese Ancestry?",
                        "Yes",
                        "Text"});
            table22.AddRow(new string[] {
                        "Was Patient Born in Japan?",
                        "No",
                        "Text"});
            table22.AddRow(new string[] {
                        "Number of parents born in Japan:",
                        "1",
                        "Text"});
            table22.AddRow(new string[] {
                        "Number of Grandparents Born in Japan?",
                        "2",
                        "Text"});
            table22.AddRow(new string[] {
                        "Treatment Group Code:",
                        "G1",
                        "Text"});
            table22.AddRow(new string[] {
                        "Treatment Group Description:",
                        "Group1",
                        "Text"});
            table22.AddRow(new string[] {
                        "Age at Study Start:",
                        "37",
                        "Text"});
            table22.AddRow(new string[] {
                        "Age Units at Study Start:",
                        "Years",
                        "Text"});
            table22.AddRow(new string[] {
                        "Study Start Date:",
                        "11/28/2017",
                        "Text"});
#line 222
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table22, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_015_Checkout and verify questions data of flat questions in submitted CRF.")]
        public virtual void CRF_015_CheckoutAndVerifyQuestionsDataOfFlatQuestionsInSubmittedCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_015_Checkout and verify questions data of flat questions in submitted CRF.", null, ((string[])(null)));
#line 240
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 241
 testRunner.Given("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 242
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table23.AddRow(new string[] {
                        "Sample text question:",
                        "Test",
                        "Link"});
            table23.AddRow(new string[] {
                        "Sample select question:",
                        "Yes",
                        "Link"});
            table23.AddRow(new string[] {
                        "Sample radio question:",
                        "No",
                        "Link"});
#line 243
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table23, "Then ");
#line 248
 testRunner.And("I click on \"Cancel\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_016_Verify Listbox and radio items of and un-submitted CRF and without checki" +
            "ng out.")]
        public virtual void CRF_016_VerifyListboxAndRadioItemsOfAndUn_SubmittedCRFAndWithoutCheckingOut_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_016_Verify Listbox and radio items of and un-submitted CRF and without checki" +
                    "ng out.", null, ((string[])(null)));
#line 250
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 251
 testRunner.Given("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table24.AddRow(new string[] {
                        "[Blank]"});
            table24.AddRow(new string[] {
                        "Yes"});
            table24.AddRow(new string[] {
                        "No"});
#line 252
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"Sample select question:\" on the " +
                    "CRF.", ((string)(null)), table24, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table25.AddRow(new string[] {
                        "[Blank]"});
            table25.AddRow(new string[] {
                        "Yes"});
            table25.AddRow(new string[] {
                        "No"});
#line 257
 testRunner.And("I verify below \"RadioGroup\" items are displayed in \"Sample radio question:\" on th" +
                    "e CRF.", ((string)(null)), table25, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_017_Verify unavailable Listbox and radio items of and un-submitted CRF and wi" +
            "thout checking out.")]
        public virtual void CRF_017_VerifyUnavailableListboxAndRadioItemsOfAndUn_SubmittedCRFAndWithoutCheckingOut_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_017_Verify unavailable Listbox and radio items of and un-submitted CRF and wi" +
                    "thout checking out.", null, ((string[])(null)));
#line 263
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 264
 testRunner.Given("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table26.AddRow(new string[] {
                        "[NoBlank]"});
            table26.AddRow(new string[] {
                        "Yes"});
#line 265
 testRunner.Then("I Verify below \"ListBox\" items are not displayed in \"Sample select question:\" on " +
                    "the CRF.", ((string)(null)), table26, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table27.AddRow(new string[] {
                        "[NoBlank]"});
            table27.AddRow(new string[] {
                        "Yes"});
#line 269
 testRunner.And("I verify below \"RadioGroup\" items are not displayed in \"Sample radio question:\" o" +
                    "n the CRF.", ((string)(null)), table27, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_018_Verify table questions data in submitted form and without checking out.")]
        public virtual void CRF_018_VerifyTableQuestionsDataInSubmittedFormAndWithoutCheckingOut_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_018_Verify table questions data in submitted form and without checking out.", null, ((string[])(null)));
#line 274
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 275
 testRunner.Given("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table28.AddRow(new string[] {
                        "1",
                        "Race:",
                        "Asian",
                        "Text",
                        ""});
            table28.AddRow(new string[] {
                        "1",
                        "Gender:",
                        "Male",
                        "Text",
                        "OK"});
            table28.AddRow(new string[] {
                        "4",
                        "Race:",
                        "Asian",
                        "Text",
                        ""});
            table28.AddRow(new string[] {
                        "4",
                        "Gender:",
                        "Male",
                        "Text",
                        "OK"});
#line 276
 testRunner.Then("I verify below \"Key Sequence on question #2.  Table Structure is fixed.  Maximum " +
                    "Rows is not exact.  Questions (4-7) are derives.:\" table questions data in the C" +
                    "RF.", ((string)(null)), table28, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_019_Verify table questions data in submitted form and checking out.")]
        public virtual void CRF_019_VerifyTableQuestionsDataInSubmittedFormAndCheckingOut_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_019_Verify table questions data in submitted form and checking out.", null, ((string[])(null)));
#line 283
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 284
 testRunner.Given("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 285
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table29.AddRow(new string[] {
                        "1",
                        "Race:",
                        "[Blank]",
                        "ListBox",
                        ""});
            table29.AddRow(new string[] {
                        "1",
                        "Region of body:",
                        "Head",
                        "ListBox",
                        ""});
            table29.AddRow(new string[] {
                        "1",
                        "Row Count on Table above:",
                        "0",
                        "TextBox",
                        ""});
            table29.AddRow(new string[] {
                        "1",
                        "Form03 Created Date:",
                        "12/22/2017",
                        "TextBox",
                        "Cancel Row"});
#line 286
 testRunner.Then("I verify below \"Key Sequence is on question #1.  Question (4 & 7) are derives.  T" +
                    "able structure is open.  Maximum Table Rows are 5.:\" table questions data in the" +
                    " CRF.", ((string)(null)), table29, "Then ");
#line 292
 testRunner.And("I click on \"Cancel\" button on \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_020_Verify available listbox and radio items of unsubmitted CRF.")]
        public virtual void CRF_020_VerifyAvailableListboxAndRadioItemsOfUnsubmittedCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_020_Verify available listbox and radio items of unsubmitted CRF.", null, ((string[])(null)));
#line 294
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 295
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form 6\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 296
 testRunner.When("I click \"Checkout\" button on \"Form 6\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 297
 testRunner.And("I click on \"Add New Row\" button in \"Table with All Data Types:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table30.AddRow(new string[] {
                        "[Blank]"});
            table30.AddRow(new string[] {
                        "Yes"});
            table30.AddRow(new string[] {
                        "No"});
#line 298
 testRunner.Then("I verify below \"ListBox\" items are displayed for \"Select:\" question in row \"2\" of" +
                    " \"Table with All Data Types:\" table.", ((string)(null)), table30, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table31.AddRow(new string[] {
                        "[Blank]"});
            table31.AddRow(new string[] {
                        "Yes"});
            table31.AddRow(new string[] {
                        "No"});
#line 303
 testRunner.And("I verify below \"RadioGroup\" items are displayed for \"Radio (PDE Verify Only):\" qu" +
                    "estion in row \"2\" of \"Table with All Data Types:\" table.", ((string)(null)), table31, "And ");
#line 308
 testRunner.And("I click on \"Cancel\" button on \"Form 6\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_021_Verify available listbox and radio items of unsubmitted CRF.")]
        public virtual void CRF_021_VerifyAvailableListboxAndRadioItemsOfUnsubmittedCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_021_Verify available listbox and radio items of unsubmitted CRF.", null, ((string[])(null)));
#line 310
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 311
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form 6\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 312
 testRunner.When("I click \"Checkout\" button on \"Form 6\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 313
 testRunner.And("I click on \"Add New Row\" button in \"Table with All Data Types:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table32.AddRow(new string[] {
                        "[NoBlank]"});
            table32.AddRow(new string[] {
                        "Yesabc"});
#line 314
 testRunner.Then("I verify below \"ListBox\" items are not displayed for \"Select:\" question in row \"2" +
                    "\" of \"Table with All Data Types:\" table.", ((string)(null)), table32, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table33.AddRow(new string[] {
                        "[NoBlank]"});
            table33.AddRow(new string[] {
                        "Yesabc"});
#line 318
 testRunner.And("I verify below \"RadioGroup\" items are not displayed for \"Radio (PDE Verify Only):" +
                    "\" question in row \"2\" of \"Table with All Data Types:\" table.", ((string)(null)), table33, "And ");
#line 322
 testRunner.And("I click on \"Cancel\" button on \"Form 6\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_022_Fill values for submitted questions in CRF.")]
        public virtual void CRF_022_FillValuesForSubmittedQuestionsInCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_022_Fill values for submitted questions in CRF.", null, ((string[])(null)));
#line 324
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 325
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 326
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes"});
            table34.AddRow(new string[] {
                        "Sample text question:",
                        "Text",
                        "TextBox",
                        "TextN",
                        "DCF",
                        "Test"});
            table34.AddRow(new string[] {
                        "Sample radio question:",
                        "No",
                        "Radio",
                        "Yes",
                        "SOR",
                        ""});
            table34.AddRow(new string[] {
                        "Sample select question:",
                        "No",
                        "ListBox",
                        "Yes",
                        "SOR",
                        "Updated"});
#line 327
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table34, "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes",
                        "RowButtonToClick"});
            table35.AddRow(new string[] {
                        "No",
                        "1",
                        "Drug Name:",
                        "Test Drug",
                        "TextBox",
                        "Test Drug1",
                        "SOR",
                        "",
                        ""});
            table35.AddRow(new string[] {
                        "No",
                        "1",
                        "Start Date:",
                        "01/01/2000",
                        "TextBox",
                        "01/01/2002",
                        "DCF",
                        "Test",
                        "Cancel Row"});
#line 332
 testRunner.And("I enter below \"Sample Table:\" table questions data in the CRF.", ((string)(null)), table35, "And ");
#line 336
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 337
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_023_Fill values in submitted questions of a Form with Autobuild table (fixed)" +
            " questions.")]
        public virtual void CRF_023_FillValuesInSubmittedQuestionsOfAFormWithAutobuildTableFixedQuestions_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_023_Fill values in submitted questions of a Form with Autobuild table (fixed)" +
                    " questions.", null, ((string[])(null)));
#line 339
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 340
 testRunner.Given("I expand \"Visit (Week 20)\" to select and open \"Autobuild Fixed 1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 341
 testRunner.When("I click \"Checkout\" button on \"Autobuild Fixed 1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes",
                        "RowButtonToClick"});
            table36.AddRow(new string[] {
                        "No",
                        "1",
                        "Gender question (male or female):",
                        "Male",
                        "ListBox",
                        "Female",
                        "DCF",
                        "Notes",
                        ""});
            table36.AddRow(new string[] {
                        "No",
                        "1",
                        "Non-key sequence code list (inches or centimeters):",
                        "cm",
                        "Radio",
                        "in",
                        "SOR",
                        "",
                        "Save & Close Row"});
            table36.AddRow(new string[] {
                        "No",
                        "3",
                        "Float value: (Maxlength: 5 {Sent}, DataType {Sent}, MaxPrecision: 3 {Draft}",
                        "166.12",
                        "TextBox",
                        "170.12",
                        "DCF",
                        "",
                        "Cancel Row"});
#line 342
 testRunner.And("I enter below \"First auto build table (max rows: 6, structure: fixed):\" autobuild" +
                    " table questions data in the CRF.", ((string)(null)), table36, "And ");
#line 347
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 348
 testRunner.And("I click on \"Save & Close\" button on \"Autobuild Fixed 1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 349
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_024_Add Comments to flat questions on a CRF.")]
        public virtual void CRF_024_AddCommentsToFlatQuestionsOnACRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_024_Add Comments to flat questions on a CRF.", null, ((string[])(null)));
#line 351
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 352
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "CommentsToAdd"});
            table37.AddRow(new string[] {
                        "Sample text question:",
                        "Text Comment"});
            table37.AddRow(new string[] {
                        "Sample radio question:",
                        "radio comment"});
#line 354
 testRunner.Then("I add comments to flat questions in the CRF.", ((string)(null)), table37, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_025_Add Comments to table questions on a CRF.")]
        public virtual void CRF_025_AddCommentsToTableQuestionsOnACRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_025_Add Comments to table questions on a CRF.", null, ((string[])(null)));
#line 359
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 360
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "CommentsToAdd",
                        "RowButtonToClick"});
            table38.AddRow(new string[] {
                        "1",
                        "Drug Name:",
                        "Comment 1.1",
                        ""});
            table38.AddRow(new string[] {
                        "1",
                        "Condition:",
                        "Comment 1.2",
                        "OK"});
            table38.AddRow(new string[] {
                        "2",
                        "Condition:",
                        "Comment 2.1",
                        "OK"});
#line 361
 testRunner.Then("I add comments to questions of table \"Sample Table:\" in the CRF.", ((string)(null)), table38, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_026_Verify items of a submitted flat question on a CRF.")]
        public virtual void CRF_026_VerifyItemsOfASubmittedFlatQuestionOnACRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_026_Verify items of a submitted flat question on a CRF.", null, ((string[])(null)));
#line 367
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 368
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 369
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 370
 testRunner.And("I click on \"[Blank]\" answer value link for flat question \"Sample select question:" +
                    "\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table39.AddRow(new string[] {
                        "[Blank]"});
            table39.AddRow(new string[] {
                        "Yes"});
            table39.AddRow(new string[] {
                        "No"});
#line 371
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"Sample select question:\" on the " +
                    "CRF.", ((string)(null)), table39, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("CRF_027_Verify items of a submitted table question on a CRF.")]
        public virtual void CRF_027_VerifyItemsOfASubmittedTableQuestionOnACRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("CRF_027_Verify items of a submitted table question on a CRF.", null, ((string[])(null)));
#line 377
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 378
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form 6\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 379
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 380
 testRunner.And("I click on \"[Blank]\" answer value link for table \"Table with All Data Types:\" que" +
                    "stion \"Select:\" in row \"1\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table40.AddRow(new string[] {
                        "[Blank]"});
            table40.AddRow(new string[] {
                        "Yes"});
            table40.AddRow(new string[] {
                        "No"});
#line 381
 testRunner.Then("I verify below \"ListBox\" items are displayed for \"Select:\" question in row \"1\" of" +
                    " \"Table with All Data Types:\" table.", ((string)(null)), table40, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

