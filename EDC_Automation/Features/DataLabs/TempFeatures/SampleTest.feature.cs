// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.TempFeatures
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("SampleTest")]
    public partial class SampleTestFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SampleTest.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "SampleTest", "\tIn order to avoid silly mistakes\r\n\tAs a math idiot\r\n\tI want to be told the sum o" +
                    "f two numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("_0001_Login to Datalabs")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void _0001_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("_0001_Login to Datalabs", null, new string[] {
                        "mytag"});
#line 7
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 testRunner.Given("I have logged into DataLabs application as an Administrator user.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("_0002_Add a patient")]
        public virtual void _0002_AddAPatient()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("_0002_Add a patient", null, ((string[])(null)));
#line 11
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 12
 testRunner.Given("I select \"Patients\" tab from the main menu of DataLabs.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 14
 testRunner.And("I select site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table1.AddRow(new string[] {
                        "11",
                        "PAT",
                        "11/28/2017"});
#line 15
 testRunner.When("I enter add patient data as below", ((string)(null)), table1, "When ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("_0003_Enroll a patient")]
        public virtual void _0003_EnrollAPatient()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("_0003_Enroll a patient", null, ((string[])(null)));
#line 27
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 28
 testRunner.Given("I select \"Patients\" tab from the main menu of DataLabs.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 29
 testRunner.And("I select site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.When("I select \"01-PAT\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table2.AddRow(new string[] {
                        "11",
                        "11/29/2017",
                        "Yes"});
#line 31
 testRunner.And("I enroll the selected patient with below details for patient \"11-PAT\".", ((string)(null)), table2, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("_0005_Fill Demo CRF")]
        public virtual void _0005_FillDemoCRF()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("_0005_Fill Demo CRF", null, ((string[])(null)));
#line 35
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 36
 testRunner.Given("I select \"Patients\" tab from the main menu of DataLabs.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 37
 testRunner.And("I select site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.When("I select \"06-PAT\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
 testRunner.And("I select \"Checkout\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table3.AddRow(new string[] {
                        "Date of Birth:",
                        "01/01/1980",
                        "TextBox"});
            table3.AddRow(new string[] {
                        "Gender:",
                        "Male",
                        "ListBox"});
            table3.AddRow(new string[] {
                        "Race:",
                        "White",
                        "ListBox"});
            table3.AddRow(new string[] {
                        "If Race is Other, Specifiy:",
                        "",
                        "TextBox"});
            table3.AddRow(new string[] {
                        "Dictionary Term verbatim for RACEO:",
                        "NA",
                        "TextBox"});
            table3.AddRow(new string[] {
                        "Encoding Type for RACEO:",
                        "NA",
                        "TextBox"});
            table3.AddRow(new string[] {
                        "RACE + RACE01 combined for reporting purposes:",
                        "",
                        "TextBox"});
            table3.AddRow(new string[] {
                        "If Race is Asian, is Patient of Japanese Ancestry?",
                        "No",
                        "ListBox"});
            table3.AddRow(new string[] {
                        "Treatment Group Code:",
                        "GRP1",
                        "TextBox"});
            table3.AddRow(new string[] {
                        "Study Start Date:",
                        "11/28/2017",
                        "TextBox"});
#line 40
 testRunner.And("I enter below data for Flat questions in CRF.", ((string)(null)), table3, "And ");
#line 52
 testRunner.And("I select entry complete checkbox.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
 testRunner.And("I select \"Save & Close\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.Then("The CRF is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("_0004_Fill Form1 CRF")]
        public virtual void _0004_FillForm1CRF()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("_0004_Fill Form1 CRF", null, ((string[])(null)));
#line 56
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 57
 testRunner.Given("I select \"Patients\" tab from the main menu of DataLabs.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 58
 testRunner.And("I select site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.When("I select \"11-PAT\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 60
 testRunner.And("I select \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table4.AddRow(new string[] {
                        "Sample text question:",
                        "Text",
                        "TextBox"});
            table4.AddRow(new string[] {
                        "Sample select question:",
                        "Yes",
                        "ListBox"});
            table4.AddRow(new string[] {
                        "Sample radio question:",
                        "Yes",
                        "RadioButton"});
            table4.AddRow(new string[] {
                        "Sample integer question:",
                        "10",
                        "TextBox"});
            table4.AddRow(new string[] {
                        "Sample float question:",
                        "11.12",
                        "TextBox"});
            table4.AddRow(new string[] {
                        "Sample date question:",
                        "11/30/2017",
                        "TextBox"});
#line 61
 testRunner.And("I enter below data for Flat questions in CRF.", ((string)(null)), table4, "And ");
#line 69
 testRunner.And("I select entry complete checkbox.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
 testRunner.And("I select \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
 testRunner.Then("The CRF is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("_0006_Verification of CRF save success msg")]
        public virtual void _0006_VerificationOfCRFSaveSuccessMsg()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("_0006_Verification of CRF save success msg", null, ((string[])(null)));
#line 73
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 74
 testRunner.Given("I select \"Patients\" tab from the main menu of DataLabs.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 75
 testRunner.And("I select site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
 testRunner.When("I select \"11-PAT\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 77
 testRunner.Then("The CRF is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("_0007_Fill Form6")]
        public virtual void _0007_FillForm6()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("_0007_Fill Form6", null, ((string[])(null)));
#line 79
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 80
 testRunner.Given("I select \"Patients\" tab from the main menu of DataLabs.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 81
 testRunner.And("I select site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.When("I select \"02-PAT\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 83
 testRunner.And("I select \"Checkout\" button on \"Form 6\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table5.AddRow(new string[] {
                        "Yes",
                        "1",
                        "Text:",
                        "Test",
                        "TextBox",
                        ""});
            table5.AddRow(new string[] {
                        "No",
                        "1",
                        "Text Area:",
                        "Test2",
                        "TextArea",
                        ""});
            table5.AddRow(new string[] {
                        "No",
                        "1",
                        "Select:",
                        "Yes",
                        "ListBox",
                        ""});
            table5.AddRow(new string[] {
                        "No",
                        "1",
                        "Radio (PDE Verify Only):",
                        "No",
                        "Radio",
                        "Save & Close Row"});
            table5.AddRow(new string[] {
                        "Yes",
                        "2",
                        "Date:",
                        "12/04/2017",
                        "TextBox",
                        ""});
            table5.AddRow(new string[] {
                        "No",
                        "2",
                        "Integer:",
                        "20",
                        "TextBox",
                        ""});
            table5.AddRow(new string[] {
                        "No",
                        "2",
                        "Float:",
                        "12.12",
                        "TextBox",
                        "Save & Close Row"});
            table5.AddRow(new string[] {
                        "Yes",
                        "3",
                        "Text:",
                        "Test",
                        "TextBox",
                        "Cancel Row"});
#line 85
 testRunner.Then("I enter below data in \"Table with All Data Types:\" in CRF.", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("_0008_Fill Autobuild Fixed 1")]
        public virtual void _0008_FillAutobuildFixed1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("_0008_Fill Autobuild Fixed 1", null, ((string[])(null)));
#line 96
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 97
 testRunner.Given("I select \"Patients\" tab from the main menu of DataLabs.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 98
 testRunner.And("I select site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
 testRunner.When("I select \"11-PAT\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 100
 testRunner.And("I select \"Checkout\" button on \"Autobuild Fixed 1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table6.AddRow(new string[] {
                        "No",
                        "1",
                        "Gender question (male or female):",
                        "Male",
                        "ListBox",
                        ""});
            table6.AddRow(new string[] {
                        "No",
                        "1",
                        "Non-key sequence code list (inches or centimeters):",
                        "cm",
                        "Radio",
                        ""});
            table6.AddRow(new string[] {
                        "No",
                        "1",
                        "Float value: (Maxlength: 5 {Sent}, DataType {Sent}, MaxPrecision: 3 {Draft}",
                        "166.12",
                        "TextBox",
                        "Save & Close Row"});
            table6.AddRow(new string[] {
                        "No",
                        "3",
                        "Float value: (Maxlength: 5 {Sent}, DataType {Sent}, MaxPrecision: 3 {Draft}",
                        "166.12",
                        "TextBox",
                        "Save & Close Row"});
#line 101
 testRunner.Then("I enter below data in Autobuild table \"First auto build table (max rows: 6, struc" +
                    "ture: fixed):\" in CRF.", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("_009_Verify selected list item and radio option in a form")]
        public virtual void _009_VerifySelectedListItemAndRadioOptionInAForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("_009_Verify selected list item and radio option in a form", null, ((string[])(null)));
#line 109
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 110
 testRunner.Given("I select \"Patients\" tab from the main menu of DataLabs.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 111
 testRunner.And("I select site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
 testRunner.When("I select \"01-PAT\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 113
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table7.AddRow(new string[] {
                        "Sample select question:",
                        "[Blank]",
                        "ListBox"});
            table7.AddRow(new string[] {
                        "Sample radio question:",
                        "[Blank]",
                        "RadioButton"});
#line 114
 testRunner.And("I verify below data for Flat questions in CRF.", ((string)(null)), table7, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T01_Add a patient and verify tags")]
        public virtual void T01_AddAPatientAndVerifyTags()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T01_Add a patient and verify tags", null, ((string[])(null)));
#line 119
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 120
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 121
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table8.AddRow(new string[] {
                        "01",
                        "PAT",
                        "12/06/2017"});
#line 122
 testRunner.When("I add patient with below details.", ((string)(null)), table8, "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table9.AddRow(new string[] {
                        "01-PAT"});
#line 125
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T02_Verify the XML Data evented out for the Add Patient")]
        public virtual void T02_VerifyTheXMLDataEventedOutForTheAddPatient()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T02_Verify the XML Data evented out for the Add Patient", null, ((string[])(null)));
#line 129
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 130
 testRunner.Given(@"I save the Event XML data in ""AddPatient1.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscripberDetail order by OdmSubscriberDetailKey desc where StudyEventkey = (select StudyEventKey from MF_StudyEvent where StudyEventName = 'PatientAdd')""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 131
 testRunner.And("I have opened the XML file \"AddPatient1.xml\" located in test folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName"});
            table10.AddRow(new string[] {
                        "ODM"});
            table10.AddRow(new string[] {
                        "Study"});
            table10.AddRow(new string[] {
                        "GlobalVariables"});
            table10.AddRow(new string[] {
                        "StudyName"});
            table10.AddRow(new string[] {
                        "StudyDescription"});
            table10.AddRow(new string[] {
                        "ProtocolName"});
            table10.AddRow(new string[] {
                        "ClinicalData"});
            table10.AddRow(new string[] {
                        "SubjectData"});
            table10.AddRow(new string[] {
                        "AuditRecord"});
            table10.AddRow(new string[] {
                        "UserRef"});
            table10.AddRow(new string[] {
                        "LocationRef"});
            table10.AddRow(new string[] {
                        "DateTimeStamp"});
            table10.AddRow(new string[] {
                        "ReasonForChange"});
            table10.AddRow(new string[] {
                        "SourceID"});
            table10.AddRow(new string[] {
                        "SiteRef"});
            table10.AddRow(new string[] {
                        "Annotation"});
            table10.AddRow(new string[] {
                        "Comment"});
            table10.AddRow(new string[] {
                        "StudyEventData"});
            table10.AddRow(new string[] {
                        "FormData"});
            table10.AddRow(new string[] {
                        "ItemGroupData"});
            table10.AddRow(new string[] {
                        "ItemData"});
            table10.AddRow(new string[] {
                        "MeasurementUnitRef"});
            table10.AddRow(new string[] {
                        "ItemData"});
            table10.AddRow(new string[] {
                        "MeasurementUnitRef"});
            table10.AddRow(new string[] {
                        "ItemData"});
            table10.AddRow(new string[] {
                        "MeasurementUnitRef"});
            table10.AddRow(new string[] {
                        "StudyEventData"});
            table10.AddRow(new string[] {
                        "FormData"});
            table10.AddRow(new string[] {
                        "FormData"});
            table10.AddRow(new string[] {
                        "FormData"});
            table10.AddRow(new string[] {
                        "FormData"});
#line 132
 testRunner.Then("I verify tags structure in the XML file as displayed in the table.", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T03_Verify tags in test XML from standard input file")]
        public virtual void T03_VerifyTagsInTestXMLFromStandardInputFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T03_Verify tags in test XML from standard input file", null, ((string[])(null)));
#line 166
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 167
 testRunner.Given("I have the XML file \"SampleAddPatientODM.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 168
 testRunner.And("I have the XML file \"SampleAddPatientODM.xml\" available in the Test XML Files fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
 testRunner.Then("I compare and verify the tags in source XML file from project and target xml file" +
                    " from test folder are same.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T04_Verification of fields in a tag in a test xml file")]
        public virtual void T04_VerificationOfFieldsInATagInATestXmlFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T04_Verification of fields in a tag in a test xml file", null, ((string[])(null)));
#line 171
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 172
 testRunner.Given("I have opened the XML file \"SampleAddPatientODM.xml\" located in test folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldName",
                        "Data Value"});
            table11.AddRow(new string[] {
                        "Description",
                        "Description1"});
            table11.AddRow(new string[] {
                        "FileType",
                        "FileType1"});
            table11.AddRow(new string[] {
                        "ODMVersion",
                        "ODMVersion1"});
            table11.AddRow(new string[] {
                        "ID",
                        "ID1"});
#line 173
 testRunner.Then("I verify below fields are displayed for \"ODM\" tag in the XML file.", ((string)(null)), table11, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T05_Verification of Study field tags in test xml file")]
        public virtual void T05_VerificationOfStudyFieldTagsInTestXmlFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T05_Verification of Study field tags in test xml file", null, ((string[])(null)));
#line 180
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 181
 testRunner.Given("I have opened the XML file \"SampleAddPatientODM.xml\" located in test folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldName",
                        "Data Value"});
            table12.AddRow(new string[] {
                        "OID",
                        "OID1"});
#line 182
 testRunner.Then("I verify below fields are displayed for \"Study\" tag in the XML file.", ((string)(null)), table12, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldName",
                        "DataValue"});
            table13.AddRow(new string[] {
                        "StudyName",
                        "StudyName1"});
            table13.AddRow(new string[] {
                        "StudyDescription",
                        "StudyDescription1"});
            table13.AddRow(new string[] {
                        "ProtocolName",
                        "ProtocolName1"});
#line 185
 testRunner.And("I verify below data in the respective fields for \"GlobalVariables\" tag in the XML" +
                    " file.", ((string)(null)), table13, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T06_Verification of Clinicle data fields tag in test xml file")]
        public virtual void T06_VerificationOfClinicleDataFieldsTagInTestXmlFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T06_Verification of Clinicle data fields tag in test xml file", null, ((string[])(null)));
#line 191
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 192
 testRunner.Given("I have opened the XML file \"SampleAddPatientODM.xml\" located in test folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldName",
                        "Data Value"});
            table14.AddRow(new string[] {
                        "StudyOID",
                        "StudyOID1"});
            table14.AddRow(new string[] {
                        "MetaDataVersionOID",
                        "MetaDataVersionOID1"});
#line 193
 testRunner.Then("I verify below fields are displayed for \"ClinicleData\" tag in the XML file.", ((string)(null)), table14, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T07_Verification of Subjectdata fields tag in test xml file")]
        public virtual void T07_VerificationOfSubjectdataFieldsTagInTestXmlFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T07_Verification of Subjectdata fields tag in test xml file", null, ((string[])(null)));
#line 198
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 199
 testRunner.Given("I have opened the XML file \"SampleAddPatientODM.xml\" located in test folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldName",
                        "Data Value"});
            table15.AddRow(new string[] {
                        "SubjectKey",
                        "SubjectKey1"});
            table15.AddRow(new string[] {
                        "TransactionType",
                        "TransactionType1"});
            table15.AddRow(new string[] {
                        "SiteRef",
                        "SiteRef1"});
#line 200
 testRunner.Then("I verify below fields are displayed for \"SubjectData\" tag in the XML file.", ((string)(null)), table15, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T08_Verification of auditrecord fields tag in test xml file")]
        public virtual void T08_VerificationOfAuditrecordFieldsTagInTestXmlFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T08_Verification of auditrecord fields tag in test xml file", null, ((string[])(null)));
#line 206
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 207
 testRunner.Given("I have opened the XML file \"SampleAddPatientODM.xml\" located in test folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldName",
                        "Data Value"});
            table16.AddRow(new string[] {
                        "UserOID",
                        "UserOID1"});
            table16.AddRow(new string[] {
                        "LocationOID",
                        "LocationOID1"});
            table16.AddRow(new string[] {
                        "DateTimeStamp",
                        "DateTimeStamp1"});
            table16.AddRow(new string[] {
                        "ReasonForChange",
                        "ReasonForChange1"});
            table16.AddRow(new string[] {
                        "SourceID",
                        "SourceID1"});
#line 208
 testRunner.Then("I verify below fields are displayed for \"AuditRecord\" tag in the XML file.", ((string)(null)), table16, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T09_Verification of StudyEventData fields tag in test xml file")]
        public virtual void T09_VerificationOfStudyEventDataFieldsTagInTestXmlFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T09_Verification of StudyEventData fields tag in test xml file", null, ((string[])(null)));
#line 216
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 217
 testRunner.Given("I have opened the XML file \"SampleAddPatientODM.xml\" located in test folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldName",
                        "Data Value"});
            table17.AddRow(new string[] {
                        "StudyEventOID",
                        "StudyEventOID1"});
#line 218
 testRunner.Then("I verify below fields are displayed for \"StudyEventData\" tag in the XML file.", ((string)(null)), table17, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T10_Verification of FormData fields tag in test xml file")]
        public virtual void T10_VerificationOfFormDataFieldsTagInTestXmlFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T10_Verification of FormData fields tag in test xml file", null, ((string[])(null)));
#line 222
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 223
 testRunner.Given("I have opened the XML file \"SampleAddPatientODM.xml\" located in test folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldName",
                        "Data Value"});
            table18.AddRow(new string[] {
                        "FormOIDOID",
                        "FormOID1"});
            table18.AddRow(new string[] {
                        "TransactionType",
                        "TransactionType1"});
#line 224
 testRunner.Then("I verify below fields are displayed for \"Formdata\" tag in the XML file.", ((string)(null)), table18, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldName",
                        "DataValue"});
            table19.AddRow(new string[] {
                        "ItemGroupOID",
                        "ItemGroupOID1"});
            table19.AddRow(new string[] {
                        "TransactionType",
                        "TransactionType1"});
#line 228
 testRunner.And("I verify below data in the respective fields for \"ItemGroupData\" tag in the XML f" +
                    "ile.", ((string)(null)), table19, "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldName",
                        "DataValue"});
            table20.AddRow(new string[] {
                        "ItemOID",
                        "ItemOID1"});
            table20.AddRow(new string[] {
                        "TransactionType",
                        "TransactionType1"});
            table20.AddRow(new string[] {
                        "Value",
                        "Value1"});
#line 232
 testRunner.And("I verify below data in the respective fields for \"ItemData\" tag in the XML file.", ((string)(null)), table20, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T11_Verification of AuditRecord fields tag in test xml file")]
        public virtual void T11_VerificationOfAuditRecordFieldsTagInTestXmlFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T11_Verification of AuditRecord fields tag in test xml file", null, ((string[])(null)));
#line 238
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 239
 testRunner.Given("I have opened the XML file \"SampleAddPatientODM.xml\" located in test folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldName",
                        "Data Value"});
            table21.AddRow(new string[] {
                        "UserOID",
                        "UserOID2"});
            table21.AddRow(new string[] {
                        "LocationOID",
                        "LocationOID2"});
            table21.AddRow(new string[] {
                        "DateTimeStamp",
                        "DateTimeStamp2"});
            table21.AddRow(new string[] {
                        "ReasonForChange",
                        "ReasonForChange2"});
            table21.AddRow(new string[] {
                        "SourceID",
                        "SourceID2"});
#line 240
 testRunner.Then("I verify below fields are displayed for \"AuditRecord\" tag in the XML file.", ((string)(null)), table21, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T12_Verification of itemdata fields tag in test xml file")]
        public virtual void T12_VerificationOfItemdataFieldsTagInTestXmlFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T12_Verification of itemdata fields tag in test xml file", null, ((string[])(null)));
#line 248
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 249
 testRunner.Given("I have opened the XML file \"SampleAddPatientODM.xml\" located in test folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldName",
                        "Data Value"});
            table22.AddRow(new string[] {
                        "ItemOID",
                        "ItemOID2"});
            table22.AddRow(new string[] {
                        "TransactionType",
                        "TransactionType2"});
            table22.AddRow(new string[] {
                        "Value",
                        "Value2"});
#line 250
 testRunner.Then("I verify below fields are displayed for \"ItemData\" tag in the XML file.", ((string)(null)), table22, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T13_Verification of AuditRecord fields tag in test xml file")]
        public virtual void T13_VerificationOfAuditRecordFieldsTagInTestXmlFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T13_Verification of AuditRecord fields tag in test xml file", null, ((string[])(null)));
#line 256
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 257
 testRunner.Given("I have opened the XML file \"SampleAddPatientODM.xml\" located in test folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldName",
                        "Data Value"});
            table23.AddRow(new string[] {
                        "UserOID",
                        "UserOID3"});
            table23.AddRow(new string[] {
                        "LocationOID",
                        "LocationOID3"});
            table23.AddRow(new string[] {
                        "DateTimeStamp",
                        "DateTimeStamp3"});
            table23.AddRow(new string[] {
                        "ReasonForChange",
                        "ReasonForChange3"});
            table23.AddRow(new string[] {
                        "SourceID",
                        "SourceID3"});
#line 258
 testRunner.Then("I verify below fields are displayed for \"AuditRecord\" tag in the XML file.", ((string)(null)), table23, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T14_Verification of itemdata fields tag in test xml file")]
        public virtual void T14_VerificationOfItemdataFieldsTagInTestXmlFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T14_Verification of itemdata fields tag in test xml file", null, ((string[])(null)));
#line 266
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 267
 testRunner.Given("I have opened the XML file \"SampleAddPatientODM.xml\" located in test folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldName",
                        "Data Value"});
            table24.AddRow(new string[] {
                        "ItemOID",
                        "ItemOID3"});
            table24.AddRow(new string[] {
                        "TransactionType",
                        "TransactionType3"});
            table24.AddRow(new string[] {
                        "Value",
                        "Value3"});
#line 268
 testRunner.Then("I verify below fields are displayed for \"ItemData\" tag in the XML file.", ((string)(null)), table24, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T15_Verification of AuditRecord fields tag in test xml file")]
        public virtual void T15_VerificationOfAuditRecordFieldsTagInTestXmlFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T15_Verification of AuditRecord fields tag in test xml file", null, ((string[])(null)));
#line 274
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 275
 testRunner.Given("I have opened the XML file \"SampleAddPatientODM.xml\" located in test folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldName",
                        "Data Value"});
            table25.AddRow(new string[] {
                        "UserOID",
                        "UserOID4"});
            table25.AddRow(new string[] {
                        "LocationOID",
                        "LocationOID4"});
            table25.AddRow(new string[] {
                        "DateTimeStamp",
                        "DateTimeStamp4"});
            table25.AddRow(new string[] {
                        "ReasonForChange",
                        "ReasonForChange4"});
            table25.AddRow(new string[] {
                        "SourceID",
                        "SourceID4"});
#line 276
 testRunner.Then("I verify below fields are displayed for \"AuditRecord\" tag in the XML file.", ((string)(null)), table25, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T16_Verification of created query DCF tag in test xml file")]
        public virtual void T16_VerificationOfCreatedQueryDCFTagInTestXmlFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T16_Verification of created query DCF tag in test xml file", null, ((string[])(null)));
#line 284
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 285
 testRunner.Given("I have opened the XML file \"SampleAddPatientODM.xml\" located in test folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldName",
                        "Data Value"});
            table26.AddRow(new string[] {
                        "Fileld1",
                        "Field1"});
#line 286
 testRunner.Then("I verify below fields are displayed for \"ResponsetoFormQuestion\" tag in the XML f" +
                    "ile.", ((string)(null)), table26, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T17_Verification of created query DCF tag in test xml file")]
        public virtual void T17_VerificationOfCreatedQueryDCFTagInTestXmlFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T17_Verification of created query DCF tag in test xml file", null, ((string[])(null)));
#line 290
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 291
 testRunner.Given("I have opened the XML file \"SampleAddPatientODM.xml\" located in test folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldName",
                        "Data Value"});
            table27.AddRow(new string[] {
                        "Fileld1",
                        "Field1"});
#line 292
 testRunner.Then("I verify below fields are displayed for \"ItemChangeHistory\" tag in the XML file.", ((string)(null)), table27, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T18_Verification of created query DCF tag in test xml file")]
        public virtual void T18_VerificationOfCreatedQueryDCFTagInTestXmlFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T18_Verification of created query DCF tag in test xml file", null, ((string[])(null)));
#line 296
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 297
 testRunner.Given("I have opened the XML file \"SampleAddPatientODM.xml\" located in test folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldName",
                        "Data Value"});
            table28.AddRow(new string[] {
                        "Fileld1",
                        "Field1"});
#line 298
 testRunner.Then("I verify below fields are displayed for \"QueryCreation\" tag in the XML file.", ((string)(null)), table28, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T19_Verification of created query DCF tag in test xml file")]
        public virtual void T19_VerificationOfCreatedQueryDCFTagInTestXmlFile()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T19_Verification of created query DCF tag in test xml file", null, ((string[])(null)));
#line 302
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 303
 testRunner.Given("I have opened the XML file \"SampleAddPatientODM.xml\" located in test folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "FieldName",
                        "Data Value"});
            table29.AddRow(new string[] {
                        "Fileld1",
                        "Field1"});
#line 304
 testRunner.Then("I verify below fields are displayed for \"ChangesToQueryCategoryAndCustomFields\" t" +
                    "ag in the XML file.", ((string)(null)), table29, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T20_Select a query from Run wizard and run against a site.")]
        public virtual void T20_SelectAQueryFromRunWizardAndRunAgainstASite_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T20_Select a query from Run wizard and run against a site.", null, ((string[])(null)));
#line 308
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 309
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 310
 testRunner.And("I click Link \"Query Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 311
 testRunner.And("I click ActionPalette Item \"Run Wizard\" in \"QueryListActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 312
 testRunner.And("I enter \"AutoBuild_Form84_TxtAB84_Required\" in \"Name\" search field.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 313
 testRunner.And("I select checkbox for the query \"AutoBuild_Form84_TxtAB84_Required\" and version \"" +
                    "1.0\" from the query run wizard page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 314
 testRunner.And("I click Next button in QueryRunWizardPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 315
 testRunner.And("I click Next button in QueryRunWizardCriteriaPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 316
 testRunner.And("I select site \"01-Site\" in QueryRunWizardSitesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 317
 testRunner.And("I click Next button in QueryRunWizardSitesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 318
 testRunner.And("I click Finish button in QueryRunWizardPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 319
 testRunner.Then("I verify the success message displayed as \"Queries Successfully Queued To Run.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T21_Enter event date for Visit(Screening) Event")]
        public virtual void T21_EnterEventDateForVisitScreeningEvent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T21_Enter event date for Visit(Screening) Event", null, ((string[])(null)));
#line 321
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 322
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 323
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 324
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 325
 testRunner.When("I click event date value \"<none>\" for \"Visit (Screening)\" event", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 326
 testRunner.And("I set NeweventDate \"06/28/2018\" in EventActualDate modal.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 327
 testRunner.And("I click Save button in EventActualDatePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 328
 testRunner.Then("I verify event date value \"06/28/2018\" for \"Visit (Screening)\" event", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T22_Derivation Run wizard against a site.")]
        public virtual void T22_DerivationRunWizardAgainstASite_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T22_Derivation Run wizard against a site.", null, ((string[])(null)));
#line 330
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 331
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 332
 testRunner.And("I click Link \"Derivation Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 333
 testRunner.And("I click ActionPalette Item \"Run Wizard\" in \"DerivationMgmtListActions\" ActionPale" +
                    "tte", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 334
 testRunner.And("I select \"All Patients for Specific Sites\" radio button on Criteria to Run Deriva" +
                    "tions step.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 335
 testRunner.And("I click Next button in DerivationRunWizardCriteriaPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 336
 testRunner.And("I select site \"01-Site\" in DerivationRunWizardSitesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 337
 testRunner.And("I click Next button in DerivationRunWizardSitesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 338
 testRunner.And("I click Finish button in DerivationRunWizardPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 339
 testRunner.Then("I verify the success message displayed as \"Derivations Successfully Queued To Run" +
                    ".\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T22_Derivation Run wizard against a patient.")]
        public virtual void T22_DerivationRunWizardAgainstAPatient_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T22_Derivation Run wizard against a patient.", null, ((string[])(null)));
#line 341
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 342
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 343
 testRunner.And("I click Link \"Derivation Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 344
 testRunner.And("I click ActionPalette Item \"Run Wizard\" in \"DerivationMgmtListActions\" ActionPale" +
                    "tte", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 345
 testRunner.And("I select \"Specific Patients at a Single Site\" radio button on Criteria to Run Der" +
                    "ivations step.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 346
 testRunner.And("I click Next button in DerivationRunWizardCriteriaPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 347
 testRunner.And("I select site \"01-Site\" in DerivationRunWizardSitesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 348
 testRunner.And("I click Next button in DerivationRunWizardSitesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 349
 testRunner.And("I select patient \"01-PAT\" in DerivationRunWizardPatientsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 350
 testRunner.And("I click Next button in DerivationRunWizardPatientsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 351
 testRunner.And("I click Finish button in DerivationRunWizardPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 352
 testRunner.Then("I verify the success message displayed as \"Derivations Successfully Queued To Run" +
                    ".\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T23_Create a flag plan along with data group.")]
        public virtual void T23_CreateAFlagPlanAlongWithDataGroup_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T23_Create a flag plan along with data group.", null, ((string[])(null)));
#line 354
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 355
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 356
 testRunner.And("I click Link \"Flag Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 357
 testRunner.And("I select \"D-Review\" flag type from Flag Management page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 358
 testRunner.And("I click Add Plan button to create a new plan.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 359
 testRunner.And("I enter Plan Name as \"Dplan1\" and label as \"Dlabel1\" on Create Plan page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 360
 testRunner.And("I click \"Next\" button on Create Plan page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 361
 testRunner.And("I enter Data Group Name as \"DG1\" and Data Group label as \"DGL1\" on Create Flag Da" +
                    "ta Group page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "FormName",
                        "QuestionNum",
                        "QuestionPrompt",
                        "ProtocolVersion"});
            table30.AddRow(new string[] {
                        "Form 3",
                        "",
                        "",
                        "1.0"});
            table30.AddRow(new string[] {
                        "Form1",
                        "1.",
                        "Sample select question:",
                        "2.0"});
            table30.AddRow(new string[] {
                        "Form1",
                        "6.R.1.",
                        "Drug Name:",
                        "2.0"});
#line 362
 testRunner.And("I select checkbox for from questions in protocol version.", ((string)(null)), table30, "And ");
#line 367
 testRunner.And("I select \"Study Version(1.0)\" protocol tab.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 368
 testRunner.And("I check \"off\" Select All checkbox of Event Form Relation table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "FormName",
                        "CheckONOrOff"});
            table31.AddRow(new string[] {
                        "Form 3",
                        "On"});
#line 369
 testRunner.And("I check Select All form checkbox for the forms.", ((string)(null)), table31, "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "CheckONOrOff"});
            table32.AddRow(new string[] {
                        "Visit (Screening)",
                        "On"});
#line 372
 testRunner.And("I check Select All event checkbox for the events.", ((string)(null)), table32, "And ");
#line 375
 testRunner.And("I select \"Study Version(2.0)\" protocol tab.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName",
                        "CheckONOrOff"});
            table33.AddRow(new string[] {
                        "Fail",
                        "Fail Reason",
                        "Off"});
#line 376
 testRunner.And("I check checkbox for a form corresponding to an event.", ((string)(null)), table33, "And ");
#line 379
 testRunner.And("I click on Save & Close button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 380
 testRunner.Then("I verify the success message displayed as \"Plan saved successfully\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T25:_test the DataGroupsList")]
        public virtual void T25_TestTheDataGroupsList()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T25:_test the DataGroupsList", null, ((string[])(null)));
#line 382
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 383
 testRunner.When("I click Add Plan button to create a new plan.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 384
 testRunner.And("I enter Plan Name as \"Dplan1\" and label as \"Dlabel1\" on Create Plan page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 385
 testRunner.And("I select checkbox \"On\" for Add/Remove existing flag data group(s).", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 386
 testRunner.And("I click \"Next\" button on Add/remove existing Flag Data Groups page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 387
 testRunner.And("I click \"Back\" button on Add/remove existing Flag Data Groups page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 388
 testRunner.And("I select checkbox \"Off\" for Add new flag data group(s).", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 389
 testRunner.And("I click \"Next\" button on Add/remove existing Flag Data Groups page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "FlagDataGroup"});
            table34.AddRow(new string[] {
                        "DGL1"});
            table34.AddRow(new string[] {
                        "DGL2"});
            table34.AddRow(new string[] {
                        "Select All"});
#line 390
 testRunner.And("I select the FlagDataGroups to create the Plan", ((string)(null)), table34, "And ");
#line 395
 testRunner.And("I click \"Save & Close\" button on Add/remove existing Flag Data Groups page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 396
 testRunner.Then("I verify the success message displayed as \"Plan saved successfully\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T24:_Testing")]
        public virtual void T24_Testing()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T24:_Testing", null, ((string[])(null)));
#line 398
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 399
 testRunner.When("I select \"SD-verify\" flag type from Flag Management page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 400
 testRunner.When("I click Add Plan button to create a new plan.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 401
 testRunner.When("I enter Plan Name as \"Plan1\" and label as \"PlanL1\" on Create Plan page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 402
 testRunner.When("I click \"Next\" button on Create Plan page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 403
 testRunner.When("I enter Data Group Name as \"DG1\" and Data Group label as \"DGL1\" on Create Flag Da" +
                    "ta Group page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "FormName",
                        "QuestionNum",
                        "QuestionPrompt",
                        "ProtocolVersion"});
            table35.AddRow(new string[] {
                        "Screened",
                        "1.",
                        "Screen ID:",
                        "1.0"});
            table35.AddRow(new string[] {
                        "Enrolled",
                        "",
                        "",
                        "2.0"});
#line 404
 testRunner.When("I select checkbox for form questions in protocol version.", ((string)(null)), table35, "When ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T25_Assign Plan to Patient")]
        public virtual void T25_AssignPlanToPatient()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T25_Assign Plan to Patient", null, ((string[])(null)));
#line 411
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 412
 testRunner.When("I select the \"Assign Plan to Patient\" link on the Manage Plans & Flag Data Groups" +
                    " page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 413
 testRunner.When("I select Select-All checkbox for the Select Sites(s) dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 414
 testRunner.When("I click \"Get Patients\" button on Assign Plan to Patient page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 415
 testRunner.When("I select Select All checkbox \"on\" for the Assign Plan grid.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID",
                        "CheckONOrOff"});
            table36.AddRow(new string[] {
                        "002-Patient",
                        "Off"});
            table36.AddRow(new string[] {
                        "002-Patient",
                        "On"});
#line 416
 testRunner.And("I select checkbox for the below patients.", ((string)(null)), table36, "And ");
#line 420
 testRunner.When("I click \"Next\" button on Assign Plan to Patient page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 421
 testRunner.When("I select \"None (0%)\" in the Select Plan dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 422
 testRunner.When("I select \"Entry correction\" in Reason for change dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 423
 testRunner.When("I enter text \"Textupdate\" in Additional Notes text box.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 424
 testRunner.When("I click \"Save\" button on Assign Plan to Patient page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 425
 testRunner.Then("I verify the success message displayed as \"Plan assigned to Patient(s) job create" +
                    "d successfully.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T28_Assign Plan to Site")]
        public virtual void T28_AssignPlanToSite()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T28_Assign Plan to Site", null, ((string[])(null)));
#line 427
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 428
 testRunner.When("I select the \"Assign Plan to Site\" link on the Manage Plans & Flag Data Groups pa" +
                    "ge.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 429
 testRunner.And("I select Select All checkbox \"On\" for the Assign Plan grid.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Sites",
                        "CheckONOrOff"});
            table37.AddRow(new string[] {
                        "Test",
                        "Off"});
            table37.AddRow(new string[] {
                        "Test",
                        "On"});
#line 430
 testRunner.And("I select checkbox for the below Sites.", ((string)(null)), table37, "And ");
#line 434
 testRunner.And("I click \"Next\" button on Assign Plan to Site page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 435
 testRunner.When("I select \"None (0%)\" in the Select Plan dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 436
 testRunner.When("I select \"Entry correction\" in Reason for change dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 437
 testRunner.When("I enter text \"Textupdate\" in Additional Notes text box.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 438
 testRunner.When("I click \"Save\" button on Assign Plan to Site page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 439
 testRunner.Then("I verify the success message displayed as \"Plan assigned to Site(s) successfully." +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T29_Assign Plan to Study")]
        public virtual void T29_AssignPlanToStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T29_Assign Plan to Study", null, ((string[])(null)));
#line 441
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 442
 testRunner.When("I select the \"Assign Plan to Study\" link on the Manage Plans & Flag Data Groups p" +
                    "age.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 443
 testRunner.And("I select \"None (0%)\" in the Select Plan dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 444
 testRunner.When("I select \"Entry correction\" in Reason for change dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 445
 testRunner.When("I enter text \"Textupdate\" in Additional Notes text box.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 446
 testRunner.When("I click \"Save\" button on Assign Plan to Study page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 447
 testRunner.Then("I verify the success message displayed as \"Plan assigned successfully.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T30 Identify the icon for the flag")]
        public virtual void T30IdentifyTheIconForTheFlag()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T30 Identify the icon for the flag", null, ((string[])(null)));
#line 449
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 450
 testRunner.Then("I see flag \"SD-Verify\" icon \"flag_required_set.gif\" against question \"Sample text" +
                    " question:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update ODM Endpoint URL")]
        public virtual void UpdateODMEndpointURL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update ODM Endpoint URL", null, ((string[])(null)));
#line 452
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 453
  testRunner.When("I update the endpoint URL under Patient Data Eventing tab.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Freeze Multiple CRFs")]
        public virtual void FreezeMultipleCRFs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Freeze Multiple CRFs", null, ((string[])(null)));
#line 454
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName"});
            table38.AddRow(new string[] {
                        "Visit (Screening)",
                        "Form1"});
            table38.AddRow(new string[] {
                        "Visit (Week 3)",
                        "Vital Signs"});
#line 455
testRunner.When("I select Freeze checkbox for below forms in FreezeCRFsPage", ((string)(null)), table38, "When ");
#line 459
testRunner.When("I click on Select All button in RequestSignaturePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 460
testRunner.When("I click on Accept All button in SignCasebookPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("ReferenceRangeIds List")]
        public virtual void ReferenceRangeIdsList()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("ReferenceRangeIds List", null, ((string[])(null)));
#line 462
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReferenceRangeID"});
            table39.AddRow(new string[] {
                        ""});
#line 463
 testRunner.Then("I see the reference range ids in the Reference Range Table.", ((string)(null)), table39, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

