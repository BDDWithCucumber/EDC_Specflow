// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.TempFeatures
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("WebserviceScenarios")]
    public partial class WebserviceScenariosFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "WebserviceScenarios.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "WebserviceScenarios", "\tIn order to avoid silly mistakes\r\n\tAs a math idiot\r\n\tI want to be told the sum o" +
                    "f two numbers", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add a new patient")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        public virtual void AddANewPatient()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add a new patient", null, new string[] {
                        "mytag"});
#line 7
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteIDData",
                        "ScreenIDData",
                        "PatientInitialsData",
                        "ScreenedDateData"});
            table1.AddRow(new string[] {
                        "01",
                        "114",
                        "PAT",
                        "06/13/2018"});
#line 8
 testRunner.When("I add a new patient using AddNewPatient webservice with below data.", ((string)(null)), table1, "When ");
#line 11
 testRunner.Then("The response should contain success status code as \"200\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add a Patient using CDISC service")]
        public virtual void AddAPatientUsingCDISCService()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add a Patient using CDISC service", null, ((string[])(null)));
#line 13
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ODMDATA",
                        "AddNewPatientsDATA"});
            table2.AddRow(new string[] {
                        "AddPatientUsingCDISC1.xml",
                        "true"});
#line 14
 testRunner.When("I add a new patient using ConsumeODMStrAddNewPatients webservice with below data " +
                    "and odmfile.", ((string)(null)), table2, "When ");
#line 17
 testRunner.Then("The response should contain success status code as \"200\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get Metadata from PatientAndOperationalDataEventing webservice")]
        public virtual void GetMetadataFromPatientAndOperationalDataEventingWebservice()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get Metadata from PatientAndOperationalDataEventing webservice", null, ((string[])(null)));
#line 19
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "StudyNameData",
                        "ProtocolVersionData",
                        "ResponseFile"});
            table3.AddRow(new string[] {
                        "Test3210_Pscript",
                        "1.0",
                        "testMetaData2.xml"});
#line 20
 testRunner.When("I save the Study meta data exported from GetStudyMetaDataODM132 method under Pati" +
                    "entAndOperationalDataEventing webservice", ((string)(null)), table3, "When ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add Form Data using CDISC webservice ConsumeODM1_StrTransactional method")]
        public virtual void AddFormDataUsingCDISCWebserviceConsumeODM1_StrTransactionalMethod()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add Form Data using CDISC webservice ConsumeODM1_StrTransactional method", null, ((string[])(null)));
#line 26
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransactionTypeData",
                        "AddNewPatientsData",
                        "ODMDATA"});
            table4.AddRow(new string[] {
                        "Transactional",
                        "false",
                        "UpdateItemDataCDISC1.xml"});
#line 27
 testRunner.When("I add item data using ConsumeODMStrTransactional webservice with below data and o" +
                    "dmfile.", ((string)(null)), table4, "When ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add a Form level DCF using DCF WebSerive")]
        public virtual void AddAFormLevelDCFUsingDCFWebSerive()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add a Form level DCF using DCF WebSerive", null, ((string[])(null)));
#line 31
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "StudyNameData",
                        "SubjectKeyData",
                        "PatientIdentityData",
                        "SiteIdData",
                        "EventNameData",
                        "FormNameData",
                        "QueryDescriptionData",
                        "ActionRequestData",
                        "DCFStatusData",
                        "CustomProperty1ItemNameData",
                        "CustomProperty2ItemNameData",
                        "QueryCategoryData",
                        "CategoryStatusData"});
            table5.AddRow(new string[] {
                        "Test3210_FoStPsc",
                        "01-Pat",
                        "01-Pat",
                        "01",
                        "Visit (Week 2)",
                        "Form1",
                        "TestQueryDesc",
                        "ActionReq",
                        "Draft",
                        "",
                        "",
                        "",
                        ""});
#line 32
 testRunner.When("I add a Form Level DCF using DCF CreateFormLevelDCF webservice with below data.", ((string)(null)), table5, "When ");
#line 35
 testRunner.Then("The response should contain success status code as \"200\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Add Item level DCF using DCF WebService")]
        public virtual void AddItemLevelDCFUsingDCFWebService()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Add Item level DCF using DCF WebService", null, ((string[])(null)));
#line 36
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "StudyNameData",
                        "SubjectKeyData",
                        "PatientIdentityData",
                        "SiteIdData",
                        "EventNameData",
                        "FormNameData",
                        "ItemNameData",
                        "DataRowData",
                        "QueryDescriptionData",
                        "ActionRequestData",
                        "DCFStatusData",
                        "CustomProperty1ItemNameTestData",
                        "CustomProperty2ItemNameTestData",
                        "QueryCategoryData",
                        "CategoryStatusData"});
            table6.AddRow(new string[] {
                        "Test3210_Pscript",
                        "001-Patient",
                        "001-Patient",
                        "01",
                        "Visit (Week 2)",
                        "Form1",
                        "Text",
                        "1",
                        "TestQueryDesc",
                        "ActionReq",
                        "Sent",
                        "",
                        "",
                        "Coding",
                        "Yes"});
#line 37
 testRunner.When("I add a Item Level DCF using DCF CreateItemLevelDCF webservice with below data.", ((string)(null)), table6, "When ");
#line 40
 testRunner.Then("The response should contain success status code as \"200\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Update Item data of an existing patient")]
        public virtual void UpdateItemDataOfAnExistingPatient()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Update Item data of an existing patient", null, ((string[])(null)));
#line 42
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransactionTypeData",
                        "AddNewPatientsData",
                        "ODMDATA"});
            table7.AddRow(new string[] {
                        "Transactional",
                        "false",
                        "01_PAT_LabForm2_Data_CDISCUpdate.xml"});
#line 43
 testRunner.When("I update existing item data of a patient \"01-PAT\" using ConsumeODMStrTransactiona" +
                    "l webservice with below data and odmfile.", ((string)(null)), table7, "When ");
#line 46
 testRunner.Then("The response should contain success status code as \"200\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Get the Labs details")]
        public virtual void GetTheLabsDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Get the Labs details", null, ((string[])(null)));
#line 48
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 49
 testRunner.When("I Get the Lab details from API.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
 testRunner.Then("The response should contain success status code as \"200\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

