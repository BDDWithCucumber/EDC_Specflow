// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.Autobuild
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Autobuild_CodelistChange")]
    public partial class Autobuild_CodelistChangeFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Autobuild_CodelistChange_Obselete.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Autobuild_CodelistChange", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("001_Login to Datalabs")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void _001_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("001_Login to Datalabs", null, new string[] {
                        "ObjectiveEvidence"});
#line 5
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("002_Delete the current study")]
        public virtual void _002_DeleteTheCurrentStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("002_Delete the current study", null, ((string[])(null)));
#line 9
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 10
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("003_Publish the study")]
        public virtual void _003_PublishTheStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("003_Publish the study", null, ((string[])(null)));
#line 13
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 14
 testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
 testRunner.And("I upload a study \"AutobuildEnhancementStudies\\CodelistChange\\Test4500_GREAT_Base." +
                    "zip\" with study label \"TestBase\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.Then("I see study label \"Test4500_GREAT_FORMSTATUS\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("004_Add Site 01-Site and assign it to testadmin user")]
        public virtual void _004_AddSite01_SiteAndAssignItToTestadminUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("004_Add Site 01-Site and assign it to testadmin user", null, ((string[])(null)));
#line 18
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 19
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteId",
                        "SiteName",
                        "Address1",
                        "Address2",
                        "Address3",
                        "Address4",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "SiteStatus",
                        "DCFWorkflow",
                        "ExternalSource",
                        "ExternalId"});
            table1.AddRow(new string[] {
                        "01",
                        "Site",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        "-"});
#line 21
 testRunner.And("I enter sites details and Save", ((string)(null)), table1, "And ");
#line 24
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.Then("I see Site details page for \"01-Site\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("005_Add patient 001-Patient from Datalabs UI")]
        public virtual void _005_AddPatient001_PatientFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("005_Add patient 001-Patient from Datalabs UI", null, ((string[])(null)));
#line 29
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 30
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 31
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table2.AddRow(new string[] {
                        "001",
                        "Patient",
                        "11/05/2019"});
#line 32
 testRunner.When("I add patient with below details.", ((string)(null)), table2, "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table3.AddRow(new string[] {
                        "001-Patient"});
#line 35
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("006_Select the Patient 001-Patient, Open and save the form AB_WithOneKeySequenceC" +
            "olumn form under Visit(Screening)")]
        public virtual void _006_SelectThePatient001_PatientOpenAndSaveTheFormAB_WithOneKeySequenceColumnFormUnderVisitScreening()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("006_Select the Patient 001-Patient, Open and save the form AB_WithOneKeySequenceC" +
                    "olumn form under Visit(Screening)", null, ((string[])(null)));
#line 39
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 40
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 41
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.When("I select \"001-Patient\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 43
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"AB_WithOneKeySequenceColumn\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.And("I select \"Checkout\" button on \"AB_WithOneKeySequenceColumn\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
 testRunner.And("I click on \"Save & Close\" button on \"AB_WithOneKeySequenceColumn\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("007_Select the Patient 001-Patient, Open and save the form AB_WithTwoKeySequenceC" +
            "olumns form under Visit(Screening)")]
        public virtual void _007_SelectThePatient001_PatientOpenAndSaveTheFormAB_WithTwoKeySequenceColumnsFormUnderVisitScreening()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("007_Select the Patient 001-Patient, Open and save the form AB_WithTwoKeySequenceC" +
                    "olumns form under Visit(Screening)", null, ((string[])(null)));
#line 49
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 50
 testRunner.When("I expand \"Visit (Week 2)\" to select and open \"AB_WithTwoKeySequenceColumns\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
 testRunner.And("I select \"Checkout\" button on \"AB_WithTwoKeySequenceColumns\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
 testRunner.And("I click on \"Save & Close\" button on \"AB_WithTwoKeySequenceColumns\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("007_Select the Patient 001-Patient, Open and save the form AB_WithThreeKeySequenc" +
            "eColumns_4 form under Visit(Screening)")]
        public virtual void _007_SelectThePatient001_PatientOpenAndSaveTheFormAB_WithThreeKeySequenceColumns_4FormUnderVisitScreening()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("007_Select the Patient 001-Patient, Open and save the form AB_WithThreeKeySequenc" +
                    "eColumns_4 form under Visit(Screening)", null, ((string[])(null)));
#line 56
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 57
 testRunner.When("I expand \"Visit (Week 2)\" to select and open \"AB_WithThreeKeySequenceColumns_4\" C" +
                    "RF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
 testRunner.And("I select \"Checkout\" button on \"AB_WithThreeKeySequenceColumns_4\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.And("I click on \"Save & Close\" button on \"AB_WithThreeKeySequenceColumns_4\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("008_Perform major study update, in which key sequence question codelist is change" +
            "d, renamed")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void _008_PerformMajorStudyUpdateInWhichKeySequenceQuestionCodelistIsChangedRenamed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("008_Perform major study update, in which key sequence question codelist is change" +
                    "d, renamed", null, new string[] {
                        "ObjectiveEvidence"});
#line 64
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 65
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
 testRunner.And("I upload study \"AutobuildEnhancementStudies\\CodelistChange\\Test4500_GREAT_Update." +
                    "zip\" with Label \"CodelistChange\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.Then("I see notes \"Note: Major changes have been detected to the study design. Patient " +
                    "migration will be required.\" in StudyVersionPropertiesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("009_Publish Study with patient migration")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void _009_PublishStudyWithPatientMigration()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("009_Publish Study with patient migration", null, new string[] {
                        "ObjectiveEvidence"});
#line 77
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 78
 testRunner.When("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 79
 testRunner.And("I select \"Yes\" to reevaluate \"Change SD-Verify Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
 testRunner.And("I select \"Yes\" to reevaluate \"Change D-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
 testRunner.And("I select \"Yes\" to reevaluate \"Change M-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.And("I select \"Yes\" to reevaluate \"Change Signatures?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
 testRunner.And("I select patient migration option \"Migrate all patients\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table4.AddRow(new string[] {
                        "Migration of Site 01 for Study file (Add) - complete. 1 out of 1 patients migrate" +
                            "d successfully. To review see migration report."});
#line 87
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("010_Verify data in the form AB_WithOneKeySequenceColumn of patinet 001-Patient")]
        public virtual void _010_VerifyDataInTheFormAB_WithOneKeySequenceColumnOfPatinet001_Patient()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("010_Verify data in the form AB_WithOneKeySequenceColumn of patinet 001-Patient", null, ((string[])(null)));
#line 91
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 92
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 93
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.When("I select \"001-Patient\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 95
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"AB_WithOneKeySequenceColumn\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "QuestionStatus",
                        "RowButtonToClick"});
            table5.AddRow(new string[] {
                        "1",
                        "BodyRegion",
                        "Not Applicable",
                        "Text",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "1",
                        "Subjects",
                        "",
                        "Radio",
                        "Unsaved",
                        ""});
            table5.AddRow(new string[] {
                        "1",
                        "Measurement",
                        "",
                        "Checkbox",
                        "Unsaved",
                        ""});
            table5.AddRow(new string[] {
                        "1",
                        "Text",
                        "",
                        "Textbox",
                        "Unsaved",
                        ""});
            table5.AddRow(new string[] {
                        "1",
                        "Integer",
                        "",
                        "Textbox",
                        "Unsaved",
                        ""});
            table5.AddRow(new string[] {
                        "1",
                        "WT_Units",
                        "",
                        "Listbox",
                        "Unsaved",
                        ""});
            table5.AddRow(new string[] {
                        "1",
                        "Date",
                        "",
                        "Textbox",
                        "",
                        "OK"});
            table5.AddRow(new string[] {
                        "2",
                        "BodyRegion",
                        "Red",
                        "Text",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "2",
                        "Subjects",
                        "",
                        "Radio",
                        "Unsaved",
                        ""});
            table5.AddRow(new string[] {
                        "2",
                        "Measurement",
                        "",
                        "Checkbox",
                        "Unsaved",
                        ""});
            table5.AddRow(new string[] {
                        "2",
                        "Text",
                        "",
                        "Textbox",
                        "Unsaved",
                        ""});
            table5.AddRow(new string[] {
                        "2",
                        "Integer",
                        "",
                        "Textbox",
                        "Unsaved",
                        ""});
            table5.AddRow(new string[] {
                        "2",
                        "WT_Units",
                        "",
                        "Listbox",
                        "Unsaved",
                        ""});
            table5.AddRow(new string[] {
                        "2",
                        "Date",
                        "",
                        "Textbox",
                        "",
                        "OK"});
            table5.AddRow(new string[] {
                        "3",
                        "BodyRegion",
                        "Blue",
                        "Text",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "3",
                        "Subjects",
                        "",
                        "Radio",
                        "Unsaved",
                        ""});
            table5.AddRow(new string[] {
                        "3",
                        "Measurement",
                        "",
                        "Checkbox",
                        "Unsaved",
                        ""});
            table5.AddRow(new string[] {
                        "3",
                        "Text",
                        "",
                        "Textbox",
                        "Unsaved",
                        ""});
            table5.AddRow(new string[] {
                        "3",
                        "Integer",
                        "",
                        "Textbox",
                        "Unsaved",
                        ""});
            table5.AddRow(new string[] {
                        "3",
                        "WT_Units",
                        "",
                        "Listbox",
                        "Unsaved",
                        ""});
            table5.AddRow(new string[] {
                        "3",
                        "Date",
                        "",
                        "Textbox",
                        "",
                        "OK"});
            table5.AddRow(new string[] {
                        "4",
                        "BodyRegion",
                        "Green",
                        "Text",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "4",
                        "Subjects",
                        "",
                        "Radio",
                        "Unsaved",
                        ""});
            table5.AddRow(new string[] {
                        "4",
                        "Measurement",
                        "",
                        "Checkbox",
                        "Unsaved",
                        ""});
            table5.AddRow(new string[] {
                        "4",
                        "Text",
                        "",
                        "Textbox",
                        "Unsaved",
                        ""});
            table5.AddRow(new string[] {
                        "4",
                        "Integer",
                        "",
                        "Textbox",
                        "Unsaved",
                        ""});
            table5.AddRow(new string[] {
                        "4",
                        "WT_Units",
                        "",
                        "Listbox",
                        "Unsaved",
                        ""});
            table5.AddRow(new string[] {
                        "4",
                        "Date",
                        "",
                        "Textbox",
                        "",
                        "OK"});
#line 96
 testRunner.Then("I verify below \"AutobuildFixed with key sequence 1:\" table questions data in the " +
                    "CRF.", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("011_Verify ItemHistory of a table question")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void _011_VerifyItemHistoryOfATableQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("011_Verify ItemHistory of a table question", null, new string[] {
                        "ObjectiveEvidence"});
#line 128
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 129
 testRunner.When("I expand row \"1\" of table \"AutobuildFixed with key sequence 1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 130
 testRunner.And("I click \"changeHistory.gif\" icon of a question \"BodyRegion\" of table \"AutobuildFi" +
                    "xed with key sequence 1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table6.AddRow(new string[] {
                        "System (System\\System)",
                        "Hair",
                        "Reason: Initial Entry\\r\nNotes: Study Design Change"});
#line 131
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("012_Verify table history for table AutobuildFixed with key sequence 1: of 001-Pat" +
            "ient")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US53883,")]
        [NUnit.Framework.CategoryAttribute("US55962")]
        public virtual void _012_VerifyTableHistoryForTableAutobuildFixedWithKeySequence1Of001_Patient()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("012_Verify table history for table AutobuildFixed with key sequence 1: of 001-Pat" +
                    "ient", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US53883,",
                        "US55962"});
#line 136
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 137
    testRunner.When("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 138
 testRunner.And("I invoke table hisotry for table \"AutobuildFixed with key sequence 1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Action",
                        "AdditionalNotes"});
            table7.AddRow(new string[] {
                        "System (System\\System)",
                        "Row #4: Added",
                        "Study design change"});
            table7.AddRow(new string[] {
                        "System (System\\System)",
                        "Row #3: Added",
                        "Study design change"});
            table7.AddRow(new string[] {
                        "System (System\\System)",
                        "Row #2: Added",
                        "Study design change"});
            table7.AddRow(new string[] {
                        "System (System\\System)",
                        "Row #1: Added",
                        "Study design change"});
            table7.AddRow(new string[] {
                        "System (System\\System)",
                        "Row #7 Deleted",
                        "Study design change"});
            table7.AddRow(new string[] {
                        "System (System\\System)",
                        "Row #6 Deleted",
                        "Study design change"});
            table7.AddRow(new string[] {
                        "System (System\\System)",
                        "Row #5 Deleted",
                        "Study design change"});
            table7.AddRow(new string[] {
                        "System (System\\System)",
                        "Row #4 Deleted",
                        "Study design change"});
            table7.AddRow(new string[] {
                        "System (System\\System)",
                        "Row #3 Deleted",
                        "Study design change"});
            table7.AddRow(new string[] {
                        "System (System\\System)",
                        "Row #2 Deleted",
                        "Study design change"});
            table7.AddRow(new string[] {
                        "System (System\\System)",
                        "Row #1 Deleted",
                        "Study design change"});
            table7.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "Row # 7: Added",
                        ""});
            table7.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "Row # 6: Added",
                        ""});
            table7.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "Row # 5: Added",
                        ""});
            table7.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "Row # 4: Added",
                        ""});
            table7.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "Row # 3: Added",
                        ""});
            table7.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "Row # 2: Added",
                        ""});
            table7.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "Row # 1: Added",
                        ""});
#line 139
    testRunner.Then("I see ordered table history for table \"AutobuildFixed with key sequence 1:\" in Ta" +
                    "bleHistoryModalDialog", ((string)(null)), table7, "Then ");
#line 159
 testRunner.And("I close TableHistoryModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("013_Verify form status for the form AB_WithOneKeySequenceColumn of 001-Patient")]
        public virtual void _013_VerifyFormStatusForTheFormAB_WithOneKeySequenceColumnOf001_Patient()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("013_Verify form status for the form AB_WithOneKeySequenceColumn of 001-Patient", null, ((string[])(null)));
#line 161
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 162
 testRunner.When("I click breadcrumb \"001-Patient\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "CRF",
                        "FormStatus"});
            table8.AddRow(new string[] {
                        "AB_WithOneKeySequenceColumn",
                        "PartialSubmit"});
#line 163
 testRunner.Then("I see form details of event \"Visit (Week 2)\" in PatientCaseBookPage", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("014_Verify data in the form AB_WithTwoKeySequenceColumns of patinet 001-Patient")]
        public virtual void _014_VerifyDataInTheFormAB_WithTwoKeySequenceColumnsOfPatinet001_Patient()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("014_Verify data in the form AB_WithTwoKeySequenceColumns of patinet 001-Patient", null, ((string[])(null)));
#line 168
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 169
 testRunner.When("I expand \"Visit (Week 2)\" to select and open \"AB_WithTwoKeySequenceColumns\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "QuestionStatus",
                        "RowButtonToClick"});
            table9.AddRow(new string[] {
                        "1",
                        "Gender",
                        "[Blank]",
                        "Text",
                        "",
                        ""});
            table9.AddRow(new string[] {
                        "1",
                        "DrugList",
                        "Tylenol",
                        "Text",
                        "",
                        ""});
#line 170
 testRunner.Then("I verify below \"AutobuildFixed with key sequence 2_1:\" table questions data in th" +
                    "e CRF.", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

