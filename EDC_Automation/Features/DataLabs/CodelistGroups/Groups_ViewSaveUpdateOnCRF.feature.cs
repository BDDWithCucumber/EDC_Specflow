// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.CodelistGroups
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Groups_ViewSaveUpdateOnCRF")]
    public partial class Groups_ViewSaveUpdateOnCRFFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Groups_ViewSaveUpdateOnCRF.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Groups_ViewSaveUpdateOnCRF", "\t\tAble to see codelist items on eCRF based on codelist groups.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01_Login to Datalabs")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void _01_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_Login to Datalabs", null, new string[] {
                        "ObjectiveEvidence"});
#line 5
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02_Delete a study")]
        public virtual void _02_DeleteAStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02_Delete a study", null, ((string[])(null)));
#line 9
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 10
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("03_Publish a study")]
        public virtual void _03_PublishAStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03_Publish a study", null, ((string[])(null)));
#line 13
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 14
 testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
 testRunner.And("I upload a study \"TestCGstudy_FlatandTable-Auto1.Zip\" with study label \"TestCGstu" +
                    "dy_FlatandTable-Auto1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
 testRunner.Then("I see study label \"Test3210\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("04_Add Sites")]
        public virtual void _04_AddSites()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04_Add Sites", null, ((string[])(null)));
#line 18
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 19
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteId",
                        "SiteName",
                        "Address1",
                        "Address2",
                        "Address3",
                        "Address4",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "SiteStatus",
                        "DCFWorkflow",
                        "ExternalSource",
                        "ExternalId"});
            table1.AddRow(new string[] {
                        "01",
                        "Site",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        "-"});
#line 21
 testRunner.And("I enter sites details and Save", ((string)(null)), table1, "And ");
#line 24
 testRunner.Then("I see site \"01-Site\" in SiteManagementPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("05_Assign testadmin testadmin user to site 01")]
        public virtual void _05_AssignTestadminTestadminUserToSite01()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05_Assign testadmin testadmin user to site 01", null, ((string[])(null)));
#line 26
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 27
 testRunner.When("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And("I click breadcrumb \"Site Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("06_Navigate to Patients tab and select a site and add patient(s).")]
        public virtual void _06_NavigateToPatientsTabAndSelectASiteAndAddPatientS_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06_Navigate to Patients tab and select a site and add patient(s).", null, ((string[])(null)));
#line 32
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 33
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 34
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table2.AddRow(new string[] {
                        "01",
                        "PAT",
                        "12/06/2017"});
            table2.AddRow(new string[] {
                        "02",
                        "PAT",
                        "12/06/2017"});
            table2.AddRow(new string[] {
                        "03",
                        "PAT",
                        "12/06/2017"});
#line 35
 testRunner.When("I add patient with below details.", ((string)(null)), table2, "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table3.AddRow(new string[] {
                        "01-PAT"});
            table3.AddRow(new string[] {
                        "02-PAT"});
            table3.AddRow(new string[] {
                        "03-PAT"});
#line 40
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("07_Select and enroll a patient.")]
        public virtual void _07_SelectAndEnrollAPatient_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("07_Select and enroll a patient.", null, ((string[])(null)));
#line 46
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 47
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 48
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table4.AddRow(new string[] {
                        "01",
                        "12/06/2017",
                        "Yes"});
#line 50
 testRunner.When("I enroll the patient \"01-PAT\" with below data.", ((string)(null)), table4, "When ");
#line 53
 testRunner.Then("I see patient \"01-PAT\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("08_Select a site and a patient")]
        public virtual void _08_SelectASiteAndAPatient()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("08_Select a site and a patient", null, ((string[])(null)));
#line 55
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 56
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 57
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 59
 testRunner.Then("I see Patient details page for \"01-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("09_Flat Questions_Verify Listbox and radio items of and un-submitted CRF and with" +
            "out checking out.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("US40602.1")]
        public virtual void _09_FlatQuestions_VerifyListboxAndRadioItemsOfAndUn_SubmittedCRFAndWithoutCheckingOut_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("09_Flat Questions_Verify Listbox and radio items of and un-submitted CRF and with" +
                    "out checking out.", null, new string[] {
                        "ObjectiveEvidence",
                        "US40602.1"});
#line 62
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 63
 testRunner.Given("I expand \"Visit (Week 3)\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table5.AddRow(new string[] {
                        "[Blank]"});
            table5.AddRow(new string[] {
                        "Asian"});
            table5.AddRow(new string[] {
                        "Black"});
            table5.AddRow(new string[] {
                        "White"});
#line 64
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"Race:\" on the CRF.", ((string)(null)), table5, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table6.AddRow(new string[] {
                        "Male"});
            table6.AddRow(new string[] {
                        "Female"});
#line 70
 testRunner.And("I verify below \"RadioGroup\" items are displayed in \"Gender:\" on the CRF.", ((string)(null)), table6, "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table7.AddRow(new string[] {
                        "Hispanic American"});
            table7.AddRow(new string[] {
                        "Native American"});
            table7.AddRow(new string[] {
                        "Other"});
#line 74
 testRunner.And("I Verify below \"ListBox\" items are not displayed in \"Race:\" on the CRF.", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table8.AddRow(new string[] {
                        "[Blank]"});
#line 79
 testRunner.And("I verify below \"RadioGroup\" items are not displayed in \"Gender:\" on the CRF.", ((string)(null)), table8, "And ");
#line 82
 testRunner.And("I click on \"Cancel\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("11_Select a Form with only flat questions and enter data in CRF.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("US40602.1")]
        public virtual void _11_SelectAFormWithOnlyFlatQuestionsAndEnterDataInCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("11_Select a Form with only flat questions and enter data in CRF.", null, new string[] {
                        "ObjectiveEvidence",
                        "US40602.1"});
#line 91
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 92
 testRunner.Given("I expand \"Visit (Week 3)\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 93
 testRunner.When("I click \"Checkout\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table9.AddRow(new string[] {
                        "[Blank]"});
            table9.AddRow(new string[] {
                        "Asian"});
            table9.AddRow(new string[] {
                        "Black"});
            table9.AddRow(new string[] {
                        "White"});
#line 94
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"Race:\" on the CRF.", ((string)(null)), table9, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table10.AddRow(new string[] {
                        "Male"});
            table10.AddRow(new string[] {
                        "Female"});
#line 100
 testRunner.And("I verify below \"RadioGroup\" items are displayed in \"Gender:\" on the CRF.", ((string)(null)), table10, "And ");
#line 104
 testRunner.And("I click on \"Cancel\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("12_Select a Form with only flat questions and enter data in CRF.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("US40602.1")]
        public virtual void _12_SelectAFormWithOnlyFlatQuestionsAndEnterDataInCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("12_Select a Form with only flat questions and enter data in CRF.", null, new string[] {
                        "ObjectiveEvidence",
                        "US40602.1"});
#line 107
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 108
 testRunner.Given("I expand \"Visit (Week 3)\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 109
 testRunner.When("I click \"Checkout\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table11.AddRow(new string[] {
                        "Hispanic American"});
            table11.AddRow(new string[] {
                        "Native American"});
            table11.AddRow(new string[] {
                        "Other"});
#line 110
 testRunner.Then("I Verify below \"ListBox\" items are not displayed in \"Race:\" on the CRF.", ((string)(null)), table11, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table12.AddRow(new string[] {
                        "[Blank]"});
#line 115
 testRunner.And("I verify below \"RadioGroup\" items are not displayed in \"Gender:\" on the CRF.", ((string)(null)), table12, "And ");
#line 118
 testRunner.And("I click on \"Cancel\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("13_Table Questions_Verify available listbox and radio items of unsubmitted CRF.")]
        public virtual void _13_TableQuestions_VerifyAvailableListboxAndRadioItemsOfUnsubmittedCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("13_Table Questions_Verify available listbox and radio items of unsubmitted CRF.", null, ((string[])(null)));
#line 120
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 121
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 122
 testRunner.When("I click \"Checkout\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 123
 testRunner.And("I click on \"Add New Row\" button in \"Table:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table13.AddRow(new string[] {
                        "Not Applicable"});
            table13.AddRow(new string[] {
                        "Red"});
            table13.AddRow(new string[] {
                        "Blue"});
            table13.AddRow(new string[] {
                        "Green"});
#line 124
 testRunner.Then("I verify below \"ListBox\" items are displayed for \"Color\" question in row \"1\" of \"" +
                    "Table:\" table.", ((string)(null)), table13, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table14.AddRow(new string[] {
                        "[Blank]"});
            table14.AddRow(new string[] {
                        "Sitting"});
            table14.AddRow(new string[] {
                        "Standing"});
#line 130
 testRunner.And("I verify below \"RadioGroup\" items are displayed for \"Position\" question in row \"1" +
                    "\" of \"Table:\" table.", ((string)(null)), table14, "And ");
#line 135
 testRunner.And("I click on \"Cancel\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("14_Table Questions_Verify unavailable listbox and radio items of unsubmitted CRF." +
            "")]
        public virtual void _14_TableQuestions_VerifyUnavailableListboxAndRadioItemsOfUnsubmittedCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("14_Table Questions_Verify unavailable listbox and radio items of unsubmitted CRF." +
                    "", null, ((string[])(null)));
#line 137
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 138
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 139
 testRunner.When("I click \"Checkout\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 140
 testRunner.And("I click on \"Add New Row\" button in \"Table:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table15.AddRow(new string[] {
                        "Supine"});
#line 141
 testRunner.Then("I verify below \"RadioGroup\" items are not displayed for \"Position\" question in ro" +
                    "w \"1\" of \"Table:\" table.", ((string)(null)), table15, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table16.AddRow(new string[] {
                        "Yellow"});
            table16.AddRow(new string[] {
                        "White"});
#line 144
 testRunner.And("I verify below \"ListBox\" items are not displayed for \"Color\" question in row \"1\" " +
                    "of \"Table:\" table.", ((string)(null)), table16, "And ");
#line 148
 testRunner.And("I click on \"Cancel\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("15_Select a Form with only flat questions and enter data in CRF.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("US40602.1")]
        public virtual void _15_SelectAFormWithOnlyFlatQuestionsAndEnterDataInCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("15_Select a Form with only flat questions and enter data in CRF.", null, new string[] {
                        "ObjectiveEvidence",
                        "US40602.1"});
#line 151
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 152
 testRunner.Given("I expand \"Visit (Week 3)\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 153
 testRunner.When("I click \"Checkout\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table17.AddRow(new string[] {
                        "Date of Birth:",
                        "01/01/1980",
                        "TextBox"});
            table17.AddRow(new string[] {
                        "Gender:",
                        "Male",
                        "Radio"});
            table17.AddRow(new string[] {
                        "Race:",
                        "Asian",
                        "ListBox"});
            table17.AddRow(new string[] {
                        "If Race is Asian, is Patient of Japanese Ancestry?",
                        "Yes",
                        "ListBox"});
            table17.AddRow(new string[] {
                        "Was Patient Born in Japan?",
                        "No",
                        "ListBox"});
            table17.AddRow(new string[] {
                        "Number of parents born in Japan:",
                        "1",
                        "ListBox"});
            table17.AddRow(new string[] {
                        "Number of Grandparents Born in Japan?",
                        "2",
                        "ListBox"});
#line 154
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table17, "And ");
#line 163
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 164
 testRunner.And("I click on \"Save & Close\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("16_Verify questions data of flat questions in completely submitted CRF.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("US40602.1")]
        public virtual void _16_VerifyQuestionsDataOfFlatQuestionsInCompletelySubmittedCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("16_Verify questions data of flat questions in completely submitted CRF.", null, new string[] {
                        "ObjectiveEvidence",
                        "US40602.1"});
#line 168
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 169
 testRunner.Given("I expand \"Visit (Week 3)\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table18.AddRow(new string[] {
                        "Date of Birth:",
                        "01/01/1980",
                        "Text"});
            table18.AddRow(new string[] {
                        "Gender:",
                        "Male",
                        "Text"});
            table18.AddRow(new string[] {
                        "Race:",
                        "Asian",
                        "Text"});
            table18.AddRow(new string[] {
                        "If Race is Asian, is Patient of Japanese Ancestry?",
                        "Yes",
                        "Text"});
            table18.AddRow(new string[] {
                        "Was Patient Born in Japan?",
                        "No",
                        "Text"});
            table18.AddRow(new string[] {
                        "Number of parents born in Japan:",
                        "1",
                        "Text"});
            table18.AddRow(new string[] {
                        "Number of Grandparents Born in Japan?",
                        "2",
                        "Text"});
#line 170
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table18, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("17_Checkout and verify questions data of flat questions in submitted CRF.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("US40602.1")]
        public virtual void _17_CheckoutAndVerifyQuestionsDataOfFlatQuestionsInSubmittedCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("17_Checkout and verify questions data of flat questions in submitted CRF.", null, new string[] {
                        "ObjectiveEvidence",
                        "US40602.1"});
#line 181
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 183
 testRunner.When("I click \"Checkout\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table19.AddRow(new string[] {
                        "Date of Birth:",
                        "01/01/1980",
                        "Link"});
            table19.AddRow(new string[] {
                        "Gender:",
                        "Male",
                        "Link"});
            table19.AddRow(new string[] {
                        "Race:",
                        "Asian",
                        "Link"});
            table19.AddRow(new string[] {
                        "If Race is Asian, is Patient of Japanese Ancestry?",
                        "Yes",
                        "Link"});
            table19.AddRow(new string[] {
                        "Was Patient Born in Japan?",
                        "No",
                        "Link"});
            table19.AddRow(new string[] {
                        "Number of parents born in Japan:",
                        "1",
                        "Link"});
            table19.AddRow(new string[] {
                        "Number of Grandparents Born in Japan?",
                        "2",
                        "Link"});
#line 184
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table19, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("18_0_Select a Form with flat questions and verify Codelist group items for flat q" +
            "uestions for submitted form.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("US40602.1")]
        public virtual void _18_0_SelectAFormWithFlatQuestionsAndVerifyCodelistGroupItemsForFlatQuestionsForSubmittedForm_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("18_0_Select a Form with flat questions and verify Codelist group items for flat q" +
                    "uestions for submitted form.", null, new string[] {
                        "ObjectiveEvidence",
                        "US40602.1"});
#line 195
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 198
 testRunner.When("I click on \"Asian\" answer value link for flat question \"Race:\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table20.AddRow(new string[] {
                        "[Blank]"});
            table20.AddRow(new string[] {
                        "Asian"});
            table20.AddRow(new string[] {
                        "Black"});
            table20.AddRow(new string[] {
                        "White"});
#line 199
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"Race:\" on the CRF.", ((string)(null)), table20, "Then ");
#line 205
 testRunner.And("I click on \"Cancel\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("18_1_Select a Form with flat questions and verify Codelist group items for flat q" +
            "uestions for submitted form.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("US40602.1")]
        public virtual void _18_1_SelectAFormWithFlatQuestionsAndVerifyCodelistGroupItemsForFlatQuestionsForSubmittedForm_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("18_1_Select a Form with flat questions and verify Codelist group items for flat q" +
                    "uestions for submitted form.", null, new string[] {
                        "ObjectiveEvidence",
                        "US40602.1"});
#line 208
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 209
 testRunner.Given("I expand \"Visit (Week 3)\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 210
 testRunner.When("I click \"Checkout\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 211
 testRunner.And("I click on \"Male\" answer value link for flat question \"Gender:\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table21.AddRow(new string[] {
                        "Male"});
            table21.AddRow(new string[] {
                        "Female"});
#line 212
 testRunner.Then("I verify below \"RadioGroup\" items are displayed in \"Gender:\" on the CRF.", ((string)(null)), table21, "Then ");
#line 216
 testRunner.And("I click on \"Cancel\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("19_Table Questions_Verify available listbox and radio items of unsubmitted CRF.")]
        public virtual void _19_TableQuestions_VerifyAvailableListboxAndRadioItemsOfUnsubmittedCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("19_Table Questions_Verify available listbox and radio items of unsubmitted CRF.", null, ((string[])(null)));
#line 218
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 219
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 220
 testRunner.When("I click \"Checkout\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 221
 testRunner.And("I click on \"Add New Row\" button in \"Table:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table22.AddRow(new string[] {
                        "Not Applicable"});
            table22.AddRow(new string[] {
                        "Red"});
            table22.AddRow(new string[] {
                        "Blue"});
            table22.AddRow(new string[] {
                        "Green"});
#line 222
 testRunner.Then("I verify below \"ListBox\" items are displayed for \"Color\" question in row \"1\" of \"" +
                    "Table:\" table.", ((string)(null)), table22, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table23.AddRow(new string[] {
                        "[Blank]"});
            table23.AddRow(new string[] {
                        "Sitting"});
            table23.AddRow(new string[] {
                        "Standing"});
#line 228
 testRunner.And("I verify below \"RadioGroup\" items are displayed for \"Position\" question in row \"1" +
                    "\" of \"Table:\" table.", ((string)(null)), table23, "And ");
#line 233
 testRunner.And("I click on \"Cancel\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("20_Select a Form with table questions and enter data in CRF.")]
        public virtual void _20_SelectAFormWithTableQuestionsAndEnterDataInCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("20_Select a Form with table questions and enter data in CRF.", null, ((string[])(null)));
#line 235
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 236
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 237
 testRunner.When("I click \"Checkout\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table24.AddRow(new string[] {
                        "Yes",
                        "1",
                        "Text (DT1_Text2):",
                        "Test",
                        "TextBox",
                        ""});
            table24.AddRow(new string[] {
                        "No",
                        "1",
                        "Date (DT1_Date2):",
                        "01/01/2010",
                        "TextBox",
                        ""});
            table24.AddRow(new string[] {
                        "No",
                        "1",
                        "Integer (DT1_Integer2):",
                        "10",
                        "TextBox",
                        ""});
            table24.AddRow(new string[] {
                        "No",
                        "1",
                        "Float (DT1_Float2):",
                        "10.10",
                        "TextBox",
                        ""});
            table24.AddRow(new string[] {
                        "No",
                        "1",
                        "Color",
                        "Red",
                        "ListBox",
                        ""});
            table24.AddRow(new string[] {
                        "No",
                        "1",
                        "Position",
                        "Sitting",
                        "Radio",
                        "Save & Close Row"});
#line 239
 testRunner.And("I enter below \"Table:\" table questions data in the CRF.", ((string)(null)), table24, "And ");
#line 247
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 248
 testRunner.And("I click on \"Save & Close\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 249
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("21_Verify questions data of Table questions in completely submitted CRF.")]
        public virtual void _21_VerifyQuestionsDataOfTableQuestionsInCompletelySubmittedCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("21_Verify questions data of Table questions in completely submitted CRF.", null, ((string[])(null)));
#line 251
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 252
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table25.AddRow(new string[] {
                        "1",
                        "Text (DT1_Text2):",
                        "Test",
                        "Text",
                        ""});
            table25.AddRow(new string[] {
                        "1",
                        "Date (DT1_Date2):",
                        "01/01/2010",
                        "Text",
                        ""});
            table25.AddRow(new string[] {
                        "1",
                        "Integer (DT1_Integer2):",
                        "10",
                        "Text",
                        ""});
            table25.AddRow(new string[] {
                        "1",
                        "Float (DT1_Float2):",
                        "10.10",
                        "Text",
                        ""});
            table25.AddRow(new string[] {
                        "1",
                        "Color",
                        "Red",
                        "Text",
                        ""});
            table25.AddRow(new string[] {
                        "1",
                        "Position",
                        "Sitting",
                        "Text",
                        "OK"});
#line 253
 testRunner.Then("I verify below \"Table:\" table questions data in the CRF.", ((string)(null)), table25, "Then ");
#line 262
 testRunner.And("I click on \"Cancel\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("22_Checkout and verify questions data of table questions in submitted CRF.")]
        public virtual void _22_CheckoutAndVerifyQuestionsDataOfTableQuestionsInSubmittedCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22_Checkout and verify questions data of table questions in submitted CRF.", null, ((string[])(null)));
#line 264
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 265
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 266
 testRunner.When("I click \"Checkout\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table26.AddRow(new string[] {
                        "1",
                        "Text (DT1_Text2):",
                        "Test",
                        "Link",
                        ""});
            table26.AddRow(new string[] {
                        "1",
                        "Date (DT1_Date2):",
                        "01/01/2010",
                        "Link",
                        ""});
            table26.AddRow(new string[] {
                        "1",
                        "Integer (DT1_Integer2):",
                        "10",
                        "Link",
                        ""});
            table26.AddRow(new string[] {
                        "1",
                        "Float (DT1_Float2):",
                        "10.10",
                        "Link",
                        ""});
            table26.AddRow(new string[] {
                        "1",
                        "Color",
                        "Red",
                        "Link",
                        ""});
            table26.AddRow(new string[] {
                        "1",
                        "Position",
                        "Sitting",
                        "Link",
                        "Cancel Row"});
#line 267
 testRunner.Then("I verify below \"Table:\" table questions data in the CRF.", ((string)(null)), table26, "Then ");
#line 275
 testRunner.And("I click on \"Cancel\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("23_Checkout and verify Codelist group items for table questions in submitted CRF." +
            "")]
        public virtual void _23_CheckoutAndVerifyCodelistGroupItemsForTableQuestionsInSubmittedCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("23_Checkout and verify Codelist group items for table questions in submitted CRF." +
                    "", null, ((string[])(null)));
#line 277
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 278
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 279
 testRunner.When("I click \"Checkout\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 280
 testRunner.And("I click on \"Red\" answer value link for table \"Table:\" question \"Color\" in row \"1\"" +
                    ".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table27.AddRow(new string[] {
                        "Not Applicable"});
            table27.AddRow(new string[] {
                        "Red"});
            table27.AddRow(new string[] {
                        "Blue"});
            table27.AddRow(new string[] {
                        "Green"});
#line 281
 testRunner.Then("I verify below \"ListBox\" items are displayed for \"Color\" question in row \"1\" of \"" +
                    "Table:\" table.", ((string)(null)), table27, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table28.AddRow(new string[] {
                        "[Blank]"});
            table28.AddRow(new string[] {
                        "Sitting"});
            table28.AddRow(new string[] {
                        "Standing"});
#line 287
 testRunner.And("I verify below \"RadioGroup\" items are displayed for \"Position\" question in row \"1" +
                    "\" of \"Table:\" table.", ((string)(null)), table28, "And ");
#line 292
 testRunner.And("I click table row button \"Cancel Row\" of table \"Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 293
 testRunner.And("I click on \"Cancel\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("24_Checkout and update questions data of table questions in submitted CRF.")]
        public virtual void _24_CheckoutAndUpdateQuestionsDataOfTableQuestionsInSubmittedCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("24_Checkout and update questions data of table questions in submitted CRF.", null, ((string[])(null)));
#line 295
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 296
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 297
 testRunner.When("I click \"Checkout\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes",
                        "RowButtonToClick"});
            table29.AddRow(new string[] {
                        "No",
                        "1",
                        "Color",
                        "Red",
                        "ListBox",
                        "Blue",
                        "SOR",
                        "",
                        "OK"});
            table29.AddRow(new string[] {
                        "No",
                        "1",
                        "Position",
                        "Sitting",
                        "Radio",
                        "Standing",
                        "DCF",
                        "",
                        "Save & Close Row"});
#line 298
 testRunner.And("I enter below \"Table:\" table questions data in the CRF.", ((string)(null)), table29, "And ");
#line 302
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 303
 testRunner.And("I click on \"Save & Close\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 304
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("25_Verify codelist group data of Table questions in completely submitted CRF.")]
        public virtual void _25_VerifyCodelistGroupDataOfTableQuestionsInCompletelySubmittedCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("25_Verify codelist group data of Table questions in completely submitted CRF.", null, ((string[])(null)));
#line 306
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 307
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table30.AddRow(new string[] {
                        "1",
                        "Text (DT1_Text2):",
                        "Test",
                        "Text",
                        ""});
            table30.AddRow(new string[] {
                        "1",
                        "Date (DT1_Date2):",
                        "01/01/2010",
                        "Text",
                        ""});
            table30.AddRow(new string[] {
                        "1",
                        "Integer (DT1_Integer2):",
                        "10",
                        "Text",
                        ""});
            table30.AddRow(new string[] {
                        "1",
                        "Float (DT1_Float2):",
                        "10.10",
                        "Text",
                        ""});
            table30.AddRow(new string[] {
                        "1",
                        "Color",
                        "Blue",
                        "Text",
                        ""});
            table30.AddRow(new string[] {
                        "1",
                        "Position",
                        "Standing",
                        "Text",
                        "OK"});
#line 308
 testRunner.Then("I verify below \"Table:\" table questions data in the CRF.", ((string)(null)), table30, "Then ");
#line 316
 testRunner.And("I click on \"Cancel\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("26_Checkout and verify updated codelist group data of table questions in submitte" +
            "d CRF.")]
        public virtual void _26_CheckoutAndVerifyUpdatedCodelistGroupDataOfTableQuestionsInSubmittedCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("26_Checkout and verify updated codelist group data of table questions in submitte" +
                    "d CRF.", null, ((string[])(null)));
#line 318
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 319
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 320
 testRunner.When("I click \"Checkout\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table31.AddRow(new string[] {
                        "1",
                        "Date (DT1_Date2):",
                        "01/01/2010",
                        "Link",
                        ""});
            table31.AddRow(new string[] {
                        "1",
                        "Integer (DT1_Integer2):",
                        "10",
                        "Link",
                        ""});
            table31.AddRow(new string[] {
                        "1",
                        "Float (DT1_Float2):",
                        "10.10",
                        "Link",
                        ""});
            table31.AddRow(new string[] {
                        "1",
                        "Color",
                        "Blue",
                        "Link",
                        ""});
            table31.AddRow(new string[] {
                        "1",
                        "Position",
                        "Standing",
                        "Link",
                        "Cancel Row"});
#line 321
 testRunner.Then("I verify below \"Table:\" table questions data in the CRF.", ((string)(null)), table31, "Then ");
#line 328
 testRunner.And("I click on \"Cancel\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("27_Verify Autobuild table questions data in unsubmitted form and without checking" +
            " out.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("US40601.1")]
        public virtual void _27_VerifyAutobuildTableQuestionsDataInUnsubmittedFormAndWithoutCheckingOut_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("27_Verify Autobuild table questions data in unsubmitted form and without checking" +
                    " out.", null, new string[] {
                        "ObjectiveEvidence",
                        "US40601.1"});
#line 332
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 333
 testRunner.Given("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 334
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table32.AddRow(new string[] {
                        "1",
                        "Region of Body:",
                        "Head",
                        "Textbox",
                        ""});
            table32.AddRow(new string[] {
                        "1",
                        "Gender:",
                        "Male",
                        "Radio",
                        ""});
            table32.AddRow(new string[] {
                        "1",
                        "Patient Status:",
                        "Enrolled",
                        "Textbox",
                        "Cancel Row"});
            table32.AddRow(new string[] {
                        "2",
                        "Region of Body:",
                        "Eyes",
                        "Textbox",
                        ""});
            table32.AddRow(new string[] {
                        "2",
                        "Gender:",
                        "Male",
                        "Radio",
                        ""});
            table32.AddRow(new string[] {
                        "2",
                        "Patient Status:",
                        "Enrolled",
                        "Textbox",
                        "Cancel Row"});
            table32.AddRow(new string[] {
                        "3",
                        "Region of Body:",
                        "Ears",
                        "Textbox",
                        ""});
            table32.AddRow(new string[] {
                        "3",
                        "Gender:",
                        "Male",
                        "Radio",
                        ""});
            table32.AddRow(new string[] {
                        "3",
                        "Patient Status:",
                        "Enrolled",
                        "Textbox",
                        "Cancel Row"});
            table32.AddRow(new string[] {
                        "4",
                        "Region of Body:",
                        "Nose",
                        "Textbox",
                        ""});
            table32.AddRow(new string[] {
                        "4",
                        "Gender:",
                        "Male",
                        "Radio",
                        ""});
            table32.AddRow(new string[] {
                        "4",
                        "Patient Status:",
                        "Enrolled",
                        "Textbox",
                        "Cancel Row"});
#line 335
 testRunner.Then("I verify below \"Key Sequence on question #2. Table Structure is fixed. Maximum Ro" +
                    "ws is not exact. Questions (4-7) are derives.:\" table questions data in the CRF." +
                    "", ((string)(null)), table32, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table33.AddRow(new string[] {
                        "1",
                        "Drug Name:",
                        "Tylenol",
                        "Textbox",
                        ""});
            table33.AddRow(new string[] {
                        "1",
                        "Placebo:",
                        "[Blank]",
                        "Listbox",
                        ""});
            table33.AddRow(new string[] {
                        "1",
                        "Name: {Required - Sent}",
                        "",
                        "Textbox",
                        ""});
            table33.AddRow(new string[] {
                        "1",
                        "Enter patient date of birth:{Not Answered - Sent} (Condition - Q2 is not equal to" +
                            " \"No\")",
                        "",
                        "Textbox",
                        "Cancel Row"});
            table33.AddRow(new string[] {
                        "2",
                        "Drug Name:",
                        "Tylenol",
                        "Textbox",
                        ""});
            table33.AddRow(new string[] {
                        "2",
                        "Placebo:",
                        "[Blank]",
                        "Listbox",
                        ""});
            table33.AddRow(new string[] {
                        "2",
                        "Name: {Required - Sent}",
                        "",
                        "Textbox",
                        ""});
            table33.AddRow(new string[] {
                        "2",
                        "Enter patient date of birth:{Not Answered - Sent} (Condition - Q2 is not equal to" +
                            " \"No\")",
                        "",
                        "Textbox",
                        "Cancel Row"});
            table33.AddRow(new string[] {
                        "3",
                        "Drug Name:",
                        "Contact",
                        "Textbox",
                        ""});
            table33.AddRow(new string[] {
                        "3",
                        "Placebo:",
                        "[Blank]",
                        "Listbox",
                        ""});
            table33.AddRow(new string[] {
                        "3",
                        "Name: {Required - Sent}",
                        "",
                        "Textbox",
                        ""});
            table33.AddRow(new string[] {
                        "3",
                        "Enter patient date of birth:{Not Answered - Sent} (Condition - Q2 is not equal to" +
                            " \"No\")",
                        "",
                        "Textbox",
                        "Cancel Row"});
            table33.AddRow(new string[] {
                        "4",
                        "Drug Name:",
                        "Contact",
                        "Textbox",
                        ""});
            table33.AddRow(new string[] {
                        "4",
                        "Placebo:",
                        "[Blank]",
                        "Listbox",
                        ""});
            table33.AddRow(new string[] {
                        "4",
                        "Name: {Required - Sent}",
                        "",
                        "Textbox",
                        ""});
            table33.AddRow(new string[] {
                        "4",
                        "Enter patient date of birth:{Not Answered - Sent} (Condition - Q2 is not equal to" +
                            " \"No\")",
                        "",
                        "Textbox",
                        "Cancel Row"});
#line 349
 testRunner.And("I verify below \"Key Sequence on question #1 & #3. Table Structure is fixed. Maxim" +
                    "um Rows is exact. Questions (4-7) have queries.:\" table questions data in the CR" +
                    "F.", ((string)(null)), table33, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("28_Verify Autobuild table questions \"Race\" and \" Gender\" codelist group data in u" +
            "nsubmitted form and with checking out.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("US40601.1")]
        public virtual void _28_VerifyAutobuildTableQuestionsRaceAndGenderCodelistGroupDataInUnsubmittedFormAndWithCheckingOut_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("28_Verify Autobuild table questions \"Race\" and \" Gender\" codelist group data in u" +
                    "nsubmitted form and with checking out.", null, new string[] {
                        "ObjectiveEvidence",
                        "US40601.1"});
#line 369
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 370
 testRunner.When("I expand row \"1\" of table \"Key Sequence on question #2. Table Structure is fixed." +
                    " Maximum Rows is not exact. Questions (4-7) are derives.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table34.AddRow(new string[] {
                        "[Blank]"});
            table34.AddRow(new string[] {
                        "Asian"});
            table34.AddRow(new string[] {
                        "Black"});
            table34.AddRow(new string[] {
                        "White"});
#line 371
 testRunner.Then("I verify below \"ListBox\" items are displayed for \"Race:\" question in row \"1\" of \"" +
                    "Key Sequence on question #2. Table Structure is fixed. Maximum Rows is not exact" +
                    ". Questions (4-7) are derives.:\" table.", ((string)(null)), table34, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table35.AddRow(new string[] {
                        "Male"});
            table35.AddRow(new string[] {
                        "Female"});
#line 377
 testRunner.And("I verify below \"RadioGroup\" items are displayed for \"Gender:\" question in row \"1\"" +
                    " of \"Key Sequence on question #2. Table Structure is fixed. Maximum Rows is not " +
                    "exact. Questions (4-7) are derives.:\" table.", ((string)(null)), table35, "And ");
#line 381
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Key Sequence on question #2" +
                    ". Table Structure is fixed. Maximum Rows is not exact. Questions (4-7) are deriv" +
                    "es.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table36.AddRow(new string[] {
                        "No",
                        "1",
                        "Drug Name:",
                        "Tylenol",
                        "TextBox",
                        ""});
            table36.AddRow(new string[] {
                        "No",
                        "1",
                        "Time of Day that the drug is taken:",
                        "AM",
                        "TextBox",
                        "Save & Close Row"});
            table36.AddRow(new string[] {
                        "No",
                        "2",
                        "Drug Name:",
                        "Tylenol",
                        "TextBox",
                        ""});
            table36.AddRow(new string[] {
                        "No",
                        "2",
                        "Time of Day that the drug is taken:",
                        "PM",
                        "TextBox",
                        "Save & Close Row"});
            table36.AddRow(new string[] {
                        "No",
                        "3",
                        "Drug Name:",
                        "Contact",
                        "TextBox",
                        ""});
            table36.AddRow(new string[] {
                        "No",
                        "3",
                        "Time of Day that the drug is taken:",
                        "AM",
                        "TextBox",
                        "Save & Close Row"});
            table36.AddRow(new string[] {
                        "No",
                        "4",
                        "Drug Name:",
                        "Contact",
                        "TextBox",
                        ""});
            table36.AddRow(new string[] {
                        "No",
                        "4",
                        "Time of Day that the drug is taken:",
                        "AM",
                        "TextBox",
                        "Save & Close Row"});
#line 382
 testRunner.And("I verify below \"Key Sequence on question #1 & #3. Table Structure is fixed. Maxim" +
                    "um Rows is exact. Questions (4-7) have queries.:\" table questions data in the CR" +
                    "F.", ((string)(null)), table36, "And ");
#line 392
 testRunner.And("I click on \"Save & Close\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("29_Select a Form with Autobuild table (fixed) questions and enter data in CRF.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("US40601.1")]
        public virtual void _29_SelectAFormWithAutobuildTableFixedQuestionsAndEnterDataInCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("29_Select a Form with Autobuild table (fixed) questions and enter data in CRF.", null, new string[] {
                        "ObjectiveEvidence",
                        "US40601.1"});
#line 396
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 397
 testRunner.Given("I expand \"Visit (Week 20)\" to select and open \"Autobuild Fixed 1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 398
 testRunner.When("I click \"Checkout\" button on \"Autobuild Fixed 1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table37.AddRow(new string[] {
                        "No",
                        "1",
                        "Non-key sequence code list (inches or centimeters):",
                        "cm",
                        "Radio",
                        ""});
            table37.AddRow(new string[] {
                        "No",
                        "1",
                        "Float value: (Maxlength: 5 {Sent}, DataType {Sent}, MaxPrecision: 3 {Draft}",
                        "166.12",
                        "TextBox",
                        "Save & Close Row"});
            table37.AddRow(new string[] {
                        "No",
                        "2",
                        "Float value: (Maxlength: 5 {Sent}, DataType {Sent}, MaxPrecision: 3 {Draft}",
                        "166.12",
                        "TextBox",
                        "Save & Close Row"});
            table37.AddRow(new string[] {
                        "No",
                        "3",
                        "Float value: (Maxlength: 5 {Sent}, DataType {Sent}, MaxPrecision: 3 {Draft}",
                        "166.12",
                        "TextBox",
                        "Save & Close Row"});
#line 399
 testRunner.And("I enter below \"First auto build table (max rows: 6, structure: fixed):\" autobuild" +
                    " table questions data in the CRF.", ((string)(null)), table37, "And ");
#line 406
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 407
 testRunner.And("I click on \"Save & Close\" button on \"Autobuild Fixed 1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 408
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("30_Select a Form with Autobuild table (fixed) questions and Edit data on saved fo" +
            "rm")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("US40601.1")]
        public virtual void _30_SelectAFormWithAutobuildTableFixedQuestionsAndEditDataOnSavedForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("30_Select a Form with Autobuild table (fixed) questions and Edit data on saved fo" +
                    "rm", null, new string[] {
                        "ObjectiveEvidence",
                        "US40601.1"});
#line 411
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 412
 testRunner.Given("I expand \"Visit (Week 20)\" to select and open \"Autobuild Fixed 1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 413
 testRunner.When("I click \"Checkout\" button on \"Autobuild Fixed 1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes",
                        "RowButtonToClick"});
            table38.AddRow(new string[] {
                        "No",
                        "1",
                        "Non-key sequence code list (inches or centimeters):",
                        "cm",
                        "Radio",
                        "in",
                        "SOR",
                        "",
                        "Save & Close Row"});
            table38.AddRow(new string[] {
                        "No",
                        "3",
                        "Float value: (Maxlength: 5 {Sent}, DataType {Sent}, MaxPrecision: 3 {Draft}",
                        "166.12",
                        "TextBox",
                        "170.12",
                        "DCF",
                        "",
                        "Cancel Row"});
#line 414
 testRunner.And("I enter below \"First auto build table (max rows: 6, structure: fixed):\" autobuild" +
                    " table questions data in the CRF.", ((string)(null)), table38, "And ");
#line 418
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 419
 testRunner.And("I click on \"Save & Close\" button on \"Autobuild Fixed 1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 420
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("31_Select a Form with questions in multiple Autobuild tables (fixed and non-fixed" +
            ") questions. Enter data in CRF.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("US40601.1")]
        public virtual void _31_SelectAFormWithQuestionsInMultipleAutobuildTablesFixedAndNon_FixedQuestions_EnterDataInCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31_Select a Form with questions in multiple Autobuild tables (fixed and non-fixed" +
                    ") questions. Enter data in CRF.", null, new string[] {
                        "ObjectiveEvidence",
                        "US40601.1"});
#line 423
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 424
 testRunner.Given("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 425
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table39.AddRow(new string[] {
                        "Yes",
                        "1",
                        "Select the color:",
                        "Red",
                        "Radio",
                        ""});
            table39.AddRow(new string[] {
                        "No",
                        "1",
                        "Select your drug:",
                        "Contact",
                        "ListBox",
                        ""});
            table39.AddRow(new string[] {
                        "No",
                        "1",
                        "Select Work Shift:",
                        "AM",
                        "ListBox",
                        "Save & Close Row"});
            table39.AddRow(new string[] {
                        "Yes",
                        "2",
                        "Select the color:",
                        "Red",
                        "Radio",
                        ""});
            table39.AddRow(new string[] {
                        "No",
                        "2",
                        "Select your drug:",
                        "Contact",
                        "ListBox",
                        ""});
            table39.AddRow(new string[] {
                        "No",
                        "2",
                        "Select Work Shift:",
                        "PM",
                        "ListBox",
                        "Save & Close Row"});
#line 426
 testRunner.And("I enter below \"Key Sequence is not used. Maximum rows is 2. Question (4-7) have q" +
                    "ueries.:\" autobuild table questions data in the CRF.", ((string)(null)), table39, "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table40.AddRow(new string[] {
                        "No",
                        "1",
                        "Race:",
                        "Asian",
                        "ListBox",
                        ""});
            table40.AddRow(new string[] {
                        "No",
                        "1",
                        "The some Text value:",
                        "Test",
                        "TextBox",
                        "Save & Close Row"});
            table40.AddRow(new string[] {
                        "Yes",
                        "3",
                        "Race:",
                        "White",
                        "ListBox",
                        "Save & Close Row"});
#line 434
 testRunner.And("I enter below \"Key Sequence is on question #1. Question (4 & 7) are derives. Tabl" +
                    "e structure is open. Maximum Table Rows are 5.:\" autobuild table questions data " +
                    "in the CRF.", ((string)(null)), table40, "And ");
#line 439
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 440
 testRunner.And("I click on \"Save & Close\" button on \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 441
 testRunner.And("I click Continue button of Modal \"Queries Result\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 442
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("32_Select a Form with questions in multiple Autobuild tables (fixed and non-fixed" +
            ") questions. Verify saved data.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("US40601.1")]
        public virtual void _32_SelectAFormWithQuestionsInMultipleAutobuildTablesFixedAndNon_FixedQuestions_VerifySavedData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32_Select a Form with questions in multiple Autobuild tables (fixed and non-fixed" +
                    ") questions. Verify saved data.", null, new string[] {
                        "ObjectiveEvidence",
                        "US40601.1"});
#line 445
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 446
 testRunner.Given("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table41.AddRow(new string[] {
                        "No",
                        "1",
                        "Select the color:",
                        "Red",
                        "Text",
                        ""});
            table41.AddRow(new string[] {
                        "No",
                        "1",
                        "Select your drug:",
                        "Contact",
                        "Text",
                        ""});
            table41.AddRow(new string[] {
                        "No",
                        "1",
                        "Select Work Shift:",
                        "AM",
                        "Text",
                        "OK"});
            table41.AddRow(new string[] {
                        "No",
                        "2",
                        "Select the color:",
                        "Red",
                        "Text",
                        ""});
            table41.AddRow(new string[] {
                        "No",
                        "2",
                        "Select your drug:",
                        "Contact",
                        "Text",
                        ""});
            table41.AddRow(new string[] {
                        "No",
                        "2",
                        "Select Work Shift:",
                        "PM",
                        "Text",
                        "OK"});
#line 448
 testRunner.Then("I verify below \"Key Sequence is not used. Maximum rows is 2. Question (4-7) have " +
                    "queries.:\" table questions data in the CRF.", ((string)(null)), table41, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table42.AddRow(new string[] {
                        "No",
                        "1",
                        "Race:",
                        "Asian",
                        "Text",
                        ""});
            table42.AddRow(new string[] {
                        "No",
                        "1",
                        "The some Text value:",
                        "Test",
                        "Text",
                        "OK"});
            table42.AddRow(new string[] {
                        "No",
                        "3",
                        "Race:",
                        "White",
                        "Text",
                        "OK"});
#line 456
 testRunner.And("I enter below \"Key Sequence is on question #1. Question (4 & 7) are derives. Tabl" +
                    "e structure is open. Maximum Table Rows are 5.:\" autobuild table questions data " +
                    "in the CRF.", ((string)(null)), table42, "And ");
#line 461
 testRunner.And("I click on \"Cancel\" button on \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("33_Enter value for Q1 and clear by clicking MarkNotAnswered")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("US40601.1")]
        public virtual void _33_EnterValueForQ1AndClearByClickingMarkNotAnswered()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("33_Enter value for Q1 and clear by clicking MarkNotAnswered", null, new string[] {
                        "ObjectiveEvidence",
                        "US40601.1"});
#line 464
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 465
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 466
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 467
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 468
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 469
 testRunner.And("I click Continue button of Modal \"Queries Result\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 470
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 471
 testRunner.And("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes"});
            table43.AddRow(new string[] {
                        "Sample text question:",
                        "[Blank]",
                        "TextBox",
                        "text",
                        "DCF",
                        ""});
#line 472
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table43, "And ");
#line 475
 testRunner.And("I click icon \"icon_mna_disabled.png\" for the flat question \"Sample text question:" +
                    "\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 476
    testRunner.And("I enter comments \"Comments for MarkItemNotAnswered\" in MarkItemDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 477
 testRunner.And("I click ok button in MarkItemDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 478
 testRunner.Then("I see icon \"icon_mna.png\" against question \"Sample text question:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table44.AddRow(new string[] {
                        "Sample text question:",
                        "[Blank]",
                        "Text"});
#line 479
 testRunner.And("I verify below flat questions data in the CRF.", ((string)(null)), table44, "And ");
#line 482
 testRunner.And("I click \"Cancel\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("35_Delete table row question associated with codelist group.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("US40601.1")]
        public virtual void _35_DeleteTableRowQuestionAssociatedWithCodelistGroup_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35_Delete table row question associated with codelist group.", null, new string[] {
                        "ObjectiveEvidence",
                        "US40601.1"});
#line 504
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 505
 testRunner.Given("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 506
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 507
 testRunner.And("I expand row \"1\" of table \"Key Sequence is not used. Maximum rows is 2. Question " +
                    "(4-7) have queries.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 508
 testRunner.And("I click table row button \"Delete Row\" of table \"Key Sequence is not used. Maximum" +
                    " rows is 2. Question (4-7) have queries.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 509
 testRunner.And("I select reason for change \"DCF\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 510
 testRunner.And("I enter additional notes \"TestDelete\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 511
 testRunner.And("I click continue button in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 512
 testRunner.Then("I see deleted row \"1\" of table \"Key Sequence is not used. Maximum rows is 2. Ques" +
                    "tion (4-7) have queries.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("36_1_Restore table row")]
        public virtual void _36_1_RestoreTableRow()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("36_1_Restore table row", null, ((string[])(null)));
#line 518
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 519
 testRunner.When("I expand row \"1\" of table \"Key Sequence is not used. Maximum rows is 2. Question " +
                    "(4-7) have queries.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 520
 testRunner.And("I click table row button \"Restore Row\" of table \"Key Sequence is not used. Maximu" +
                    "m rows is 2. Question (4-7) have queries.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 521
 testRunner.And("I select reason for change \"DCF\" in RestoreTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 522
 testRunner.And("I enter additional notes \"TestRestory\" in RestoreTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 523
 testRunner.And("I click continue button in RestoreTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 524
 testRunner.Then("I see restored row \"1\" of table \"Key Sequence is not used. Maximum rows is 2. Que" +
                    "stion (4-7) have queries.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 525
 testRunner.And("I click on \"Save & Close\" button on \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("37_Verify Restored data in table row.")]
        public virtual void _37_VerifyRestoredDataInTableRow_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("37_Verify Restored data in table row.", null, ((string[])(null)));
#line 528
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 529
 testRunner.Given("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table45.AddRow(new string[] {
                        "No",
                        "1",
                        "Select the color:",
                        "Red",
                        "Text",
                        ""});
            table45.AddRow(new string[] {
                        "No",
                        "1",
                        "Select your drug:",
                        "Contact",
                        "Text",
                        ""});
            table45.AddRow(new string[] {
                        "No",
                        "1",
                        "Select Work Shift:",
                        "AM",
                        "Text",
                        "OK"});
#line 531
 testRunner.Then("I verify below \"Key Sequence is not used. Maximum rows is 2. Question (4-7) have " +
                    "queries.:\" table questions data in the CRF.", ((string)(null)), table45, "Then ");
#line 536
 testRunner.And("I click \"Cancel\" button on \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("38_Verify Item change history for non table question")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void _38_VerifyItemChangeHistoryForNonTableQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("38_Verify Item change history for non table question", null, new string[] {
                        "ObjectiveEvidence"});
#line 539
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 540
 testRunner.Given("I expand \"Visit (Week 3)\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 541
 testRunner.When("I click \"Checkout\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes"});
            table46.AddRow(new string[] {
                        "Race:",
                        "Asian",
                        "ListBox",
                        "White",
                        "DCF",
                        ""});
#line 542
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table46, "And ");
#line 545
 testRunner.And("I click on \"Save & Close\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 546
 testRunner.And("I expand \"Visit (Week 3)\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 547
 testRunner.And("I click icon \"changeHistory.gif\" for the flat question \"Race:\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table47.AddRow(new string[] {
                        "",
                        "Asian",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
            table47.AddRow(new string[] {
                        "",
                        "White",
                        "Reason: DCF"});
#line 548
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table47, "Then ");
#line 552
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 553
 testRunner.And("I click on \"Cancel\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("39_Verify Item change history for table question")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void _39_VerifyItemChangeHistoryForTableQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("39_Verify Item change history for table question", null, new string[] {
                        "ObjectiveEvidence"});
#line 556
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 557
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 558
 testRunner.When("I click \"Checkout\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 559
 testRunner.And("I expand row \"1\" of table \"Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 561
 testRunner.And("I click \"changeHistory.gif\" icon of a question \"Color\" of table \"Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table48.AddRow(new string[] {
                        "",
                        "Blue",
                        "Reason: SOR"});
            table48.AddRow(new string[] {
                        "",
                        "Red",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 562
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table48, "Then ");
#line 566
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("40_Verify Item change history for table question")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void _40_VerifyItemChangeHistoryForTableQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("40_Verify Item change history for table question", null, new string[] {
                        "ObjectiveEvidence"});
#line 569
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 570
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"Position\" of table \"Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table49.AddRow(new string[] {
                        "",
                        "Standing",
                        "Reason: DCF"});
            table49.AddRow(new string[] {
                        "",
                        "Sitting",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 571
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table49, "Then ");
#line 575
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 576
 testRunner.And("I click on \"Cancel\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("41_Verify Item change history for Autobuild Fixed table question")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void _41_VerifyItemChangeHistoryForAutobuildFixedTableQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("41_Verify Item change history for Autobuild Fixed table question", null, new string[] {
                        "ObjectiveEvidence"});
#line 579
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 580
 testRunner.Given("I expand \"Visit (Week 20)\" to select and open \"Autobuild Fixed 1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 581
 testRunner.When("I click \"Checkout\" button on \"Autobuild Fixed 1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 582
 testRunner.And("I expand row \"1\" of table \"First auto build table (max rows: 6, structure: fixed)" +
                    ":\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 584
 testRunner.And("I click \"changeHistory.gif\" icon of a question \"Non-key sequence code list (inche" +
                    "s or centimeters):\" of table \"First auto build table (max rows: 6, structure: fi" +
                    "xed):\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table50.AddRow(new string[] {
                        "",
                        "in",
                        "Reason: SOR"});
            table50.AddRow(new string[] {
                        "",
                        "cm",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 585
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table50, "Then ");
#line 589
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 590
 testRunner.And("I click on \"Cancel\" button on \"Autobuild Fixed 1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("42_Update the values for questions in multiple Autobuild tables (fixed and non-fi" +
            "xed)")]
        public virtual void _42_UpdateTheValuesForQuestionsInMultipleAutobuildTablesFixedAndNon_Fixed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("42_Update the values for questions in multiple Autobuild tables (fixed and non-fi" +
                    "xed)", null, ((string[])(null)));
#line 592
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 593
 testRunner.Given("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 594
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes",
                        "RowButtonToClick"});
            table51.AddRow(new string[] {
                        "No",
                        "1",
                        "Select the color:",
                        "Red",
                        "Radio",
                        "Green",
                        "SEC",
                        "",
                        ""});
            table51.AddRow(new string[] {
                        "No",
                        "1",
                        "Select Work Shift:",
                        "AM",
                        "ListBox",
                        "PM",
                        "DCF",
                        "",
                        "Save & Close Row"});
#line 595
 testRunner.And("I enter below \"Key Sequence is not used. Maximum rows is 2. Question (4-7) have q" +
                    "ueries.:\" autobuild table questions data in the CRF.", ((string)(null)), table51, "And ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes",
                        "RowButtonToClick"});
            table52.AddRow(new string[] {
                        "No",
                        "1",
                        "Race:",
                        "Asian",
                        "ListBox",
                        "Black",
                        "DCF",
                        "",
                        "Save & Close Row"});
#line 601
 testRunner.And("I enter below \"Key Sequence is on question #1. Question (4 & 7) are derives. Tabl" +
                    "e structure is open. Maximum Table Rows are 5.:\" autobuild table questions data " +
                    "in the CRF.", ((string)(null)), table52, "And ");
#line 606
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 607
 testRunner.And("I click on \"Save & Close\" button on \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 608
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("43_Verify Item change history for questions in multiple Autobuild tables (fixed a" +
            "nd non-fixed)")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void _43_VerifyItemChangeHistoryForQuestionsInMultipleAutobuildTablesFixedAndNon_Fixed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("43_Verify Item change history for questions in multiple Autobuild tables (fixed a" +
                    "nd non-fixed)", null, new string[] {
                        "ObjectiveEvidence"});
#line 611
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 612
 testRunner.Given("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 613
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 615
 testRunner.And("I expand row \"1\" of table \"Key Sequence is not used. Maximum rows is 2. Question " +
                    "(4-7) have queries.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 616
 testRunner.And("I click \"changeHistory.gif\" icon of a question \"Select the color:\" of table \"Key " +
                    "Sequence is not used. Maximum rows is 2. Question (4-7) have queries.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table53.AddRow(new string[] {
                        "",
                        "Green",
                        "Reason: SEC"});
            table53.AddRow(new string[] {
                        "",
                        "Red",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 617
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table53, "Then ");
#line 621
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 622
 testRunner.And("I click on \"Cancel\" button on \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("44_Verify Item change history for questions in multiple Autobuild tables (fixed a" +
            "nd non-fixed)")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void _44_VerifyItemChangeHistoryForQuestionsInMultipleAutobuildTablesFixedAndNon_Fixed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("44_Verify Item change history for questions in multiple Autobuild tables (fixed a" +
                    "nd non-fixed)", null, new string[] {
                        "ObjectiveEvidence"});
#line 625
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 626
 testRunner.Given("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 627
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 629
 testRunner.And("I expand row \"1\" of table \"Key Sequence is on question #1. Question (4 & 7) are d" +
                    "erives. Table structure is open. Maximum Table Rows are 5.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 630
 testRunner.And("I click \"changeHistory.gif\" icon of a question \"Race:\" of table \"Key Sequence is " +
                    "on question #1. Question (4 & 7) are derives. Table structure is open. Maximum T" +
                    "able Rows are 5.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table54.AddRow(new string[] {
                        "",
                        "Black",
                        "Reason: DCF"});
            table54.AddRow(new string[] {
                        "",
                        "Asian",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 631
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table54, "Then ");
#line 635
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 636
 testRunner.And("I click on \"Cancel\" button on \"AutoBuild Form03\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("45_Add comment to flat question which is associated to codelist group \'Race\'")]
        public virtual void _45_AddCommentToFlatQuestionWhichIsAssociatedToCodelistGroupRace()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("45_Add comment to flat question which is associated to codelist group \'Race\'", null, ((string[])(null)));
#line 638
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 639
 testRunner.Given("I expand \"Visit (Week 3)\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 640
 testRunner.When("I click \"Checkout\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "CommentsToAdd"});
            table55.AddRow(new string[] {
                        "Race:",
                        "testing item-level comment"});
#line 641
 testRunner.And("I add commnet to a flat question", ((string)(null)), table55, "And ");
#line 644
 testRunner.Then("I see icon \"comment.gif\" against question \"Race:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 645
 testRunner.And("I open main tab \"Comments\" of Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionNumberOrForm",
                        "Question",
                        "Value",
                        "Comment",
                        "DateTime"});
            table56.AddRow(new string[] {
                        "3",
                        "Race:",
                        "White",
                        "testing item-level comment",
                        ""});
#line 646
 testRunner.Then("I see comments in comments tab", ((string)(null)), table56, "Then ");
#line 649
 testRunner.And("I open main tab \"CRF\" of Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 650
 testRunner.And("I click on \"Cancel\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("46_Reset CRF which has Codelist group associated to a flat question.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("US40602.1")]
        public virtual void _46_ResetCRFWhichHasCodelistGroupAssociatedToAFlatQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("46_Reset CRF which has Codelist group associated to a flat question.", null, new string[] {
                        "ObjectiveEvidence",
                        "US40602.1"});
#line 653
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 654
 testRunner.Given("I expand \"Visit (Week 3)\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 655
 testRunner.When("I click ActionPalette Item \"Reset CRF\" in \"CRFAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 656
 testRunner.And("I click Yes button in ResetCRFModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 657
 testRunner.And("I enter reason \"CRF is reset\" in ResetCRFModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 658
 testRunner.And("I click Continue button in ResetCRFModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 659
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table57.AddRow(new string[] {
                        "CRF Reset - Visit (Week 3)/Demographics for patient 01-PAT - COMPLETE. View Summa" +
                            "ry."});
#line 660
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table57, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("47_Verify CRF with codelist group questions after Reset CRF is done.")]
        public virtual void _47_VerifyCRFWithCodelistGroupQuestionsAfterResetCRFIsDone_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("47_Verify CRF with codelist group questions after Reset CRF is done.", null, ((string[])(null)));
#line 664
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 665
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 666
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 667
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 668
 testRunner.When("I expand \"Visit (Week 3)\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table58.AddRow(new string[] {
                        "[Blank]"});
            table58.AddRow(new string[] {
                        "Asian"});
            table58.AddRow(new string[] {
                        "Black"});
            table58.AddRow(new string[] {
                        "White"});
#line 669
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"Race:\" on the CRF.", ((string)(null)), table58, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table59.AddRow(new string[] {
                        "Male"});
            table59.AddRow(new string[] {
                        "Female"});
#line 675
 testRunner.And("I verify below \"RadioGroup\" items are displayed in \"Gender:\" on the CRF.", ((string)(null)), table59, "And ");
#line 679
 testRunner.And("I click \"Checkout\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table60.AddRow(new string[] {
                        "[Blank]"});
            table60.AddRow(new string[] {
                        "Asian"});
            table60.AddRow(new string[] {
                        "Black"});
            table60.AddRow(new string[] {
                        "White"});
#line 680
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"Race:\" on the CRF.", ((string)(null)), table60, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table61.AddRow(new string[] {
                        "Male"});
            table61.AddRow(new string[] {
                        "Female"});
#line 686
 testRunner.And("I verify below \"RadioGroup\" items are displayed in \"Gender:\" on the CRF.", ((string)(null)), table61, "And ");
#line 690
 testRunner.And("I click on \"Cancel\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("48_Reset CRF which has Codelist group associated to a table question.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("US40601.1")]
        public virtual void _48_ResetCRFWhichHasCodelistGroupAssociatedToATableQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48_Reset CRF which has Codelist group associated to a table question.", null, new string[] {
                        "ObjectiveEvidence",
                        "US40601.1"});
#line 693
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 694
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 695
 testRunner.When("I click ActionPalette Item \"Reset CRF\" in \"CRFAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 696
 testRunner.And("I click Yes button in ResetCRFModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 697
 testRunner.And("I enter reason \"CRF is reset\" in ResetCRFModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 698
 testRunner.And("I click Continue button in ResetCRFModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 699
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table62.AddRow(new string[] {
                        "CRF Reset - Visit (Week 7)/DT1 Form for patient 01-PAT - COMPLETE. View Summary."});
#line 700
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table62, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("49_Verify CRF with table question with codelist group associated after Reset CRF " +
            "is done.")]
        public virtual void _49_VerifyCRFWithTableQuestionWithCodelistGroupAssociatedAfterResetCRFIsDone_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("49_Verify CRF with table question with codelist group associated after Reset CRF " +
                    "is done.", null, ((string[])(null)));
#line 704
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 705
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 706
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 707
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 708
 testRunner.When("I expand \"Visit (Week 7)\" to select and open \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 709
 testRunner.And("I expand row \"1\" of table \"Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table63.AddRow(new string[] {
                        "Not Applicable"});
            table63.AddRow(new string[] {
                        "Red"});
            table63.AddRow(new string[] {
                        "Blue"});
            table63.AddRow(new string[] {
                        "Green"});
#line 710
 testRunner.Then("I verify below \"ListBox\" items are displayed for \"Color:\" question in row \"1\" of " +
                    "\"Table:\" table.", ((string)(null)), table63, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table64.AddRow(new string[] {
                        "[Blank]"});
            table64.AddRow(new string[] {
                        "Sitting"});
            table64.AddRow(new string[] {
                        "Standing"});
#line 716
 testRunner.And("I verify below \"RadioGroup\" items are displayed for \"Position:\" question in row \"" +
                    "1\" of \"Table:\" table.", ((string)(null)), table64, "And ");
#line 722
 testRunner.And("I click table row button \"OK\" of table \"Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 723
 testRunner.And("I click on \"Cancel\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("50_Checkout and verify CRF with table question with codelist group associated aft" +
            "er Reset CRF is done.")]
        public virtual void _50_CheckoutAndVerifyCRFWithTableQuestionWithCodelistGroupAssociatedAfterResetCRFIsDone_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("50_Checkout and verify CRF with table question with codelist group associated aft" +
                    "er Reset CRF is done.", null, ((string[])(null)));
#line 725
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 726
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 727
 testRunner.When("I click \"Checkout\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 728
 testRunner.And("I expand row \"1\" of table \"Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table65.AddRow(new string[] {
                        "Not Applicable"});
            table65.AddRow(new string[] {
                        "Red"});
            table65.AddRow(new string[] {
                        "Blue"});
            table65.AddRow(new string[] {
                        "Green"});
#line 729
 testRunner.Then("I verify below \"ListBox\" items are displayed for \"Color:\" question in row \"1\" of " +
                    "\"Table:\" table.", ((string)(null)), table65, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table66.AddRow(new string[] {
                        "[Blank]"});
            table66.AddRow(new string[] {
                        "Sitting"});
            table66.AddRow(new string[] {
                        "Standing"});
#line 735
 testRunner.And("I verify below \"RadioGroup\" items are displayed for \"Position:\" question in row \"" +
                    "1\" of \"Table:\" table.", ((string)(null)), table66, "And ");
#line 740
 testRunner.And("I click table row button \"OK\" of table \"Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 741
 testRunner.And("I click on \"Cancel\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("51_Reset CRF which has Codelist group associated to a autobuild table question.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("US40601.1")]
        public virtual void _51_ResetCRFWhichHasCodelistGroupAssociatedToAAutobuildTableQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("51_Reset CRF which has Codelist group associated to a autobuild table question.", null, new string[] {
                        "ObjectiveEvidence",
                        "US40601.1"});
#line 744
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 745
 testRunner.Given("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 746
 testRunner.When("I click ActionPalette Item \"Reset CRF\" in \"CRFAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 747
 testRunner.And("I click Yes button in ResetCRFModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 748
 testRunner.And("I enter reason \"CRF is reset\" in ResetCRFModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 749
 testRunner.And("I click Continue button in ResetCRFModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 750
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table67.AddRow(new string[] {
                        "CRF Reset - Visit (Week 51)/AutoBuild Form01 for patient 01-PAT - COMPLETE. View " +
                            "Summary."});
#line 751
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table67, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("52_Verify CRF with autobuild table question associated with codelist group after " +
            "Reset CRF is done.")]
        public virtual void _52_VerifyCRFWithAutobuildTableQuestionAssociatedWithCodelistGroupAfterResetCRFIsDone_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("52_Verify CRF with autobuild table question associated with codelist group after " +
                    "Reset CRF is done.", null, ((string[])(null)));
#line 756
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 757
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 758
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 759
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 760
 testRunner.And("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table68.AddRow(new string[] {
                        "No",
                        "1",
                        "Race:",
                        "Blank",
                        "ListBox",
                        ""});
            table68.AddRow(new string[] {
                        "No",
                        "1",
                        "Race:",
                        "Asian",
                        "ListBox",
                        ""});
            table68.AddRow(new string[] {
                        "No",
                        "1",
                        "Race:",
                        "Black",
                        "ListBox",
                        ""});
            table68.AddRow(new string[] {
                        "No",
                        "1",
                        "Race:",
                        "White",
                        "ListBox",
                        ""});
            table68.AddRow(new string[] {
                        "No",
                        "1",
                        "Gender:",
                        "Male",
                        "Radio",
                        ""});
            table68.AddRow(new string[] {
                        "No",
                        "1",
                        "Gender:",
                        "Female",
                        "Radio",
                        "Ok"});
#line 762
 testRunner.Then("I verify below \"Key Sequence on question #2. Table Structure is fixed. Maximum Ro" +
                    "ws is not exact. Questions (4-7) are derives.:\" table questions data in the CRF." +
                    "", ((string)(null)), table68, "Then ");
#line 770
 testRunner.And("I click on \"Cancel\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("53_Checkout Form and Verify CRF with autobuild table question associated with cod" +
            "elist group after Reset CRF is done..")]
        public virtual void _53_CheckoutFormAndVerifyCRFWithAutobuildTableQuestionAssociatedWithCodelistGroupAfterResetCRFIsDone_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("53_Checkout Form and Verify CRF with autobuild table question associated with cod" +
                    "elist group after Reset CRF is done..", null, ((string[])(null)));
#line 772
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 773
 testRunner.Given("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 774
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table69.AddRow(new string[] {
                        "No",
                        "1",
                        "Race:",
                        "Blank",
                        "ListBox",
                        ""});
            table69.AddRow(new string[] {
                        "No",
                        "1",
                        "Race:",
                        "Asian",
                        "ListBox",
                        ""});
            table69.AddRow(new string[] {
                        "No",
                        "1",
                        "Race:",
                        "Black",
                        "ListBox",
                        ""});
            table69.AddRow(new string[] {
                        "No",
                        "1",
                        "Race:",
                        "White",
                        "ListBox",
                        ""});
            table69.AddRow(new string[] {
                        "No",
                        "1",
                        "Gender:",
                        "Male",
                        "Radio",
                        ""});
            table69.AddRow(new string[] {
                        "No",
                        "1",
                        "Gender:",
                        "Female",
                        "Radio",
                        "Cancel Row"});
#line 775
 testRunner.Then("I verify below \"Key Sequence on question #2.  Table Structure is fixed.  Maximum " +
                    "Rows is not exact.  Questions (4-7) are derives.:\" table questions data in the C" +
                    "RF.", ((string)(null)), table69, "Then ");
#line 783
 testRunner.And("I click on \"Cancel\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("54_Verify Clear item on CRF with table question associated with codelist group.")]
        public virtual void _54_VerifyClearItemOnCRFWithTableQuestionAssociatedWithCodelistGroup_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("54_Verify Clear item on CRF with table question associated with codelist group.", null, ((string[])(null)));
#line 785
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 786
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 787
 testRunner.When("I click \"Checkout\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table70.AddRow(new string[] {
                        "Yes",
                        "1",
                        "Text (DT1_Text2):",
                        "Test",
                        "TextBox",
                        ""});
            table70.AddRow(new string[] {
                        "No",
                        "1",
                        "Date (DT1_Date2):",
                        "01/01/2010",
                        "TextBox",
                        ""});
            table70.AddRow(new string[] {
                        "No",
                        "1",
                        "Integer (DT1_Integer2):",
                        "10",
                        "TextBox",
                        ""});
            table70.AddRow(new string[] {
                        "No",
                        "1",
                        "Float (DT1_Float2):",
                        "10.10",
                        "TextBox",
                        ""});
            table70.AddRow(new string[] {
                        "No",
                        "1",
                        "Color",
                        "Red",
                        "ListBox",
                        ""});
            table70.AddRow(new string[] {
                        "No",
                        "1",
                        "Position",
                        "Sitting",
                        "ListBox",
                        "Save & Close Row"});
#line 789
 testRunner.And("I enter below \"Table:\" table questions data in the CRF.", ((string)(null)), table70, "And ");
#line 797
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 798
 testRunner.And("I click on \"Save & Close\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 799
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("55_Verify item cleared on CRF with  table question associated with codelist group" +
            ".")]
        public virtual void _55_VerifyItemClearedOnCRFWithTableQuestionAssociatedWithCodelistGroup_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("55_Verify item cleared on CRF with  table question associated with codelist group" +
                    ".", null, ((string[])(null)));
#line 801
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 802
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 803
 testRunner.When("I click \"Checkout\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 804
 testRunner.And("I expand row \"1\" of table \"Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 805
 testRunner.And("I clear question \"Color\" of table \"Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 806
 testRunner.And("I enter notes \"Table question is cleared\" in ClearItemModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 807
 testRunner.And("I click ok button in ClearItemModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 808
 testRunner.And("I click on \"Not Applicable\" answer value link for table \"Table:\" question \"Color\"" +
                    " in row \"1\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table71.AddRow(new string[] {
                        "Not Applicable"});
            table71.AddRow(new string[] {
                        "Red"});
            table71.AddRow(new string[] {
                        "Blue"});
            table71.AddRow(new string[] {
                        "Green"});
#line 809
 testRunner.Then("I verify below \"ListBox\" items are displayed for \"Color:\" question in row \"1\" of " +
                    "\"Table:\" table.", ((string)(null)), table71, "Then ");
#line 815
 testRunner.And("I click table row button \"Cancel Row\" of table \"Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 816
 testRunner.And("I click on \"Cancel\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("56_Verify Clear item on CRF with  flat question associated with codelist group.")]
        public virtual void _56_VerifyClearItemOnCRFWithFlatQuestionAssociatedWithCodelistGroup_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("56_Verify Clear item on CRF with  flat question associated with codelist group.", null, ((string[])(null)));
#line 818
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 819
 testRunner.Given("I expand \"Visit (Week 3)\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 820
 testRunner.When("I click \"Checkout\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table72.AddRow(new string[] {
                        "Date of Birth:",
                        "01/01/1980",
                        "TextBox"});
            table72.AddRow(new string[] {
                        "Gender:",
                        "Male",
                        "Radio"});
            table72.AddRow(new string[] {
                        "Race:",
                        "Asian",
                        "ListBox"});
            table72.AddRow(new string[] {
                        "If Race is Asian, is Patient of Japanese Ancestry?",
                        "Yes",
                        "ListBox"});
            table72.AddRow(new string[] {
                        "Was Patient Born in Japan?",
                        "No",
                        "ListBox"});
            table72.AddRow(new string[] {
                        "Number of parents born in Japan:",
                        "1",
                        "ListBox"});
            table72.AddRow(new string[] {
                        "Number of Grandparents Born in Japan?",
                        "2",
                        "ListBox"});
#line 821
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table72, "And ");
#line 830
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 831
 testRunner.And("I click on \"Save & Close\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 832
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("57_Verify item cleared on CRF with  flat question associated with codelist group." +
            "")]
        public virtual void _57_VerifyItemClearedOnCRFWithFlatQuestionAssociatedWithCodelistGroup_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("57_Verify item cleared on CRF with  flat question associated with codelist group." +
                    "", null, ((string[])(null)));
#line 834
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 835
 testRunner.Given("I expand \"Visit (Week 3)\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 836
 testRunner.When("I click \"Checkout\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 837
 testRunner.And("I click ClearItem for the flat question \"Race:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 838
 testRunner.And("I enter notes \"Flat question is cleared\" in ClearItemModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 839
 testRunner.And("I click ok button in ClearItemModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 840
 testRunner.And("I click on \"[Blank]\" answer value link for flat question \"Race:\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table73.AddRow(new string[] {
                        "[Blank]"});
            table73.AddRow(new string[] {
                        "Asian"});
            table73.AddRow(new string[] {
                        "Black"});
            table73.AddRow(new string[] {
                        "White"});
#line 841
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"Race:\" on the CRF.", ((string)(null)), table73, "Then ");
#line 847
    testRunner.And("I click on \"Cancel\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("58_Logout form DataLabs")]
        public virtual void _58_LogoutFormDataLabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("58_Logout form DataLabs", null, ((string[])(null)));
#line 849
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 850
 testRunner.When("I clik logout of Datalabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 851
 testRunner.Then("I see login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

