// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.ODM_Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ODM_Labs Yes to No and Yes to No")]
    public partial class ODM_LabsYesToNoAndYesToNoFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ODM_Labs Yes to No and No to Yes.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ODM_Labs Yes to No and Yes to No", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01_Login to Datalabs")]
        public virtual void _01_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_Login to Datalabs", null, ((string[])(null)));
#line 3
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 5
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02_Delete a study")]
        public virtual void _02_DeleteAStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02_Delete a study", null, ((string[])(null)));
#line 7
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("03_Upload and publish the study.")]
        public virtual void _03_UploadAndPublishTheStudy_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03_Upload and publish the study.", null, ((string[])(null)));
#line 11
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 12
    testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
    testRunner.And("I upload a study \"StudyPublish.zip\" with study label \"AllmappedforD1_1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
    testRunner.Then("I see study label \"AllmappedforD1_1\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("04_Add site in Site Management and associate testadmin testadmin user to 01-Site")]
        public virtual void _04_AddSiteInSiteManagementAndAssociateTestadminTestadminUserTo01_Site()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04_Add site in Site Management and associate testadmin testadmin user to 01-Site", null, ((string[])(null)));
#line 16
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 17
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.Then("I see Site details page for \"01-Site\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T07_Add a new lab test reference range record under Lab02 under WBC")]
        public virtual void T07_AddANewLabTestReferenceRangeRecordUnderLab02UnderWBC()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T07_Add a new lab test reference range record under Lab02 under WBC", null, ((string[])(null)));
#line 49
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 50
 testRunner.Given("I navigate to \"Local Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 51
    testRunner.When("I open lab with labid \"L02\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 52
 testRunner.And("I open labtest with labname \"MRRTEST1\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate",
                        "Gender",
                        "FromAgeSelect",
                        "FromAgeSet",
                        "ToAgeSelect",
                        "ToAgeSet",
                        "NormalRangeLowSelect",
                        "NormalRangeLowSet",
                        "NormalRangeHighSelect",
                        "NormalRangeHighSet",
                        "ClinicalRangeLowSelect",
                        "ClinicalRangeLowSet",
                        "ClinicalRangeHighSelect",
                        "ClinicalRangeHighSet",
                        "Unit",
                        "NA"});
            table1.AddRow(new string[] {
                        "02/03/2019",
                        "03/03/2040",
                        "Male",
                        ">",
                        "0",
                        "<",
                        "35",
                        ">",
                        "10",
                        "<",
                        "15",
                        ">",
                        "5",
                        "<",
                        "20",
                        "3Unit",
                        "False"});
#line 53
 testRunner.And("I click add and enter reference ranges of a lab test and Save and can see \"LabTes" +
                    "t Reference Range Added Successfully\" message upon each record save in Reference" +
                    "RangesPage including NA", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReferenceRangeID"});
            table2.AddRow(new string[] {
                        "{ReferenceRangeID1}"});
#line 56
 testRunner.Then("I see the reference range ids in the Reference Range Table.", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T08_Add a new lab test reference range record under Lab02 under WBC")]
        public virtual void T08_AddANewLabTestReferenceRangeRecordUnderLab02UnderWBC()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T08_Add a new lab test reference range record under Lab02 under WBC", null, ((string[])(null)));
#line 60
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 61
 testRunner.Given("I navigate to \"Local Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 62
    testRunner.When("I open lab with labid \"L02\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 63
 testRunner.And("I open labtest with labname \"MRRTEST2\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate",
                        "Gender",
                        "FromAgeSelect",
                        "FromAgeSet",
                        "ToAgeSelect",
                        "ToAgeSet",
                        "NormalRangeLowSelect",
                        "NormalRangeLowSet",
                        "NormalRangeHighSelect",
                        "NormalRangeHighSet",
                        "ClinicalRangeLowSelect",
                        "ClinicalRangeLowSet",
                        "ClinicalRangeHighSelect",
                        "ClinicalRangeHighSet",
                        "Unit",
                        "NA"});
            table3.AddRow(new string[] {
                        "02/03/2019",
                        "03/03/2040",
                        "Female",
                        ">",
                        "0",
                        "<",
                        "25",
                        ">",
                        "10",
                        "<",
                        "15",
                        ">",
                        "5",
                        "<",
                        "30",
                        "4Unit",
                        "False"});
#line 64
 testRunner.And("I click add and enter reference ranges of a lab test and Save and can see \"LabTes" +
                    "t Reference Range Added Successfully\" message upon each record save in Reference" +
                    "RangesPage including NA", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReferenceRangeID"});
            table4.AddRow(new string[] {
                        "{ReferenceRangeID2}"});
#line 67
 testRunner.Then("I see the reference range ids in the Reference Range Table.", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T09_Add patient 01-PAT from Datalabs UI")]
        public virtual void T09_AddPatient01_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T09_Add patient 01-PAT from Datalabs UI", null, ((string[])(null)));
#line 71
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 72
      testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 73
      testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table5.AddRow(new string[] {
                        "02",
                        "PAT",
                        "06/14/2019"});
#line 74
      testRunner.When("I add patient with below details.", ((string)(null)), table5, "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table6.AddRow(new string[] {
                        "02-PAT"});
#line 77
  testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T10_Add patient 01-PAT from Datalabs UI")]
        public virtual void T10_AddPatient01_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T10_Add patient 01-PAT from Datalabs UI", null, ((string[])(null)));
#line 81
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 82
      testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 83
      testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table7.AddRow(new string[] {
                        "01",
                        "PAT",
                        "06/14/2019"});
#line 84
      testRunner.When("I add patient with below details.", ((string)(null)), table7, "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table8.AddRow(new string[] {
                        "01-PAT"});
#line 87
  testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T11_Select Site1 and patient 01-PAT.")]
        public virtual void T11_SelectSite1AndPatient01_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T11_Select Site1 and patient 01-PAT.", null, ((string[])(null)));
#line 91
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 92
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 93
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 95
 testRunner.Then("I see Patient details page for \"01-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T12_Expand the Visit (Screening) and open the demographics form to update the dat" +
            "a")]
        public virtual void T12_ExpandTheVisitScreeningAndOpenTheDemographicsFormToUpdateTheData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T12_Expand the Visit (Screening) and open the demographics form to update the dat" +
                    "a", null, ((string[])(null)));
#line 97
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 98
 testRunner.When("I expand \"Event 1\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 99
    testRunner.And("I click \"Checkout\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table9.AddRow(new string[] {
                        "What is your age",
                        "31",
                        "TextBox"});
            table9.AddRow(new string[] {
                        "Age Unit",
                        "Year",
                        "ListBox"});
            table9.AddRow(new string[] {
                        "What is your gender",
                        "Male",
                        "ListBox"});
#line 100
    testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table9, "And ");
#line 105
 testRunner.And("I click on \"Save & Close\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T13_Expand the Visit (week2) event and open the FormD1 form and update the data.")]
        public virtual void T13_ExpandTheVisitWeek2EventAndOpenTheFormD1FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T13_Expand the Visit (week2) event and open the FormD1 form and update the data.", null, ((string[])(null)));
#line 108
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 109
 testRunner.When("I expand \"Visit (week2)\" to select and open \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 110
 testRunner.And("I click \"Checkout\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table10.AddRow(new string[] {
                        "Lab ID Q1 For D1",
                        "Lab02 (L02)",
                        "ListBox"});
            table10.AddRow(new string[] {
                        "CRF Collection Date Q1 For D1",
                        "06/10/2019",
                        "TextBox"});
#line 111
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table10, "And ");
#line 115
    testRunner.And("I expand row \"1\" of table \"AutoBuildQuestionsForD1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table11.AddRow(new string[] {
                        "No",
                        "1",
                        "CRF Lab Value For D1",
                        "20",
                        "TextBox",
                        ""});
            table11.AddRow(new string[] {
                        "No",
                        "1",
                        "CRF Lab (Original) Unit for D1",
                        "Unit 3",
                        "ListBox",
                        "Save & Close Row"});
#line 116
 testRunner.And("I enter below \"AutoBuildQuestionsForD1:\" autobuild table questions data in the CR" +
                    "F.", ((string)(null)), table11, "And ");
#line 120
 testRunner.And("I click on \"Save & Close\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T14_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T14_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T14_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 124
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 125
 testRunner.Given("I save the Event XML data in \"StudyPublishActual01.xml\" file by executing the que" +
                    "ry \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 ord" +
                    "er by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 126
 testRunner.And("I have the XML file \"StudyPublishExpected01.xml\" available in the project folder." +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
 testRunner.And("I have the XML file \"StudyPublishActual01.xml\" available in the Test XML Files fo" +
                    "lder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table12.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table12.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table12.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table12.AddRow(new string[] {
                        "",
                        "FileOID"});
            table12.AddRow(new string[] {
                        "",
                        "SourceID"});
            table12.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 128
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T15_Select Site1 and patient 01-PAT.")]
        public virtual void T15_SelectSite1AndPatient01_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T15_Select Site1 and patient 01-PAT.", null, ((string[])(null)));
#line 137
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 138
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 139
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 140
 testRunner.When("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 141
 testRunner.Then("I see Patient details page for \"02-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T16_Expand the Visit (Screening) and open the demographics form to update the dat" +
            "a")]
        public virtual void T16_ExpandTheVisitScreeningAndOpenTheDemographicsFormToUpdateTheData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T16_Expand the Visit (Screening) and open the demographics form to update the dat" +
                    "a", null, ((string[])(null)));
#line 143
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 144
 testRunner.When("I expand \"Event 1\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 145
    testRunner.And("I click \"Checkout\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table13.AddRow(new string[] {
                        "What is your age",
                        "20",
                        "TextBox"});
            table13.AddRow(new string[] {
                        "Age Unit",
                        "Year",
                        "ListBox"});
            table13.AddRow(new string[] {
                        "What is your gender",
                        "Female",
                        "ListBox"});
#line 146
    testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table13, "And ");
#line 151
 testRunner.And("I click on \"Save & Close\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T17_Expand the Visit (week2) event and open the FormD1 form and update the data.")]
        public virtual void T17_ExpandTheVisitWeek2EventAndOpenTheFormD1FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T17_Expand the Visit (week2) event and open the FormD1 form and update the data.", null, ((string[])(null)));
#line 154
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 155
 testRunner.When("I expand \"Visit (week2)\" to select and open \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 156
 testRunner.And("I click \"Checkout\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table14.AddRow(new string[] {
                        "Lab ID Q1 For D1",
                        "Lab02 (L02)",
                        "ListBox"});
            table14.AddRow(new string[] {
                        "CRF Collection Date Q1 For D1",
                        "06/10/2019",
                        "TextBox"});
#line 157
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table14, "And ");
#line 161
    testRunner.And("I expand row \"2\" of table \"AutoBuildQuestionsForD1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table15.AddRow(new string[] {
                        "No",
                        "2",
                        "CRF Lab Value For D1",
                        "30",
                        "TextBox",
                        ""});
            table15.AddRow(new string[] {
                        "No",
                        "2",
                        "CRF Lab (Original) Unit for D1",
                        "Unit 4",
                        "ListBox",
                        "Save & Close Row"});
#line 162
 testRunner.And("I enter below \"AutoBuildQuestionsForD1:\" autobuild table questions data in the CR" +
                    "F.", ((string)(null)), table15, "And ");
#line 166
 testRunner.And("I click on \"Save & Close\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T18_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T18_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T18_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 170
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 171
 testRunner.Given("I save the Event XML data in \"StudyPublishActual02.xml\" file by executing the que" +
                    "ry \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 ord" +
                    "er by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 172
 testRunner.And("I have the XML file \"StudyPublishExpected02.xml\" available in the project folder." +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 173
 testRunner.And("I have the XML file \"StudyPublishActual02.xml\" available in the Test XML Files fo" +
                    "lder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table16.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table16.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table16.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table16.AddRow(new string[] {
                        "",
                        "FileOID"});
            table16.AddRow(new string[] {
                        "",
                        "SourceID"});
            table16.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 174
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table16, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T19_Upload and Stage a Study which has major study changes")]
        public virtual void T19_UploadAndStageAStudyWhichHasMajorStudyChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T19_Upload and Stage a Study which has major study changes", null, ((string[])(null)));
#line 185
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 186
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 187
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 188
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
 testRunner.And("I upload study \"StudyPublish_Yes_No.zip\" with Label \"Major1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 192
 testRunner.And("I click continue in modal dialog having title \"Confirm\" and partial message \"Uplo" +
                    "aded study version has Local Labs as Not Enabled which is different from earlier" +
                    " study version.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 193
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 194
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
 testRunner.Then("I see notes \"Note: Major changes have been detected to the study design. Patient " +
                    "migration will be required.\" in StudyVersionPropertiesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T20_Publish the study file that has Major changes")]
        public virtual void T20_PublishTheStudyFileThatHasMajorChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T20_Publish the study file that has Major changes", null, ((string[])(null)));
#line 198
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 199
 testRunner.When("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 200
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 201
 testRunner.And("I select patient migration option \"Do not migrate\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 202
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 203
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table17.AddRow(new string[] {
                        "Publishing of Study file (Major1) - complete."});
#line 204
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table17, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T21_MigragePatients")]
        public virtual void T21_MigragePatients()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T21_MigragePatients", null, ((string[])(null)));
#line 208
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 209
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 210
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 211
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 212
 testRunner.And("I click ActionPalette Item \"Migrate Patients\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table18.AddRow(new string[] {
                        "01-PAT"});
#line 213
 testRunner.And("I select patients in MigratePatientsPage", ((string)(null)), table18, "And ");
#line 216
 testRunner.And("I click save button in MigratePatientsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table19.AddRow(new string[] {
                        "Migration of Site 01 for Study file (Major1) - complete. 1 out of 1 patients migr" +
                            "ated successfully. To review see migration report."});
#line 218
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table19, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T22_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T22_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T22_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 223
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 224
 testRunner.Given("I save the Event XML data in \"StudyPublishActual03.xml\" file by executing the que" +
                    "ry \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 ord" +
                    "er by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 225
 testRunner.And("I have the XML file \"StudyPublishExpected03.xml\" available in the project folder." +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 226
 testRunner.And("I have the XML file \"StudyPublishActual03.xml\" available in the Test XML Files fo" +
                    "lder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table20.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table20.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table20.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table20.AddRow(new string[] {
                        "",
                        "FileOID"});
            table20.AddRow(new string[] {
                        "",
                        "SourceID"});
            table20.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 227
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table20, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T23_Expand the Visit (week2) event and open the FormD1 form and update the data.")]
        public virtual void T23_ExpandTheVisitWeek2EventAndOpenTheFormD1FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T23_Expand the Visit (week2) event and open the FormD1 form and update the data.", null, ((string[])(null)));
#line 236
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 237
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 238
    testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 239
    testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 240
 testRunner.And("I expand \"Visit (week2)\" to select and open \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 241
 testRunner.When("I click \"Checkout\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 242
    testRunner.And("I expand row \"1\" of table \"AutoBuildQuestionsForD1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table21.AddRow(new string[] {
                        "No",
                        "1",
                        "CRF Lab (Original) Unit for D1",
                        "Unit 3",
                        "Unit 4",
                        "SEC",
                        "ListBox",
                        "Save & Close Row"});
#line 243
    testRunner.And("I enter below \"AutoBuildQuestionsForD1:\" table questions data in the CRF.", ((string)(null)), table21, "And ");
#line 246
 testRunner.And("I click on \"Save & Close\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 247
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T24_Expand the Visit (week2) event and open the FormD1 form and update the data.")]
        public virtual void T24_ExpandTheVisitWeek2EventAndOpenTheFormD1FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T24_Expand the Visit (week2) event and open the FormD1 form and update the data.", null, ((string[])(null)));
#line 249
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 250
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 251
    testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 252
    testRunner.And("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 253
 testRunner.And("I expand \"Visit (week2)\" to select and open \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 254
 testRunner.When("I click \"Checkout\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 255
    testRunner.And("I expand row \"2\" of table \"AutoBuildQuestionsForD1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table22.AddRow(new string[] {
                        "No",
                        "2",
                        "CRF Lab (Original) Unit for D1",
                        "Unit 4",
                        "Unit 5",
                        "SEC",
                        "ListBox",
                        "Save & Close Row"});
#line 256
    testRunner.And("I enter below \"AutoBuildQuestionsForD1:\" table questions data in the CRF.", ((string)(null)), table22, "And ");
#line 259
 testRunner.And("I click on \"Save & Close\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 260
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T25_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T25_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T25_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 263
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 264
 testRunner.Given("I save the Event XML data in \"StudyPublishActual04.xml\" file by executing the que" +
                    "ry \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 ord" +
                    "er by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 265
 testRunner.And("I have the XML file \"StudyPublishExpected04.xml\" available in the project folder." +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 266
 testRunner.And("I have the XML file \"StudyPublishActual04.xml\" available in the Test XML Files fo" +
                    "lder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table23.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table23.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table23.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table23.AddRow(new string[] {
                        "",
                        "FileOID"});
            table23.AddRow(new string[] {
                        "",
                        "SourceID"});
            table23.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 267
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table23, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T26_MigragePatients")]
        public virtual void T26_MigragePatients()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T26_MigragePatients", null, ((string[])(null)));
#line 276
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 277
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 278
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 279
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 280
 testRunner.And("I click ActionPalette Item \"Migrate Patients\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table24.AddRow(new string[] {
                        "02-PAT"});
#line 281
 testRunner.And("I select patients in MigratePatientsPage", ((string)(null)), table24, "And ");
#line 284
 testRunner.And("I click save button in MigratePatientsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 285
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table25.AddRow(new string[] {
                        "Migration of Site 01 for Study file (Major1) - complete. 1 out of 1 patients migr" +
                            "ated successfully. To review see migration report."});
#line 286
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table25, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T27_Upload and Stage a Study which has major study changes")]
        public virtual void T27_UploadAndStageAStudyWhichHasMajorStudyChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T27_Upload and Stage a Study which has major study changes", null, ((string[])(null)));
#line 292
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 293
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 294
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 295
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 296
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 297
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 298
 testRunner.And("I upload study \"Study Publish_No_Yes.zip\" with Label \"Major1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 299
 testRunner.And("I click continue in modal dialog having title \"Confirm\" and partial message \"Uplo" +
                    "aded study version has Local Labs as Enabled which is different from earlier stu" +
                    "dy version.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 300
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 301
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 302
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 303
 testRunner.Then("I see notes \"Note: Major changes have been detected to the study design. Patient " +
                    "migration will be required.\" in StudyVersionPropertiesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T28_Publish the study file that has Major changes")]
        public virtual void T28_PublishTheStudyFileThatHasMajorChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T28_Publish the study file that has Major changes", null, ((string[])(null)));
#line 305
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 306
 testRunner.When("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 307
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 308
 testRunner.And("I select patient migration option \"Do not migrate\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 309
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 310
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table26.AddRow(new string[] {
                        "Publishing of Study file (Major1) - complete."});
#line 311
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table26, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T29_MigragePatients")]
        public virtual void T29_MigragePatients()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T29_MigragePatients", null, ((string[])(null)));
#line 315
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 316
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 317
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 318
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 319
 testRunner.And("I click ActionPalette Item \"Migrate Patients\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table27.AddRow(new string[] {
                        "01-PAT"});
#line 320
 testRunner.And("I select patients in MigratePatientsPage", ((string)(null)), table27, "And ");
#line 323
 testRunner.And("I click save button in MigratePatientsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 324
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table28.AddRow(new string[] {
                        "Migration of Site 01 for Study file (Major1) - complete. 1 out of 1 patients migr" +
                            "ated successfully. To review see migration report."});
#line 325
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table28, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T30_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T30_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T30_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 330
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 331
 testRunner.Given("I save the Event XML data in \"StudyPublishActual05.xml\" file by executing the que" +
                    "ry \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 ord" +
                    "er by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 332
 testRunner.And("I have the XML file \"StudyPublishExpected05.xml\" available in the project folder." +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 333
 testRunner.And("I have the XML file \"StudyPublishActual05.xml\" available in the Test XML Files fo" +
                    "lder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table29.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table29.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table29.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table29.AddRow(new string[] {
                        "",
                        "FileOID"});
            table29.AddRow(new string[] {
                        "",
                        "SourceID"});
            table29.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 334
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table29, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T31_Expand the Visit (week2) event and open the FormD1 form and update the data.")]
        public virtual void T31_ExpandTheVisitWeek2EventAndOpenTheFormD1FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T31_Expand the Visit (week2) event and open the FormD1 form and update the data.", null, ((string[])(null)));
#line 343
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 344
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 345
    testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 346
    testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 347
 testRunner.And("I expand \"Visit (week2)\" to select and open \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 348
 testRunner.When("I click \"Checkout\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 349
    testRunner.And("I expand row \"1\" of table \"AutoBuildQuestionsForD1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table30.AddRow(new string[] {
                        "No",
                        "1",
                        "CRF Lab (Original) Unit for D1",
                        "Unit 4",
                        "Unit 3",
                        "SEC",
                        "ListBox",
                        "Save & Close Row"});
#line 350
    testRunner.And("I enter below \"AutoBuildQuestionsForD1:\" table questions data in the CRF.", ((string)(null)), table30, "And ");
#line 353
 testRunner.And("I click on \"Save & Close\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 354
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T32_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T32_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T32_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 357
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 358
 testRunner.Given("I save the Event XML data in \"StudyPublishActual06.xml\" file by executing the que" +
                    "ry \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 ord" +
                    "er by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 359
 testRunner.And("I have the XML file \"StudyPublishExpected06.xml\" available in the project folder." +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 360
 testRunner.And("I have the XML file \"StudyPublishActual06.xml\" available in the Test XML Files fo" +
                    "lder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table31.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table31.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table31.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table31.AddRow(new string[] {
                        "",
                        "FileOID"});
            table31.AddRow(new string[] {
                        "",
                        "SourceID"});
            table31.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 361
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table31, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T33_Expand the Visit (week2) event and open the FormD1 form and update the data.")]
        public virtual void T33_ExpandTheVisitWeek2EventAndOpenTheFormD1FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T33_Expand the Visit (week2) event and open the FormD1 form and update the data.", null, ((string[])(null)));
#line 370
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 371
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 372
    testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 373
    testRunner.And("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 374
 testRunner.And("I expand \"Visit (week2)\" to select and open \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 375
 testRunner.When("I click \"Checkout\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 376
 testRunner.And("I expand row \"2\" of table \"AutoBuildQuestionsForD1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table32.AddRow(new string[] {
                        "No",
                        "2",
                        "CRF Lab (Original) Unit for D1",
                        "Unit 5",
                        "Unit 4",
                        "SEC",
                        "ListBox",
                        "Save & Close Row"});
#line 377
    testRunner.And("I enter below \"AutoBuildQuestionsForD1:\" table questions data in the CRF.", ((string)(null)), table32, "And ");
#line 380
 testRunner.And("I click on \"Save & Close\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 381
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T34_MigragePatients")]
        public virtual void T34_MigragePatients()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T34_MigragePatients", null, ((string[])(null)));
#line 383
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 384
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 385
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 386
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 387
 testRunner.And("I click ActionPalette Item \"Migrate Patients\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table33.AddRow(new string[] {
                        "02-PAT"});
#line 388
 testRunner.And("I select patients in MigratePatientsPage", ((string)(null)), table33, "And ");
#line 391
 testRunner.And("I click save button in MigratePatientsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 392
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table34.AddRow(new string[] {
                        "Migration of Site 01 for Study file (Major1) - complete. 1 out of 1 patients migr" +
                            "ated successfully. To review see migration report."});
#line 393
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table34, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T35_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T35_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T35_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 398
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 399
 testRunner.Given("I save the Event XML data in \"StudyPublishActual07.xml\" file by executing the que" +
                    "ry \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 ord" +
                    "er by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 400
 testRunner.And("I have the XML file \"StudyPublishExpected07.xml\" available in the project folder." +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 401
 testRunner.And("I have the XML file \"StudyPublishActual07.xml\" available in the Test XML Files fo" +
                    "lder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table35.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table35.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table35.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table35.AddRow(new string[] {
                        "",
                        "FileOID"});
            table35.AddRow(new string[] {
                        "",
                        "SourceID"});
            table35.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 402
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table35, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T36_Delete a study")]
        public virtual void T36_DeleteAStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T36_Delete a study", null, ((string[])(null)));
#line 412
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 413
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 414
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T37_Upload and publish the study.")]
        public virtual void T37_UploadAndPublishTheStudy_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T37_Upload and publish the study.", null, ((string[])(null)));
#line 416
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 417
    testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 418
    testRunner.And("I upload a study \"StudyPublish.zip\" with study label \"AllmappedforD1_1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 419
    testRunner.Then("I see study label \"AllmappedforD1_1\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T38_Add a new lab test reference range record under Lab02 under WBC")]
        public virtual void T38_AddANewLabTestReferenceRangeRecordUnderLab02UnderWBC()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T38_Add a new lab test reference range record under Lab02 under WBC", null, ((string[])(null)));
#line 421
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 422
 testRunner.Given("I navigate to \"Local Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 423
    testRunner.When("I open lab with labid \"L02\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 424
 testRunner.And("I open labtest with labname \"MRRTEST1\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate",
                        "Gender",
                        "FromAgeSelect",
                        "FromAgeSet",
                        "ToAgeSelect",
                        "ToAgeSet",
                        "NormalRangeLowSelect",
                        "NormalRangeLowSet",
                        "NormalRangeHighSelect",
                        "NormalRangeHighSet",
                        "ClinicalRangeLowSelect",
                        "ClinicalRangeLowSet",
                        "ClinicalRangeHighSelect",
                        "ClinicalRangeHighSet",
                        "Unit",
                        "NA"});
            table36.AddRow(new string[] {
                        "02/03/2019",
                        "03/03/2040",
                        "Male",
                        ">",
                        "0",
                        "<",
                        "35",
                        ">",
                        "10",
                        "<",
                        "15",
                        ">",
                        "5",
                        "<",
                        "20",
                        "3Unit",
                        "False"});
#line 425
 testRunner.And("I click add and enter reference ranges of a lab test and Save and can see \"LabTes" +
                    "t Reference Range Added Successfully\" message upon each record save in Reference" +
                    "RangesPage including NA", ((string)(null)), table36, "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReferenceRangeID"});
            table37.AddRow(new string[] {
                        "{ReferenceRangeID1}"});
#line 428
 testRunner.Then("I see the reference range ids in the Reference Range Table.", ((string)(null)), table37, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T39_Add patient 01-PAT from Datalabs UI")]
        public virtual void T39_AddPatient01_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T39_Add patient 01-PAT from Datalabs UI", null, ((string[])(null)));
#line 432
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 433
      testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 434
      testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table38.AddRow(new string[] {
                        "01",
                        "PAT",
                        "06/14/2019"});
#line 435
      testRunner.When("I add patient with below details.", ((string)(null)), table38, "When ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table39.AddRow(new string[] {
                        "01-PAT"});
#line 438
  testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table39, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T40_Select Site1 and patient 01-PAT.")]
        public virtual void T40_SelectSite1AndPatient01_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T40_Select Site1 and patient 01-PAT.", null, ((string[])(null)));
#line 442
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 443
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 444
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 445
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 446
 testRunner.Then("I see Patient details page for \"01-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T41_Expand the Visit (Screening) and open the demographics form to update the dat" +
            "a")]
        public virtual void T41_ExpandTheVisitScreeningAndOpenTheDemographicsFormToUpdateTheData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T41_Expand the Visit (Screening) and open the demographics form to update the dat" +
                    "a", null, ((string[])(null)));
#line 448
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 449
 testRunner.When("I expand \"Event 1\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 450
    testRunner.And("I click \"Checkout\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table40.AddRow(new string[] {
                        "What is your age",
                        "31",
                        "TextBox"});
            table40.AddRow(new string[] {
                        "Age Unit",
                        "Year",
                        "ListBox"});
            table40.AddRow(new string[] {
                        "What is your gender",
                        "Male",
                        "ListBox"});
#line 451
    testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table40, "And ");
#line 456
 testRunner.And("I click on \"Save & Close\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 457
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T42_Expand the Visit (week2) event and open the FormD1 form and update the data.")]
        public virtual void T42_ExpandTheVisitWeek2EventAndOpenTheFormD1FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T42_Expand the Visit (week2) event and open the FormD1 form and update the data.", null, ((string[])(null)));
#line 459
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 460
 testRunner.When("I expand \"Visit (week2)\" to select and open \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 461
 testRunner.And("I click \"Checkout\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table41.AddRow(new string[] {
                        "Lab ID Q1 For D1",
                        "Lab02 (L02)",
                        "ListBox"});
            table41.AddRow(new string[] {
                        "CRF Collection Date Q1 For D1",
                        "06/10/2019",
                        "TextBox"});
#line 462
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table41, "And ");
#line 466
    testRunner.And("I expand row \"1\" of table \"AutoBuildQuestionsForD1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table42.AddRow(new string[] {
                        "No",
                        "1",
                        "CRF Lab Value For D1",
                        "20",
                        "TextBox",
                        ""});
            table42.AddRow(new string[] {
                        "No",
                        "1",
                        "CRF Lab (Original) Unit for D1",
                        "Unit 3",
                        "ListBox",
                        "Save & Close Row"});
#line 467
 testRunner.And("I enter below \"AutoBuildQuestionsForD1:\" autobuild table questions data in the CR" +
                    "F.", ((string)(null)), table42, "And ");
#line 471
 testRunner.And("I click on \"Save & Close\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 472
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T43_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T43_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T43_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 475
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 476
 testRunner.Given("I save the Event XML data in \"StudyPublishActual08.xml\" file by executing the que" +
                    "ry \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 ord" +
                    "er by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 477
 testRunner.And("I have the XML file \"StudyPublishExpected08.xml\" available in the project folder." +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 478
 testRunner.And("I have the XML file \"StudyPublishActual08.xml\" available in the Test XML Files fo" +
                    "lder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table43.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table43.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table43.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table43.AddRow(new string[] {
                        "",
                        "FileOID"});
            table43.AddRow(new string[] {
                        "",
                        "SourceID"});
            table43.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 479
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table43, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T44_Upload and Stage a Study which has major study changes")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US32215.1,")]
        [NUnit.Framework.CategoryAttribute("US32215.2,")]
        [NUnit.Framework.CategoryAttribute("US32215.3,")]
        [NUnit.Framework.CategoryAttribute("US32215.4,")]
        [NUnit.Framework.CategoryAttribute("US32215.5")]
        public virtual void T44_UploadAndStageAStudyWhichHasMajorStudyChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T44_Upload and Stage a Study which has major study changes", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US32215.1,",
                        "US32215.2,",
                        "US32215.3,",
                        "US32215.4,",
                        "US32215.5"});
#line 491
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 492
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 493
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 494
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 495
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 496
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 497
 testRunner.And("I upload study \"StudyPublish_Yes_No.zip\" with Label \"Major1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 498
 testRunner.And("I click continue in modal dialog having title \"Confirm\" and partial message \"Uplo" +
                    "aded study version has Local Labs as Not Enabled which is different from earlier" +
                    " study version.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 499
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 500
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 501
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 502
 testRunner.Then("I see notes \"Note: Major changes have been detected to the study design. Patient " +
                    "migration will be required.\" in StudyVersionPropertiesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T45_Publish the study file that has Major changes")]
        public virtual void T45_PublishTheStudyFileThatHasMajorChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T45_Publish the study file that has Major changes", null, ((string[])(null)));
#line 504
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 505
 testRunner.When("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 506
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 507
 testRunner.And("I select patient migration option \"Migrate all patients\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 508
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 509
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table44.AddRow(new string[] {
                        "Migration of Site 01 for Study file (Major1) - complete. 1 out of 1 patients migr" +
                            "ated successfully. To review see migration report."});
            table44.AddRow(new string[] {
                        "Publishing of Study file (Major1) - complete."});
#line 510
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table44, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T46_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T46_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T46_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 516
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 517
 testRunner.Given("I save the Event XML data in \"StudyPublishActual09.xml\" file by executing the que" +
                    "ry \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 ord" +
                    "er by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 518
 testRunner.And("I have the XML file \"StudyPublishExpected09.xml\" available in the project folder." +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 519
 testRunner.And("I have the XML file \"StudyPublishActual09.xml\" available in the Test XML Files fo" +
                    "lder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table45.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table45.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table45.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table45.AddRow(new string[] {
                        "",
                        "FileOID"});
            table45.AddRow(new string[] {
                        "",
                        "SourceID"});
            table45.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 520
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table45, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T47_Expand the Visit (week2) event and open the FormD1 form and update the data.")]
        public virtual void T47_ExpandTheVisitWeek2EventAndOpenTheFormD1FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T47_Expand the Visit (week2) event and open the FormD1 form and update the data.", null, ((string[])(null)));
#line 529
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 530
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 531
    testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 532
    testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 533
 testRunner.And("I expand \"Visit (week2)\" to select and open \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 534
 testRunner.When("I click \"Checkout\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 535
    testRunner.And("I expand row \"1\" of table \"AutoBuildQuestionsForD1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table46.AddRow(new string[] {
                        "No",
                        "1",
                        "CRF Lab (Original) Unit for D1",
                        "Unit 3",
                        "Unit 4",
                        "SEC",
                        "ListBox",
                        "Save & Close Row"});
#line 536
    testRunner.And("I enter below \"AutoBuildQuestionsForD1:\" table questions data in the CRF.", ((string)(null)), table46, "And ");
#line 539
 testRunner.And("I click on \"Save & Close\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 540
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T48_Upload and Stage a Study which has major study changes")]
        public virtual void T48_UploadAndStageAStudyWhichHasMajorStudyChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T48_Upload and Stage a Study which has major study changes", null, ((string[])(null)));
#line 544
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 545
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 546
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 547
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 548
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 549
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 550
 testRunner.And("I upload study \"Study Publish_No_Yes.zip\" with Label \"Major1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 551
 testRunner.And("I click continue in modal dialog having title \"Confirm\" and partial message \"Uplo" +
                    "aded study version has Local Labs as Enabled which is different from earlier stu" +
                    "dy version.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 552
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 553
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 554
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 555
 testRunner.Then("I see notes \"Note: Major changes have been detected to the study design. Patient " +
                    "migration will be required.\" in StudyVersionPropertiesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T49_Publish the study file that has Major changes")]
        public virtual void T49_PublishTheStudyFileThatHasMajorChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T49_Publish the study file that has Major changes", null, ((string[])(null)));
#line 557
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 558
 testRunner.When("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 559
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 560
 testRunner.And("I select patient migration option \"Migrate all patients\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 561
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 562
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table47.AddRow(new string[] {
                        "Migration of Site 01 for Study file (Major1) - complete. 1 out of 1 patients migr" +
                            "ated successfully. To review see migration report."});
            table47.AddRow(new string[] {
                        "Publishing of Study file (Major1) - complete."});
#line 563
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table47, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T50_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T50_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T50_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 569
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 570
 testRunner.Given("I save the Event XML data in \"StudyPublishActual10.xml\" file by executing the que" +
                    "ry \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 ord" +
                    "er by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 571
 testRunner.And("I have the XML file \"StudyPublishExpected10.xml\" available in the project folder." +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 572
 testRunner.And("I have the XML file \"StudyPublishActual10.xml\" available in the Test XML Files fo" +
                    "lder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table48.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table48.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table48.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table48.AddRow(new string[] {
                        "",
                        "FileOID"});
            table48.AddRow(new string[] {
                        "",
                        "SourceID"});
            table48.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 573
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table48, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T51_Expand the Visit (week2) event and open the FormD1 form and update the data.")]
        public virtual void T51_ExpandTheVisitWeek2EventAndOpenTheFormD1FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T51_Expand the Visit (week2) event and open the FormD1 form and update the data.", null, ((string[])(null)));
#line 582
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 583
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 584
    testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 585
    testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 586
 testRunner.And("I expand \"Visit (week2)\" to select and open \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 587
 testRunner.When("I click \"Checkout\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 588
    testRunner.And("I expand row \"1\" of table \"AutoBuildQuestionsForD1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table49.AddRow(new string[] {
                        "No",
                        "1",
                        "CRF Lab (Original) Unit for D1",
                        "Unit 4",
                        "Unit 3",
                        "SEC",
                        "ListBox",
                        "Save & Close Row"});
#line 589
    testRunner.And("I enter below \"AutoBuildQuestionsForD1:\" table questions data in the CRF.", ((string)(null)), table49, "And ");
#line 592
 testRunner.And("I click on \"Save & Close\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 593
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T52_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T52_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T52_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 596
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 597
 testRunner.Given("I save the Event XML data in \"StudyPublishActual11.xml\" file by executing the que" +
                    "ry \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 ord" +
                    "er by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 598
 testRunner.And("I have the XML file \"StudyPublishExpected11.xml\" available in the project folder." +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 599
 testRunner.And("I have the XML file \"StudyPublishActual11.xml\" available in the Test XML Files fo" +
                    "lder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table50.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table50.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table50.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table50.AddRow(new string[] {
                        "",
                        "FileOID"});
            table50.AddRow(new string[] {
                        "",
                        "SourceID"});
            table50.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 600
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table50, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

