// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.ODM_Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DataLabs_V5.7.0_ODM Eventing for FlagUpdateOnFormAndItem")]
    public partial class DataLabs_V5_7_0_ODMEventingForFlagUpdateOnFormAndItemFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "FlagUpdateOnFormAndItem.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DataLabs_V5.7.0_ODM Eventing for FlagUpdateOnFormAndItem", @"	Test Summary:
	1. Verification of ODM eventing xml for Flag Update on Question item
	2. Verification of ODM eventing xml for Flag Update on Form
	3. Verification of ODM eventing xml for Flag Update on Required and Non Required Items
	4. Verification of ODM eventing xml for Flag Update on Mutliple CRFs
	5. Verification of ODM eventing xml for Flag Update on Data Change", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T01_Login to Datalabs")]
        public virtual void T01_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T01_Login to Datalabs", null, ((string[])(null)));
#line 9
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 10
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T02_Delete the current study")]
        public virtual void T02_DeleteTheCurrentStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T02_Delete the current study", null, ((string[])(null)));
#line 13
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 14
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T03_Publish the study")]
        public virtual void T03_PublishTheStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T03_Publish the study", null, ((string[])(null)));
#line 17
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 18
 testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
 testRunner.And("I upload a study \"Test3210_Base2_ODMStudy.Zip\" with study label \"TestBase\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.Then("I see study label \"Test3210_Query Smoke Test\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T04_Create a SD Verify Plan with following DataGroups")]
        public virtual void T04_CreateASDVerifyPlanWithFollowingDataGroups()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T04_Create a SD Verify Plan with following DataGroups", null, ((string[])(null)));
#line 22
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 23
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.And("I click Link \"Flag Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And("I select \"SD-Verify\" flag type from Flag Management page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And("I click Add Plan button to create a new plan.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.And("I enter Plan Name as \"SDVPlan1\" and label as \"SDVPlanL1\" on Create Plan page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.And("I click \"Next\" button on Create Plan page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And("I enter Data Group Name as \"SDVDG1\" and Data Group label as \"SDVDGL1\" on Create F" +
                    "lag Data Group page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "FormName",
                        "QuestionNum",
                        "QuestionPrompt",
                        "ProtocolVersion"});
            table1.AddRow(new string[] {
                        "Form1",
                        "1.",
                        "Sample text question:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Form1",
                        "2.",
                        "Sample select question:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Form1",
                        "3.",
                        "Sample radio question",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Form1",
                        "4.",
                        "Sample integer question:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Form1",
                        "7.R.1.",
                        "Drug Name:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Form1",
                        "7.R.2.",
                        "Condition:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Form1",
                        "7.R.3.",
                        "Start Date:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Form1",
                        "7.R.4.",
                        "Stop Date:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Demographics",
                        "4.",
                        "If Race is Other, Specifiy:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Demographics",
                        "4.1.",
                        "Dictionary Term verbatim for RACEO:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Demographics",
                        "4.2.",
                        "Encoding Type for RACEO:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Demographics",
                        "4.3.",
                        "RACE + RACE01 combined for reporting purposes:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Demographics",
                        "5.",
                        "If Race is Asian, is Patient of Japanese Ancestry?",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Demographics",
                        "6.",
                        "Was Patient Born in Japan?",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Demographics",
                        "7.",
                        "Number of parents born in Japan:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Demographics",
                        "8.",
                        "Number of Grandparents Born in Japan?",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Demographics",
                        "8.1.",
                        "Treatment Group Code:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Demographics",
                        "8.2.",
                        "Treatment Group Description:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Demographics",
                        "8.3.",
                        "Age at Study Start:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Demographics",
                        "8.4.",
                        "Age Units at Study Start:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Vital Signs",
                        "3.",
                        "Time of Exam (24 hour clock):",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Vital Signs",
                        "4.",
                        "Time of Exam (minutes):",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Vital Signs",
                        "7.",
                        "Waist Circumference:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Vital Signs",
                        "8.",
                        "Waist Circumference Units:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Vital Signs",
                        "9.",
                        "Height:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Vital Signs",
                        "10.",
                        "Height Units:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Vital Signs",
                        "11.",
                        "Temperature:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Vital Signs",
                        "12.",
                        "Temperature Units:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Vital Signs",
                        "13.",
                        "Temperature Method:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Vital Signs",
                        "14.",
                        "Systolic (mmHg):",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Vital Signs",
                        "15.",
                        "Diastolic (mmHg):",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Vital Signs",
                        "16.",
                        "Blood Pressure Position:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Vital Signs",
                        "17.",
                        "Pulse Rate (Beats/Min):",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Vital Signs",
                        "18.",
                        "Pulse Position:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "Vital Signs",
                        "19.",
                        "Respiratory Rate (Breaths/Min):",
                        "1.0"});
            table1.AddRow(new string[] {
                        "AutoBuild Form01",
                        "1.R.1.",
                        "Race:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "AutoBuild Form01",
                        "1.R.2.",
                        "Region of Body:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "AutoBuild Form01",
                        "1.R.3.",
                        "Gender:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "AutoBuild Form01",
                        "2.R.1.",
                        "Drug Name:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "AutoBuild Form01",
                        "2.R.2.",
                        "Placebo:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "AutoBuild Form01",
                        "2.R.3.",
                        "Time of Day that the drug is taken:",
                        "1.0"});
            table1.AddRow(new string[] {
                        "AutoBuild Form01",
                        "2.R.4.",
                        "Name: {Required - Sent}",
                        "1.0"});
            table1.AddRow(new string[] {
                        "AutoBuild Form01",
                        "2.R.5.",
                        "Enter integer value between 10 and 99999: {Normal Range - Sent} (Condition - Q2 i" +
                            "s in list \"Yes\" or \"No\")",
                        "1.0"});
            table1.AddRow(new string[] {
                        "AutoBuild Form01",
                        "2.R.6.",
                        "Enter patient date of birth:{Not Answered - Sent} (Condition - Q2 is not equal to" +
                            " \"No\")",
                        "1.0"});
#line 30
 testRunner.And("I select checkbox for form questions in protocol version.", ((string)(null)), table1, "And ");
#line 76
 testRunner.And("I click \"Next\" button on Create Flag Data Group page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
 testRunner.And("I click on Save & Close button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
 testRunner.Then("I verify the success message displayed as \"Plan saved successfully\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T05_Assign Plan to Study")]
        public virtual void T05_AssignPlanToStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T05_Assign Plan to Study", null, ((string[])(null)));
#line 80
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 81
 testRunner.When("I select the \"Assign Plan to Study\" link on the Manage Plans & Flag Data Groups p" +
                    "age.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 82
 testRunner.And("I select \"SDVPlanL1 (24%)\" in the Select Plan dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
 testRunner.When("I select \"Entry correction\" in Reason for change dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 84
 testRunner.When("I enter text \"New SDV FLag\" in Additional Notes text box.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 85
 testRunner.When("I click \"Save\" button on Assign Plan to Study page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 86
 testRunner.Then("I verify the success message displayed as \"Plan assigned successfully.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T06_Create a D Review Plan with following DataGroups")]
        public virtual void T06_CreateADReviewPlanWithFollowingDataGroups()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T06_Create a D Review Plan with following DataGroups", null, ((string[])(null)));
#line 88
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 89
 testRunner.When("I click breadcrumb \"Flag Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 90
 testRunner.And("I select \"M-Review\" flag type from Flag Management page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
 testRunner.And("I click Add Plan button to create a new plan.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.And("I enter Plan Name as \"MRPlan1\" and label as \"MRPlanL1\" on Create Plan page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.And("I click \"Next\" button on Create Plan page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.And("I enter Data Group Name as \"MRDG1\" and Data Group label as \"MRDGL1\" on Create Fla" +
                    "g Data Group page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "FormName",
                        "QuestionNum",
                        "QuestionPrompt",
                        "ProtocolVersion"});
            table2.AddRow(new string[] {
                        "Form1",
                        "1.",
                        "Sample text question:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Form1",
                        "2.",
                        "Sample select question:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Form1",
                        "3.",
                        "Sample radio question",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Form1",
                        "4.",
                        "Sample integer question:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Form1",
                        "7.R.1.",
                        "Drug Name:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Form1",
                        "7.R.2.",
                        "Condition:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Form1",
                        "7.R.3.",
                        "Start Date:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Form1",
                        "7.R.4.",
                        "Stop Date:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Demographics",
                        "4.",
                        "If Race is Other, Specifiy:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Demographics",
                        "4.1.",
                        "Dictionary Term verbatim for RACEO:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Demographics",
                        "4.2.",
                        "Encoding Type for RACEO:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Demographics",
                        "4.3.",
                        "RACE + RACE01 combined for reporting purposes:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Demographics",
                        "5.",
                        "If Race is Asian, is Patient of Japanese Ancestry?",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Demographics",
                        "6.",
                        "Was Patient Born in Japan?",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Demographics",
                        "7.",
                        "Number of parents born in Japan:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Demographics",
                        "8.",
                        "Number of Grandparents Born in Japan?",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Demographics",
                        "8.1.",
                        "Treatment Group Code:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Demographics",
                        "8.2.",
                        "Treatment Group Description:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Demographics",
                        "8.3.",
                        "Age at Study Start:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Demographics",
                        "8.4.",
                        "Age Units at Study Start:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Vital Signs",
                        "3.",
                        "Time of Exam (24 hour clock):",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Vital Signs",
                        "4.",
                        "Time of Exam (minutes):",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Vital Signs",
                        "7.",
                        "Waist Circumference:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Vital Signs",
                        "8.",
                        "Waist Circumference Units:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Vital Signs",
                        "9.",
                        "Height:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Vital Signs",
                        "10.",
                        "Height Units:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Vital Signs",
                        "11.",
                        "Temperature:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Vital Signs",
                        "12.",
                        "Temperature Units:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Vital Signs",
                        "13.",
                        "Temperature Method:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Vital Signs",
                        "14.",
                        "Systolic (mmHg):",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Vital Signs",
                        "15.",
                        "Diastolic (mmHg):",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Vital Signs",
                        "16.",
                        "Blood Pressure Position:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Vital Signs",
                        "17.",
                        "Pulse Rate (Beats/Min):",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Vital Signs",
                        "18.",
                        "Pulse Position:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "Vital Signs",
                        "19.",
                        "Respiratory Rate (Breaths/Min):",
                        "1.0"});
            table2.AddRow(new string[] {
                        "AutoBuild Form01",
                        "1.R.1.",
                        "Race:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "AutoBuild Form01",
                        "1.R.2.",
                        "Region of Body:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "AutoBuild Form01",
                        "1.R.3.",
                        "Gender:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "AutoBuild Form01",
                        "2.R.1.",
                        "Drug Name:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "AutoBuild Form01",
                        "2.R.2.",
                        "Placebo:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "AutoBuild Form01",
                        "2.R.3.",
                        "Time of Day that the drug is taken:",
                        "1.0"});
            table2.AddRow(new string[] {
                        "AutoBuild Form01",
                        "2.R.4.",
                        "Name: {Required - Sent}",
                        "1.0"});
            table2.AddRow(new string[] {
                        "AutoBuild Form01",
                        "2.R.5.",
                        "Enter integer value between 10 and 99999: {Normal Range - Sent} (Condition - Q2 i" +
                            "s in list \"Yes\" or \"No\")",
                        "1.0"});
            table2.AddRow(new string[] {
                        "AutoBuild Form01",
                        "2.R.6.",
                        "Enter patient date of birth:{Not Answered - Sent} (Condition - Q2 is not equal to" +
                            " \"No\")",
                        "1.0"});
#line 95
 testRunner.And("I select checkbox for form questions in protocol version.", ((string)(null)), table2, "And ");
#line 141
 testRunner.And("I click \"Next\" button on Create Flag Data Group page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
 testRunner.And("I click on Save & Close button.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
 testRunner.Then("I verify the success message displayed as \"Plan saved successfully\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T07_Assign Plan to Study")]
        public virtual void T07_AssignPlanToStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T07_Assign Plan to Study", null, ((string[])(null)));
#line 146
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 147
 testRunner.When("I select the \"Assign Plan to Study\" link on the Manage Plans & Flag Data Groups p" +
                    "age.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 148
 testRunner.And("I select \"MRPlanL1 (24%)\" in the Select Plan dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
 testRunner.When("I select \"Entry correction\" in Reason for change dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 150
 testRunner.When("I enter text \"New MR FLag\" in Additional Notes text box.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 151
 testRunner.When("I click \"Save\" button on Assign Plan to Study page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 152
 testRunner.Then("I verify the success message displayed as \"Plan assigned successfully.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T08_Add Site 01-Site and assign it to testadmin user")]
        public virtual void T08_AddSite01_SiteAndAssignItToTestadminUser()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T08_Add Site 01-Site and assign it to testadmin user", null, ((string[])(null)));
#line 154
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 155
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 156
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteId",
                        "SiteName",
                        "Address1",
                        "Address2",
                        "Address3",
                        "Address4",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "SiteStatus",
                        "DCFWorkflow",
                        "ExternalSource",
                        "ExternalId"});
            table3.AddRow(new string[] {
                        "01",
                        "Site",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        "-"});
#line 157
 testRunner.And("I enter sites details and Save", ((string)(null)), table3, "And ");
#line 160
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 161
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 162
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
 testRunner.Then("I see Site details page for \"01-Site\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T09_Navigate to the Edit Preferences page and set the CRF Default save to Complet" +
            "e and update the Endpoint URL")]
        public virtual void T09_NavigateToTheEditPreferencesPageAndSetTheCRFDefaultSaveToCompleteAndUpdateTheEndpointURL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T09_Navigate to the Edit Preferences page and set the CRF Default save to Complet" +
                    "e and update the Endpoint URL", null, ((string[])(null)));
#line 165
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 166
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 167
 testRunner.When("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 168
 testRunner.And("I click ActionPalette Item \"Edit Preferences\" in \"StudyResetAction\" ActionPalette" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
 testRunner.And("I open tab \"Forms\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
 testRunner.And("I select the \"Partial\" for Default Save: in StudyEditPreferencesFormsPage.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 171
 testRunner.And("I open tab \"patient data eventing\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
 testRunner.And("I update the endpoint URL under Patient Data Eventing tab.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 173
 testRunner.And("I click \"Save\" button on the Edit Preferences page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
 testRunner.Then("I verify the success message displayed as \"Edit Preferences Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T10_Add patient 001-Patient from Datalabs UI")]
        public virtual void T10_AddPatient001_PatientFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T10_Add patient 001-Patient from Datalabs UI", null, ((string[])(null)));
#line 176
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 177
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 178
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table4.AddRow(new string[] {
                        "001",
                        "Patient",
                        "09/04/2018"});
#line 179
 testRunner.When("I add patient with below details.", ((string)(null)), table4, "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table5.AddRow(new string[] {
                        "001-Patient"});
#line 182
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T11_Select and enroll patient 001-Patient.")]
        public virtual void T11_SelectAndEnrollPatient001_Patient_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T11_Select and enroll patient 001-Patient.", null, ((string[])(null)));
#line 186
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 187
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 188
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
 testRunner.And("I select the patient \"001-Patient\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table6.AddRow(new string[] {
                        "001",
                        "09/04/2018",
                        "Yes"});
#line 190
 testRunner.When("I enroll the patient \"001-Patient\" with below data.", ((string)(null)), table6, "When ");
#line 193
 testRunner.Then("I see patient \"001-Patient\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T12_Add patient 002-Patient from Datalabs UI")]
        public virtual void T12_AddPatient002_PatientFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T12_Add patient 002-Patient from Datalabs UI", null, ((string[])(null)));
#line 195
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 196
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 197
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table7.AddRow(new string[] {
                        "002",
                        "Patient",
                        "09/04/2018"});
#line 198
 testRunner.When("I add patient with below details.", ((string)(null)), table7, "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table8.AddRow(new string[] {
                        "002-Patient"});
#line 201
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T13_Select and enroll patient 002-Patient.")]
        public virtual void T13_SelectAndEnrollPatient002_Patient_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T13_Select and enroll patient 002-Patient.", null, ((string[])(null)));
#line 205
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 206
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 207
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 208
 testRunner.And("I select the patient \"002-Patient\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table9.AddRow(new string[] {
                        "002",
                        "09/04/2018",
                        "Yes"});
#line 209
 testRunner.When("I enroll the patient \"002-Patient\" with below data.", ((string)(null)), table9, "When ");
#line 212
 testRunner.Then("I see patient \"002-Patient\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T14_Add patient 003-Patient from Datalabs UI")]
        public virtual void T14_AddPatient003_PatientFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T14_Add patient 003-Patient from Datalabs UI", null, ((string[])(null)));
#line 214
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 215
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 216
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table10.AddRow(new string[] {
                        "003",
                        "Patient",
                        "09/04/2018"});
#line 217
 testRunner.When("I add patient with below details.", ((string)(null)), table10, "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table11.AddRow(new string[] {
                        "003-Patient"});
#line 220
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table11, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T15_Select and enroll patient 003-Patient.")]
        public virtual void T15_SelectAndEnrollPatient003_Patient_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T15_Select and enroll patient 003-Patient.", null, ((string[])(null)));
#line 224
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 225
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 226
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 227
 testRunner.And("I select the patient \"003-Patient\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table12.AddRow(new string[] {
                        "003",
                        "09/04/2018",
                        "Yes"});
#line 228
 testRunner.When("I enroll the patient \"003-Patient\" with below data.", ((string)(null)), table12, "When ");
#line 231
 testRunner.Then("I see patient \"003-Patient\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T16_Add patient 004-Patient from Datalabs UI.")]
        public virtual void T16_AddPatient004_PatientFromDatalabsUI_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T16_Add patient 004-Patient from Datalabs UI.", null, ((string[])(null)));
#line 233
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 234
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 235
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table13.AddRow(new string[] {
                        "004",
                        "Patient",
                        "09/04/2018"});
#line 236
 testRunner.When("I add patient with below details.", ((string)(null)), table13, "When ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table14.AddRow(new string[] {
                        "004-Patient"});
#line 239
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table14, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T17_Select and enroll patient 004-Patient.")]
        public virtual void T17_SelectAndEnrollPatient004_Patient_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T17_Select and enroll patient 004-Patient.", null, ((string[])(null)));
#line 243
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 244
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 245
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 246
 testRunner.And("I select the patient \"004-Patient\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table15.AddRow(new string[] {
                        "004",
                        "09/04/2018",
                        "Yes"});
#line 247
 testRunner.When("I enroll the patient \"004-Patient\" with below data.", ((string)(null)), table15, "When ");
#line 250
 testRunner.Then("I see patient \"004-Patient\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T18_Select the Patient 001-Patient, Open Visit(Screening) Form1, Save the form an" +
            "d Set the flag.")]
        public virtual void T18_SelectThePatient001_PatientOpenVisitScreeningForm1SaveTheFormAndSetTheFlag_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T18_Select the Patient 001-Patient, Open Visit(Screening) Form1, Save the form an" +
                    "d Set the flag.", null, ((string[])(null)));
#line 252
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 253
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 254
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 255
 testRunner.When("I select \"001-Patient\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 256
 testRunner.And("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 257
 testRunner.And("I select \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 258
 testRunner.And("I select \"Save\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "SD-Verify",
                        "M-Review",
                        "D-Review"});
            table16.AddRow(new string[] {
                        "Sample integer question:",
                        "On",
                        "",
                        ""});
#line 259
 testRunner.And("I set flag for below flat questions data in the CRFs.", ((string)(null)), table16, "And ");
#line 262
 testRunner.Then("I see flag \"SD-Verify\" icon \"flag_required_set.gif\" against question \"Sample text" +
                    " question:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T19_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.3.7,3.1.3.8")]
        public virtual void T19_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T19_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.3.7,3.1.3.8"});
#line 264
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 265
 testRunner.Given("I save the Event XML data in \"InitialFlagItemAndFormODMActual.xml\" file by execut" +
                    "ing the query \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEvent" +
                    "Key = 9 order by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 266
 testRunner.And("I have the XML file \"InitialFlagItemAndFormODMExpected.xml\" available in the proj" +
                    "ect folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 267
 testRunner.And("I have the XML file \"InitialFlagItemAndFormODMActual.xml\" available in the Test X" +
                    "ML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table17.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table17.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table17.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table17.AddRow(new string[] {
                        "",
                        "FileOID"});
            table17.AddRow(new string[] {
                        "",
                        "SourceID"});
            table17.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 268
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table17, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T20_Select the Checkout button Add New Row and Save and Set the Flag for the tabl" +
            "e question")]
        public virtual void T20_SelectTheCheckoutButtonAddNewRowAndSaveAndSetTheFlagForTheTableQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T20_Select the Checkout button Add New Row and Save and Set the Flag for the tabl" +
                    "e question", null, ((string[])(null)));
#line 277
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 278
 testRunner.When("I select \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 279
 testRunner.And("I click table row button \"Add New Row\" of table \"Sample Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 280
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Sample Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 281
 testRunner.And("I select \"Save\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "SD-Verify",
                        "M-Review",
                        "D-Review",
                        "RowButtonToClick"});
            table18.AddRow(new string[] {
                        "1",
                        "Drug Name:",
                        "On",
                        "",
                        "",
                        ""});
            table18.AddRow(new string[] {
                        "1",
                        "Condition:",
                        "",
                        "",
                        "",
                        "OK"});
#line 282
 testRunner.And("I set flag for below \"Sample Table:\" table questions data in the CRFs.", ((string)(null)), table18, "And ");
#line 286
 testRunner.Then("I see flag \"SD-Verify\" icon \"flag_required_set.gif\" of a question \"Drug Name:\" of" +
                    " table \"Sample Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T21_Verify the XML Data evented out for the Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.3.7,3.1.3.8")]
        public virtual void T21_VerifyTheXMLDataEventedOutForTheFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T21_Verify the XML Data evented out for the Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.3.7,3.1.3.8"});
#line 288
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 289
 testRunner.Given("I save the Event XML data in \"FlagItemODMTableRowActual.xml\" file by executing th" +
                    "e query \"select TOP 1 XmlMessage from OdmSubscriberDetail where studyeventkey = " +
                    "9 order by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 290
 testRunner.And("I have the XML file \"FlagItemODMTableRowExpected.xml\" available in the project fo" +
                    "lder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 291
 testRunner.And("I have the XML file \"FlagItemODMTableRowActual.xml\" available in the Test XML Fil" +
                    "es folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table19.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table19.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table19.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table19.AddRow(new string[] {
                        "",
                        "FileOID"});
            table19.AddRow(new string[] {
                        "",
                        "SourceID"});
            table19.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 292
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table19, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T22_Request Signature for the Form and Update the data for the Question")]
        public virtual void T22_RequestSignatureForTheFormAndUpdateTheDataForTheQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T22_Request Signature for the Form and Update the data for the Question", null, ((string[])(null)));
#line 301
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 302
 testRunner.Given("I click breadcrumb \"001-Patient\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 303
 testRunner.When("I click ActionPalette Item \"Request Signature\" in \"PatientPortalActions\" ActionPa" +
                    "lette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName"});
            table20.AddRow(new string[] {
                        "Visit (Screening)",
                        "Form1"});
#line 304
 testRunner.And("I select Request checkbox for below forms in RequestSignaturePage", ((string)(null)), table20, "And ");
#line 307
 testRunner.And("I click on Submit button in RequestSignaturePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 308
 testRunner.Then("I see success message \"CRF for Signature Saved Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T23_Sign Casebook")]
        public virtual void T23_SignCasebook()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T23_Sign Casebook", null, ((string[])(null)));
#line 310
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 311
 testRunner.When("I click ActionPalette Item \"Sign Casebook\" in \"PatientPortalActions\" ActionPalett" +
                    "e", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName",
                        "Radiobutton"});
            table21.AddRow(new string[] {
                        "Visit (Screening)",
                        "Form1",
                        "Accept"});
#line 312
 testRunner.And("I select radio button for below forms in SignCasebookPage", ((string)(null)), table21, "And ");
#line 315
 testRunner.And("I given username as \"testadmin\" in SignCasebookPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 316
 testRunner.And("I given password as \"Datalabs1234\" in SignCasebookPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 317
 testRunner.And("I click on Submit button in SignCasebbokPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 318
 testRunner.Then("I see success message \"CRFs for Casebook Saved Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T24_Select the Visit (Screening) Form1 and update the value of any item")]
        public virtual void T24_SelectTheVisitScreeningForm1AndUpdateTheValueOfAnyItem()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T24_Select the Visit (Screening) Form1 and update the value of any item", null, ((string[])(null)));
#line 321
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 322
 testRunner.When("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 323
 testRunner.And("I select \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table22.AddRow(new string[] {
                        "Sample integer question:",
                        "11",
                        "TextBox"});
#line 324
 testRunner.And("I enter below data for Flat questions in CRF.", ((string)(null)), table22, "And ");
#line 327
 testRunner.And("I select \"Save\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 328
 testRunner.Then("I verify the success message displayed as \"CRF has been saved and checked in succ" +
                    "essfully\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T25_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.3.7,3.1.3.8,3.1.3.9")]
        public virtual void T25_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T25_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.3.7,3.1.3.8,3.1.3.9"});
#line 331
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 332
 testRunner.Given("I save the Event XML data in \"FlaggingWithSignatureUpdateActual.xml\" file by exec" +
                    "uting the query \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEve" +
                    "ntKey = 8 order by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 333
 testRunner.And("I have the XML file \"FlaggingWithSignatureUpdateExpected.xml\" available in the pr" +
                    "oject folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 334
 testRunner.And("I have the XML file \"FlaggingWithSignatureUpdateActual.xml\" available in the Test" +
                    " XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table23.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table23.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table23.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table23.AddRow(new string[] {
                        "",
                        "FileOID"});
            table23.AddRow(new string[] {
                        "",
                        "SourceID"});
            table23.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 335
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table23, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T26_Go to Visit (Week 2) - Mark All Required and Add new row and Save")]
        public virtual void T26_GoToVisitWeek2_MarkAllRequiredAndAddNewRowAndSave()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T26_Go to Visit (Week 2) - Mark All Required and Add new row and Save", null, ((string[])(null)));
#line 344
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 345
 testRunner.Given("I click breadcrumb \"001-Patient\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 346
 testRunner.When("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 347
 testRunner.And("I select \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 348
 testRunner.And("I select \"Save\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 349
 testRunner.And("I click link \"Mark Required\" for the flag type \"SD-Verify\" in FlagPalette of CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 350
 testRunner.And("I select \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 351
 testRunner.And("I click table row button \"Add New Row\" of table \"Sample Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 352
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Sample Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 353
 testRunner.And("I select \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 354
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T27_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.3.7,3.1.3.8")]
        public virtual void T27_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T27_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.3.7,3.1.3.8"});
#line 356
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 357
 testRunner.Given("I save the Event XML data in \"FlagUpdateOnFormWhenTableRowAddedActual.xml\" file b" +
                    "y executing the query \"select TOP 1 XmlMessage from OdmSubscriberDetail where St" +
                    "udyEventKey = 8 order by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 358
 testRunner.And("I have the XML file \"FlagUpdateOnFormWhenTableRowAddedExpected.xml\" available in " +
                    "the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 359
 testRunner.And("I have the XML file \"FlagUpdateOnFormWhenTableRowAddedActual.xml\" available in th" +
                    "e Test XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table24.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table24.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table24.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table24.AddRow(new string[] {
                        "",
                        "FileOID"});
            table24.AddRow(new string[] {
                        "",
                        "SourceID"});
            table24.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 360
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table24, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T28_Select Visit (Week 5) - Form1 and Submit the form")]
        public virtual void T28_SelectVisitWeek5_Form1AndSubmitTheForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T28_Select Visit (Week 5) - Form1 and Submit the form", null, ((string[])(null)));
#line 369
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 370
 testRunner.Given("I expand \"Visit (Week 5)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 371
 testRunner.When("I select \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table25.AddRow(new string[] {
                        "Sample text question:",
                        "Text",
                        "Textbox"});
            table25.AddRow(new string[] {
                        "Sample select question:",
                        "Yes",
                        "Listbox"});
            table25.AddRow(new string[] {
                        "Sample radio question:",
                        "Yes",
                        "RadioButton"});
            table25.AddRow(new string[] {
                        "Sample integer question:",
                        "15",
                        "Textbox"});
            table25.AddRow(new string[] {
                        "Sample float question:",
                        "16.66",
                        "Textbox"});
            table25.AddRow(new string[] {
                        "Sample date question:",
                        "09/04/1992",
                        "Textbox"});
#line 372
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table25, "And ");
#line 380
 testRunner.And("I select \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 381
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T29_Select Visit (Week 3) - Demographics form and submit the form")]
        public virtual void T29_SelectVisitWeek3_DemographicsFormAndSubmitTheForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T29_Select Visit (Week 3) - Demographics form and submit the form", null, ((string[])(null)));
#line 383
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 384
 testRunner.Given("I expand \"Visit (Week 3)\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 385
 testRunner.When("I select \"Checkout\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table26.AddRow(new string[] {
                        "Date of Birth:",
                        "09/08/1990",
                        "Textbox"});
            table26.AddRow(new string[] {
                        "Gender:",
                        "Male",
                        "Listbox"});
            table26.AddRow(new string[] {
                        "Race:",
                        "Hispanic American",
                        "Listbox"});
#line 386
 testRunner.And("I enter below data for Flat questions in CRF.", ((string)(null)), table26, "And ");
#line 391
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 392
 testRunner.And("I select \"Save & Close\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 393
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T30_Select Visit (Week 2) - Form 4 and submit the form")]
        public virtual void T30_SelectVisitWeek2_Form4AndSubmitTheForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T30_Select Visit (Week 2) - Form 4 and submit the form", null, ((string[])(null)));
#line 395
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 396
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form 4\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 397
 testRunner.When("I select \"Checkout\" button on \"Form 4\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table27.AddRow(new string[] {
                        "Q5_text",
                        "Text",
                        "Textbox"});
#line 398
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table27, "And ");
#line 401
 testRunner.And("I select \"Save & Close\" button on \"Form 4\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 402
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T31_Add unscheduled event with a Case form")]
        public virtual void T31_AddUnscheduledEventWithACaseForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T31_Add unscheduled event with a Case form", null, ((string[])(null)));
#line 404
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 405
 testRunner.When("I click ActionPalette Item \"Add Unscheduled Event\" in \"PatientPortalActions\" Acti" +
                    "onPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 406
 testRunner.And("I select \"Visit (Week 2)\" from events list on AddUnscheduledEventStep1Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 407
 testRunner.And("I click on Next button on AddUnscheduledEventStep1Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "FormName"});
            table28.AddRow(new string[] {
                        "Case_Form"});
#line 408
 testRunner.And("I select below forms on on AddUnscheduledEventStep2Page", ((string)(null)), table28, "And ");
#line 411
 testRunner.And("I click on Next button on AddUnscheduledEventStep2Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 412
 testRunner.And("I click on Finish button on AddUnscheduledEventStep3Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 413
 testRunner.Then("I see event \"Visit (Week 2).1\" in PatientPortalPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T32_Select Visit (Week 2)1 - Case_Form and Submit the form")]
        public virtual void T32_SelectVisitWeek21_Case_FormAndSubmitTheForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T32_Select Visit (Week 2)1 - Case_Form and Submit the form", null, ((string[])(null)));
#line 415
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 416
 testRunner.Given("I expand \"Visit (Week 2).1\" to select and open \"Case_Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 417
 testRunner.When("I select \"Checkout\" button on \"Case_Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table29.AddRow(new string[] {
                        "True or False:",
                        "True",
                        "Listbox"});
            table29.AddRow(new string[] {
                        "Text Value (Active if Question 1 is True):",
                        "Zithromax",
                        "TextArea"});
            table29.AddRow(new string[] {
                        "Float Value (Active if Question 2 is \"CIPRO\", \"LEVAQUIN\", \"BIAXIN\" or \"ZITHROMAX\"" +
                            "):",
                        "4.4",
                        "Textbox"});
#line 418
 testRunner.And("I enter below data for Flat questions in CRF.", ((string)(null)), table29, "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table30.AddRow(new string[] {
                        "Yes",
                        "1",
                        "True or False:",
                        "True",
                        "ListBox",
                        ""});
            table30.AddRow(new string[] {
                        "No",
                        "1",
                        "Text Value (Active if Question 1 is True):",
                        "Zithromax",
                        "Textbox",
                        ""});
            table30.AddRow(new string[] {
                        "No",
                        "1",
                        "Float Value (Active if Question 2 is \"CIPRO\", \"LEVAQUIN\", \"BIAXIN\" or \"ZITHROMAX)" +
                            ":",
                        "3.3",
                        "Textbox",
                        ""});
            table30.AddRow(new string[] {
                        "No",
                        "1",
                        "Second Float Value:",
                        "88.87",
                        "Textbox",
                        ""});
            table30.AddRow(new string[] {
                        "No",
                        "1",
                        "Second Text Value (Active if Question 6.x.6 is not 88.88):",
                        "Text",
                        "Textbox",
                        "Save & Close Row"});
#line 423
 testRunner.And("I enter below \"Table_1:\" table questions data in the CRF.", ((string)(null)), table30, "And ");
#line 430
 testRunner.And("I select \"Save & Close\" button on \"Case_Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 431
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T33_Select M-Review CRFs and perform bulk Flag action on CRFs")]
        public virtual void T33_SelectM_ReviewCRFsAndPerformBulkFlagActionOnCRFs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T33_Select M-Review CRFs and perform bulk Flag action on CRFs", null, ((string[])(null)));
#line 433
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 434
 testRunner.When("I click ActionPalette Item \"M-Review CRFs\" in \"PatientPortalActions\" ActionPalett" +
                    "e", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName",
                        "Radiobutton"});
            table31.AddRow(new string[] {
                        "Visit (Week 2)",
                        "Form 4",
                        "Mark All"});
            table31.AddRow(new string[] {
                        "Visit (Week 2).1",
                        "Case_Form",
                        "Mark All"});
            table31.AddRow(new string[] {
                        "Visit (Week 3)",
                        "Demographics",
                        "Mark Required"});
            table31.AddRow(new string[] {
                        "Visit (Week 5)",
                        "Form1",
                        "Mark Required"});
#line 435
 testRunner.And("I select radio button for below forms in M-Review CRFs", ((string)(null)), table31, "And ");
#line 441
 testRunner.And("I click on Save button in M-Review CRFs Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 442
 testRunner.Then("I see success message \"M-Review Flags Update Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T34_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.3.7,3.1.3.8")]
        public virtual void T34_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T34_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.3.7,3.1.3.8"});
#line 445
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 446
 testRunner.Given("I save the Event XML data in \"FlagUpdateActionPaletteMultipleCRFsActual.xml\" file" +
                    " by executing the query \"select TOP 1 XmlMessage from OdmSubscriberDetail where " +
                    "StudyEventKey = 9 order by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 447
 testRunner.And("I have the XML file \"FlagUpdateActionPaletteMultipleCRFsExpected.xml\" available i" +
                    "n the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 448
 testRunner.And("I have the XML file \"FlagUpdateActionPaletteMultipleCRFsActual.xml\" available in " +
                    "the Test XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table32.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table32.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table32.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table32.AddRow(new string[] {
                        "",
                        "FileOID"});
            table32.AddRow(new string[] {
                        "",
                        "SourceID"});
            table32.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 449
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table32, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

