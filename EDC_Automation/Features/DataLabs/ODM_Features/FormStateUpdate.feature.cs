// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.ODM_Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DataLabs_V5.7.0_ODM Eventing for FormStateUpdate")]
    public partial class DataLabs_V5_7_0_ODMEventingForFormStateUpdateFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "FormStateUpdate.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DataLabs_V5.7.0_ODM Eventing for FormStateUpdate", @"	Test Summary:
	1. Verification of ODM eventing xml for Form State Update to Freeze
	2. Verification of ODM eventing xml for Form State Update to Thaw
	3. Verification of ODM eventing xml for Form State Update to Freeze on Mutliple CRFs
	4. Verification of ODM eventing xml for Form State Update to Thaw on Multiple CRFs", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T01_Login to Datalabs")]
        public virtual void T01_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T01_Login to Datalabs", null, ((string[])(null)));
#line 10
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 11
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T02_Delete the current study")]
        public virtual void T02_DeleteTheCurrentStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T02_Delete the current study", null, ((string[])(null)));
#line 14
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T03_Publish the study")]
        public virtual void T03_PublishTheStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T03_Publish the study", null, ((string[])(null)));
#line 18
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 19
 testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
 testRunner.And("I upload a study \"Test4500_ODM_Eventing_Base.Zip\" with study label \"Test4500\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.And("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table1.AddRow(new string[] {
                        "Publishing of Study file (Test4500) - complete."});
#line 23
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T04_Add Site 01-Site")]
        public virtual void T04_AddSite01_Site()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T04_Add Site 01-Site", null, ((string[])(null)));
#line 27
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 28
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteId",
                        "SiteName",
                        "Address1",
                        "Address2",
                        "Address3",
                        "Address4",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "SiteStatus",
                        "DCFWorkflow",
                        "ExternalSource",
                        "ExternalId"});
            table2.AddRow(new string[] {
                        "01",
                        "Site",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        "-"});
#line 30
 testRunner.And("I enter sites details and Save", ((string)(null)), table2, "And ");
#line 33
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.And("I click breadcrumb \"Site Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T05_Navigate to the Edit Preferences page and set the CRF Default save to Complet" +
            "e and update the Endpoint URL")]
        public virtual void T05_NavigateToTheEditPreferencesPageAndSetTheCRFDefaultSaveToCompleteAndUpdateTheEndpointURL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T05_Navigate to the Edit Preferences page and set the CRF Default save to Complet" +
                    "e and update the Endpoint URL", null, ((string[])(null)));
#line 38
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 39
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
 testRunner.When("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
 testRunner.And("I click ActionPalette Item \"Edit Preferences\" in \"StudyResetAction\" ActionPalette" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.And("I open tab \"Forms\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.And("I select the \"Complete\" for Default Save: in StudyEditPreferencesFormsPage.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.And("I open tab \"patient data eventing\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.And("I update the endpoint URL under Patient Data Eventing tab.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
 testRunner.And("I click \"Save\" button on the Edit Preferences page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.Then("I verify the success message displayed as \"Edit Preferences Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T06_Add patient 01-PAT from Datalabs UI")]
        public virtual void T06_AddPatient01_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T06_Add patient 01-PAT from Datalabs UI", null, ((string[])(null)));
#line 49
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 50
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 51
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table3.AddRow(new string[] {
                        "01",
                        "PAT",
                        "06/13/2018"});
#line 52
 testRunner.When("I add patient with below details.", ((string)(null)), table3, "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table4.AddRow(new string[] {
                        "01-PAT"});
#line 55
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T07_Select and enroll patient 01-PAT.")]
        public virtual void T07_SelectAndEnrollPatient01_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T07_Select and enroll patient 01-PAT.", null, ((string[])(null)));
#line 59
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 60
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 61
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 62
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table5.AddRow(new string[] {
                        "01",
                        "06/13/2018",
                        "Yes"});
#line 63
 testRunner.When("I enroll the patient \"01-PAT\" with below data.", ((string)(null)), table5, "When ");
#line 66
 testRunner.Then("I see patient \"01-PAT\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T08_Select Visit (Week 2) - Form1 and Submit the form in Patient 01-PAT")]
        public virtual void T08_SelectVisitWeek2_Form1AndSubmitTheFormInPatient01_PAT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T08_Select Visit (Week 2) - Form1 and Submit the form in Patient 01-PAT", null, ((string[])(null)));
#line 68
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 69
 testRunner.When("I click breadcrumb \"All Patients\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
 testRunner.And("I select \"01-PAT\" patient.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
 testRunner.And("I select \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table6.AddRow(new string[] {
                        "Sample text question:",
                        "Text",
                        "Textbox"});
            table6.AddRow(new string[] {
                        "Sample select question:",
                        "Yes",
                        "Listbox"});
            table6.AddRow(new string[] {
                        "Sample radio question:",
                        "Yes",
                        "RadioButton"});
            table6.AddRow(new string[] {
                        "Sample integer question:",
                        "10",
                        "Textbox"});
            table6.AddRow(new string[] {
                        "Sample float question:",
                        "11.11",
                        "Textbox"});
            table6.AddRow(new string[] {
                        "Sample date question:",
                        "09/04/1992",
                        "Textbox"});
#line 73
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table6, "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table7.AddRow(new string[] {
                        "Yes",
                        "1",
                        "Drug Name:",
                        "DrugText",
                        "Textbox",
                        ""});
            table7.AddRow(new string[] {
                        "No",
                        "1",
                        "Stop Date:",
                        "DateText",
                        "Textbox",
                        "Save & Close Row"});
#line 81
 testRunner.And("I enter below \"Sample Table:\" table questions data in the CRF.", ((string)(null)), table7, "And ");
#line 85
 testRunner.And("I select \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 86
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T09_Select Visit (Week 2) - Form1 and Select Freeze CRF link")]
        public virtual void T09_SelectVisitWeek2_Form1AndSelectFreezeCRFLink()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T09_Select Visit (Week 2) - Form1 and Select Freeze CRF link", null, ((string[])(null)));
#line 88
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 89
 testRunner.When("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 90
 testRunner.And("I click ActionPalette Item \"Freeze CRF\" in \"CRFAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
 testRunner.Then("I verify the success message displayed as \"CRF Frozen\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T10_Verify the Form State is evented out when CRF is Frozen")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.3.3,3.1.3.4")]
        public virtual void T10_VerifyTheFormStateIsEventedOutWhenCRFIsFrozen()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T10_Verify the Form State is evented out when CRF is Frozen", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.3.3,3.1.3.4"});
#line 94
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 95
 testRunner.Given("I save the Event XML data in \"FormStateCRFFreezeActual.xml\" file by executing the" +
                    " query \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 7" +
                    " order by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 96
 testRunner.And("I have the XML file \"FormStateCRFFreezeExpected.xml\" available in the project fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
 testRunner.And("I have the XML file \"FormStateCRFFreezeActual.xml\" available in the Result XML Fi" +
                    "les folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table8.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table8.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table8.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table8.AddRow(new string[] {
                        "",
                        "FileOID"});
            table8.AddRow(new string[] {
                        "",
                        "SourceID"});
            table8.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 98
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T11_Select Thaw CRF")]
        public virtual void T11_SelectThawCRF()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T11_Select Thaw CRF", null, ((string[])(null)));
#line 107
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 108
 testRunner.When("I click ActionPalette Item \"Thaw CRF\" in \"CRFAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 109
 testRunner.Then("I verify the success message displayed as \"CRF Thawed\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T12_Verify the Form State is evented out when CRF is Thawed")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.3.3,3.1.3.4")]
        public virtual void T12_VerifyTheFormStateIsEventedOutWhenCRFIsThawed()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T12_Verify the Form State is evented out when CRF is Thawed", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.3.3,3.1.3.4"});
#line 112
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 113
 testRunner.Given("I save the Event XML data in \"FormStateCRFThawedActual.xml\" file by executing the" +
                    " query \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 7" +
                    " order by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 114
 testRunner.And("I have the XML file \"FormStateCRFThawedExpected.xml\" available in the project fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 115
 testRunner.And("I have the XML file \"FormStateCRFThawedActual.xml\" available in the Result XML Fi" +
                    "les folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table9.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table9.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table9.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table9.AddRow(new string[] {
                        "",
                        "FileOID"});
            table9.AddRow(new string[] {
                        "",
                        "SourceID"});
            table9.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 116
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T13_Navigate to site and patient and freeze the form (Form1) in Screening event")]
        public virtual void T13_NavigateToSiteAndPatientAndFreezeTheFormForm1InScreeningEvent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T13_Navigate to site and patient and freeze the form (Form1) in Screening event", null, ((string[])(null)));
#line 125
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 126
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 127
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.When("I click ActionPalette Item \"Freeze CRFs\" in \"PatientPortalActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName"});
            table10.AddRow(new string[] {
                        "Visit (Screening)",
                        "Form1"});
#line 130
 testRunner.And("I select Freeze checkbox for below forms in FreezeCRFsPage", ((string)(null)), table10, "And ");
#line 133
 testRunner.And("I click on \"Freeze\" button in FreezeCRFsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
 testRunner.Then("I see success message \"Freeze CRF Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T14_Verify the XML Data evented out for the Visit date is entered from Datalabs U" +
            "I")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.3.3,3.1.3.4")]
        public virtual void T14_VerifyTheXMLDataEventedOutForTheVisitDateIsEnteredFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T14_Verify the XML Data evented out for the Visit date is entered from Datalabs U" +
                    "I", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.3.3,3.1.3.4"});
#line 137
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 138
 testRunner.Given("I save the Event XML data in \"FormStateSingleCRFFreezeActual.xml\" file by executi" +
                    "ng the query \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventK" +
                    "ey = 7 order by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 139
 testRunner.And("I have the XML file \"FormStateSingleCRFFreezeExpected.xml\" available in the proje" +
                    "ct folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 140
 testRunner.And("I have the XML file \"FormStateSingleCRFFreezeActual.xml\" available in the Result " +
                    "XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table11.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table11.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table11.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table11.AddRow(new string[] {
                        "",
                        "FileOID"});
            table11.AddRow(new string[] {
                        "",
                        "SourceID"});
            table11.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 141
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table11, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T15_Navigate to site and patient and Thaw the form (Form1) in Screening event")]
        public virtual void T15_NavigateToSiteAndPatientAndThawTheFormForm1InScreeningEvent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T15_Navigate to site and patient and Thaw the form (Form1) in Screening event", null, ((string[])(null)));
#line 150
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 151
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 152
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 153
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 154
 testRunner.When("I click ActionPalette Item \"Thaw CRFs\" in \"PatientPortalActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName"});
            table12.AddRow(new string[] {
                        "Visit (Screening)",
                        "Form1"});
#line 155
 testRunner.And("I select Thaw checkbox for below forms in ThawCRFsPage", ((string)(null)), table12, "And ");
#line 158
 testRunner.And("I click on \"Thaw\" button in ThawCRFsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
 testRunner.Then("I see success message \"Thaw CRF Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T16_Verify the XML Data evented out for the Visit date is entered from Datalabs U" +
            "I")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.3.3,3.1.3.4")]
        public virtual void T16_VerifyTheXMLDataEventedOutForTheVisitDateIsEnteredFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T16_Verify the XML Data evented out for the Visit date is entered from Datalabs U" +
                    "I", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.3.3,3.1.3.4"});
#line 162
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 163
 testRunner.Given("I save the Event XML data in \"FormStateSingleCRFThawedActual.xml\" file by executi" +
                    "ng the query \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventK" +
                    "ey = 7 order by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 164
 testRunner.And("I have the XML file \"FormStateSingleCRFThawedExpected.xml\" available in the proje" +
                    "ct folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
 testRunner.And("I have the XML file \"FormStateSingleCRFThawedActual.xml\" available in the Result " +
                    "XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table13.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table13.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table13.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table13.AddRow(new string[] {
                        "",
                        "FileOID"});
            table13.AddRow(new string[] {
                        "",
                        "SourceID"});
            table13.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 166
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table13, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T17_Navigate to patient and freeze multile forms(Form1,Demographics RTSM) in Scre" +
            "ening event")]
        public virtual void T17_NavigateToPatientAndFreezeMultileFormsForm1DemographicsRTSMInScreeningEvent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T17_Navigate to patient and freeze multile forms(Form1,Demographics RTSM) in Scre" +
                    "ening event", null, ((string[])(null)));
#line 175
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 176
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 177
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 179
 testRunner.When("I click ActionPalette Item \"Freeze CRFs\" in \"PatientPortalActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName"});
            table14.AddRow(new string[] {
                        "Visit (Screening)",
                        "Form1"});
            table14.AddRow(new string[] {
                        "Visit (Screening)",
                        "Demographics RTSM"});
#line 180
 testRunner.And("I select Freeze checkbox for below forms in FreezeCRFsPage", ((string)(null)), table14, "And ");
#line 184
 testRunner.And("I click on \"Freeze\" button in FreezeCRFsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
 testRunner.Then("I see success message \"Freeze CRF Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T18_Verify the XML Data evented out for the Visit date is entered from Datalabs U" +
            "I")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.3.3,3.1.3.4")]
        public virtual void T18_VerifyTheXMLDataEventedOutForTheVisitDateIsEnteredFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T18_Verify the XML Data evented out for the Visit date is entered from Datalabs U" +
                    "I", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.3.3,3.1.3.4"});
#line 187
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 188
 testRunner.Given("I save the Event XML data in \"FormStateMultipleCRFsFreezeActual.xml\" file by exec" +
                    "uting the query \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEve" +
                    "ntKey = 7 order by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 189
 testRunner.And("I have the XML file \"FormStateMultipleCRFsFreezeExpected.xml\" available in the pr" +
                    "oject folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
 testRunner.And("I have the XML file \"FormStateMultipleCRFsFreezeActual.xml\" available in the Resu" +
                    "lt XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table15.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table15.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table15.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table15.AddRow(new string[] {
                        "",
                        "FileOID"});
            table15.AddRow(new string[] {
                        "",
                        "SourceID"});
            table15.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 191
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table15, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T19_Navigate to patient and Thaw multile forms(Form1,Demographics RTSM) in Screen" +
            "ing event")]
        public virtual void T19_NavigateToPatientAndThawMultileFormsForm1DemographicsRTSMInScreeningEvent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T19_Navigate to patient and Thaw multile forms(Form1,Demographics RTSM) in Screen" +
                    "ing event", null, ((string[])(null)));
#line 200
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 201
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 202
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 203
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 204
 testRunner.When("I click ActionPalette Item \"Thaw CRFs\" in \"PatientPortalActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName"});
            table16.AddRow(new string[] {
                        "Visit (Screening)",
                        "Form1"});
            table16.AddRow(new string[] {
                        "Visit (Screening)",
                        "Demographics RTSM"});
#line 205
 testRunner.And("I select Thaw checkbox for below forms in ThawCRFsPage", ((string)(null)), table16, "And ");
#line 209
 testRunner.And("I click on \"Thaw\" button in ThawCRFsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 210
 testRunner.Then("I see success message \"Thaw CRF Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T20_Verify the XML Data evented out for the Visit date is entered from Datalabs U" +
            "I")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.3.3,3.1.3.4")]
        public virtual void T20_VerifyTheXMLDataEventedOutForTheVisitDateIsEnteredFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T20_Verify the XML Data evented out for the Visit date is entered from Datalabs U" +
                    "I", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.3.3,3.1.3.4"});
#line 212
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 213
 testRunner.Given("I save the Event XML data in \"FormStateMultipleCRFsThawedActual.xml\" file by exec" +
                    "uting the query \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEve" +
                    "ntKey = 7 order by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 214
 testRunner.And("I have the XML file \"FormStateMultipleCRFsThawedExpected.xml\" available in the pr" +
                    "oject folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 215
 testRunner.And("I have the XML file \"FormStateMultipleCRFsThawedActual.xml\" available in the Resu" +
                    "lt XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table17.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table17.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table17.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table17.AddRow(new string[] {
                        "",
                        "FileOID"});
            table17.AddRow(new string[] {
                        "",
                        "SourceID"});
            table17.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 216
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table17, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

