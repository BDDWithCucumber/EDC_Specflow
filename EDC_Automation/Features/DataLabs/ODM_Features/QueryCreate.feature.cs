// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.ODM_Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DataLabs_V5.7.0_ODMforQueryWithMajorandMinorStudyUpdate")]
    public partial class DataLabs_V5_7_0_ODMforQueryWithMajorandMinorStudyUpdateFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "QueryCreate.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DataLabs_V5.7.0_ODMforQueryWithMajorandMinorStudyUpdate", @"Test Summary:
	1. Verification of ODM eventing for Query created on item update.
	2. Verification of ODM eventing for Query Response on item update.
	3. Verification of ODM eventing for query created on form(Manual Query).
	4. Verification of ODM eventing for query created on item in form(Manual Query).
	5. Verification of ODM eventing for query status update (Sent,Viewed,Closed,Requery,Resolved).
	6. Verification of ODM eventing for Custom fields add.
	7. Verification of ODM eventing for Custom fields update.
	8. Verification of ODM eventing for custom fields off.
	9. Verification of ODM eventing for query response on manual query.
	10. Verification of ODM eventing for query category and status update.
	11. Verification of ODM eventing for query created on L4 and L5 queries.
	12. Verification of ODM eventing for query update on minor study update.
	13.Verification of ODM eventing for query  update on major study update.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T01_Login to Datalabs")]
        public virtual void T01_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T01_Login to Datalabs", null, ((string[])(null)));
#line 18
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 19
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 20
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T02_Delete the current study")]
        public virtual void T02_DeleteTheCurrentStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T02_Delete the current study", null, ((string[])(null)));
#line 22
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 23
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T03_Publish the study")]
        public virtual void T03_PublishTheStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T03_Publish the study", null, ((string[])(null)));
#line 26
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 27
 testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 28
 testRunner.And("I upload a study \"Test4500_QUER_Base study V1.zip\" with study label \"V1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.Then("I see study label \"Test4500\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T04_Add Site 01-Site")]
        public virtual void T04_AddSite01_Site()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T04_Add Site 01-Site", null, ((string[])(null)));
#line 31
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 32
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 33
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteId",
                        "SiteName",
                        "Address1",
                        "Address2",
                        "Address3",
                        "Address4",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "SiteStatus",
                        "DCFWorkflow",
                        "ExternalSource",
                        "ExternalId"});
            table1.AddRow(new string[] {
                        "01",
                        "Site",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        "-"});
#line 34
 testRunner.And("I enter sites details and Save", ((string)(null)), table1, "And ");
#line 37
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.Then("I see success message \"Save Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 41
 testRunner.And("I click breadcrumb \"Site Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T05_Navigate to the Edit Preferences page and set the CRF Default save to Complet" +
            "e and update the Endpoint URL")]
        public virtual void T05_NavigateToTheEditPreferencesPageAndSetTheCRFDefaultSaveToCompleteAndUpdateTheEndpointURL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T05_Navigate to the Edit Preferences page and set the CRF Default save to Complet" +
                    "e and update the Endpoint URL", null, ((string[])(null)));
#line 43
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 44
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 45
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 46
 testRunner.And("I click ActionPalette Item \"Edit Preferences\" in \"StudyResetAction\" ActionPalette" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 47
 testRunner.And("I open tab \"Forms\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 48
 testRunner.And("I select the \"Partial\" for Default Save: in StudyEditPreferencesFormsPage.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 49
 testRunner.And("I open tab \"patient data eventing\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 50
 testRunner.And("I update the endpoint URL under Patient Data Eventing tab.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 51
 testRunner.And("I click \"Save\" button on the Edit Preferences page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.Then("I verify the success message displayed as \"Edit Preferences Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T06_Add patient 01-PAT from Datalabs UI")]
        public virtual void T06_AddPatient01_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T06_Add patient 01-PAT from Datalabs UI", null, ((string[])(null)));
#line 54
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 55
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 56
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table2.AddRow(new string[] {
                        "01",
                        "PAT",
                        "06/13/2018"});
#line 57
 testRunner.When("I add patient with below details.", ((string)(null)), table2, "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table3.AddRow(new string[] {
                        "01-PAT"});
#line 60
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T07_Select and enroll patient 01-PAT.")]
        public virtual void T07_SelectAndEnrollPatient01_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T07_Select and enroll patient 01-PAT.", null, ((string[])(null)));
#line 64
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 65
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 66
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table4.AddRow(new string[] {
                        "01",
                        "06/13/2018",
                        "Yes"});
#line 68
 testRunner.When("I enroll the patient \"01-PAT\" with below data.", ((string)(null)), table4, "When ");
#line 71
 testRunner.Then("I see patient \"01-PAT\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T08_Select a site and a patient.")]
        public virtual void T08_SelectASiteAndAPatient_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T08_Select a site and a patient.", null, ((string[])(null)));
#line 73
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 74
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 75
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 77
 testRunner.Then("I see Patient details page for \"01-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T09_Navigate to Form1 in visit screening event and update the data for integer qu" +
            "estion")]
        public virtual void T09_NavigateToForm1InVisitScreeningEventAndUpdateTheDataForIntegerQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T09_Navigate to Form1 in visit screening event and update the data for integer qu" +
                    "estion", null, ((string[])(null)));
#line 79
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 80
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 81
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 83
 testRunner.And("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table5.AddRow(new string[] {
                        "Sample integer question:",
                        "1050",
                        "TextBox"});
#line 85
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table5, "And ");
#line 88
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
 testRunner.And("I click Continue button of Modal \"Queries Result\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T10_Verify the XML For raised system query for integer question")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.1,3.1.5.2,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13")]
        public virtual void T10_VerifyTheXMLForRaisedSystemQueryForIntegerQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T10_Verify the XML For raised system query for integer question", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.1,3.1.5.2,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13"});
#line 93
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 94
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual1.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%ItemOID=""Integer"" TransactionType=""Insert"" Value=""1050""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 95
 testRunner.And("I have the XML file \"QueryCreateExpected1.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
 testRunner.And("I have the XML file \"QueryCreateActual1.xml\" available in the Test XML Files fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table6.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table6.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table6.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table6.AddRow(new string[] {
                        "",
                        "FileOID"});
            table6.AddRow(new string[] {
                        "",
                        "SourceID"});
            table6.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table6.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 97
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T11_Update the integer question and verify the closed query details")]
        public virtual void T11_UpdateTheIntegerQuestionAndVerifyTheClosedQueryDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T11_Update the integer question and verify the closed query details", null, ((string[])(null)));
#line 107
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 108
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 109
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 110
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 111
 testRunner.And("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes"});
            table7.AddRow(new string[] {
                        "Sample integer question:",
                        "1050",
                        "TextBox",
                        "14",
                        "DCF",
                        "Updated Value"});
#line 113
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table7, "And ");
#line 116
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T12_Verify the generated XML file for closed queries.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13")]
        public virtual void T12_VerifyTheGeneratedXMLFileForClosedQueries_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T12_Verify the generated XML file for closed queries.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13"});
#line 120
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 121
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual2.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%ItemData ItemOID=""Integer"" TransactionType=""Update"" Value=""14""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 122
 testRunner.And("I have the XML file \"QueryCreateExpected2.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
 testRunner.And("I have the XML file \"QueryCreateActual2.xml\" available in the Test XML Files fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table8.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table8.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table8.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table8.AddRow(new string[] {
                        "",
                        "FileOID"});
            table8.AddRow(new string[] {
                        "",
                        "SourceID"});
            table8.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table8.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 124
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T13_Update the date question in form1 in visit screening")]
        public virtual void T13_UpdateTheDateQuestionInForm1InVisitScreening()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T13_Update the date question in form1 in visit screening", null, ((string[])(null)));
#line 134
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 135
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 136
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 138
 testRunner.And("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 139
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table9.AddRow(new string[] {
                        "Sample date question:",
                        "12/10/2018",
                        "TextBox"});
#line 140
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table9, "And ");
#line 143
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
 testRunner.And("I click Continue button of Modal \"Queries Result\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T14_Verify the generated XML for date question update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.1,3.1.5.2,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13")]
        public virtual void T14_VerifyTheGeneratedXMLForDateQuestionUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T14_Verify the generated XML for date question update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.1,3.1.5.2,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13"});
#line 148
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 149
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual3.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%ItemData ItemOID=""Date"" TransactionType=""Insert"" Value=""12/10/2018""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 150
 testRunner.And("I have the XML file \"QueryCreateExpected3.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
 testRunner.And("I have the XML file \"QueryCreateActual3.xml\" available in the Test XML Files fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table10.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table10.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table10.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table10.AddRow(new string[] {
                        "",
                        "FileOID"});
            table10.AddRow(new string[] {
                        "",
                        "SourceID"});
            table10.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table10.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 152
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T15_Update the date question and verify the closed query and raised the same quer" +
            "ies details")]
        public virtual void T15_UpdateTheDateQuestionAndVerifyTheClosedQueryAndRaisedTheSameQueriesDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T15_Update the date question and verify the closed query and raised the same quer" +
                    "ies details", null, ((string[])(null)));
#line 162
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 163
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 164
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 166
 testRunner.And("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes"});
            table11.AddRow(new string[] {
                        "Sample date question:",
                        "12/10/2018",
                        "TextBox",
                        "08/26/2005",
                        "DCF",
                        "Updated date"});
#line 168
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table11, "And ");
#line 171
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
 testRunner.And("I click Continue button of Modal \"Queries Result\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 173
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T16_Verify the generated XML file for closed and Created queries.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.1,3.1.5.2,3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3" +
            ".1.5.12,3.1.5.13")]
        public virtual void T16_VerifyTheGeneratedXMLFileForClosedAndCreatedQueries_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T16_Verify the generated XML file for closed and Created queries.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.1,3.1.5.2,3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3" +
                            ".1.5.12,3.1.5.13"});
#line 176
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 177
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual4.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%ItemData ItemOID=""Date"" TransactionType=""Update"" Value=""08/26/2005""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 178
 testRunner.And("I have the XML file \"QueryCreateExpected4.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 179
 testRunner.And("I have the XML file \"QueryCreateActual4.xml\" available in the Test XML Files fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table12.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table12.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table12.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table12.AddRow(new string[] {
                        "",
                        "FileOID"});
            table12.AddRow(new string[] {
                        "",
                        "SourceID"});
            table12.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table12.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 180
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T17_update the status from sent to viewed on opening the existing query")]
        public virtual void T17_UpdateTheStatusFromSentToViewedOnOpeningTheExistingQuery()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T17_update the status from sent to viewed on opening the existing query", null, ((string[])(null)));
#line 190
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 191
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 192
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 193
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 194
 testRunner.And("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
 testRunner.And("I open main tab \"DCFs\" of Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "DCFID",
                        "Status",
                        "QueryDescription"});
            table13.AddRow(new string[] {
                        "",
                        "Sent",
                        "Q6: Value is not within the expected normal range (1/1/1950 to 1/1/2000)"});
#line 196
 testRunner.And("I select the DCF row", ((string)(null)), table13, "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "DCFStatus"});
            table14.AddRow(new string[] {
                        "Viewed"});
#line 199
 testRunner.Then("I see header details in EditDCFPage", ((string)(null)), table14, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T18_Verify the XML for updated status from sent to Viewed query details")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13" +
            "")]
        public virtual void T18_VerifyTheXMLForUpdatedStatusFromSentToViewedQueryDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T18_Verify the XML for updated status from sent to Viewed query details", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13" +
                            ""});
#line 204
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 205
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual5.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 17 and XmlMessage like '%ItemData ItemOID=""Date"" Value=""08/26/2005""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 206
 testRunner.And("I have the XML file \"QueryCreateExpected5.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 207
 testRunner.And("I have the XML file \"QueryCreateActual5.xml\" available in the Test XML Files fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table15.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table15.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table15.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table15.AddRow(new string[] {
                        "",
                        "FileOID"});
            table15.AddRow(new string[] {
                        "",
                        "SourceID"});
            table15.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table15.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 208
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table15, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T19_Create Manual DCF through actions at form level and check in DCF tab for crea" +
            "ted DCF")]
        public virtual void T19_CreateManualDCFThroughActionsAtFormLevelAndCheckInDCFTabForCreatedDCF()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T19_Create Manual DCF through actions at form level and check in DCF tab for crea" +
                    "ted DCF", null, ((string[])(null)));
#line 218
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 219
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 220
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 221
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 222
 testRunner.And("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 223
 testRunner.When("I click ActionPalette Item \"Create DCF\" in \"CRFAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "DCFStatus",
                        "QueryDescription",
                        "ActionRequest"});
            table16.AddRow(new string[] {
                        "Draft",
                        "Please enter the value.",
                        "Please Verify."});
#line 224
 testRunner.And("I enter manual DCF details in CreateDCFDialog", ((string)(null)), table16, "And ");
#line 227
 testRunner.And("I click save button in CreateDCFDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 228
 testRunner.Then("I see success message \"Dcf Create Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T20_Verify the XML for updated status from sent to Viewed query details")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.3,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13")]
        public virtual void T20_VerifyTheXMLForUpdatedStatusFromSentToViewedQueryDetails()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T20_Verify the XML for updated status from sent to Viewed query details", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.3,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13"});
#line 231
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 232
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual6.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 17 and XmlMessage like '%Description=""Please enter the value."" Request=""Please Verify.""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 233
 testRunner.And("I have the XML file \"QueryCreateExpected6.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 234
 testRunner.And("I have the XML file \"QueryCreateActual6.xml\" available in the Test XML Files fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table17.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table17.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table17.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table17.AddRow(new string[] {
                        "",
                        "FileOID"});
            table17.AddRow(new string[] {
                        "",
                        "SourceID"});
            table17.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table17.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 235
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table17, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T21_Create DCF on question level for sample text question in visit screening form" +
            "1")]
        public virtual void T21_CreateDCFOnQuestionLevelForSampleTextQuestionInVisitScreeningForm1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T21_Create DCF on question level for sample text question in visit screening form" +
                    "1", null, ((string[])(null)));
#line 245
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 246
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 247
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 248
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 249
 testRunner.And("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 250
 testRunner.When("I click icon \"icon_createdcf.png\" for the flat question \"Sample text question:\" i" +
                    "n CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "DCFStatus",
                        "QueryDescription",
                        "ActionRequest"});
            table18.AddRow(new string[] {
                        "Draft",
                        "Enter the correct value.",
                        "Please Verify and update the value."});
#line 251
 testRunner.And("I enter manual DCF details in CreateDCFDialog", ((string)(null)), table18, "And ");
#line 254
 testRunner.And("I click save button in CreateDCFDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 255
 testRunner.Then("I see success message \"Dcf Create Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T22_Verify XML file for created DCF on sample text question in visit screening fo" +
            "rm1.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.3,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13")]
        public virtual void T22_VerifyXMLFileForCreatedDCFOnSampleTextQuestionInVisitScreeningForm1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T22_Verify XML file for created DCF on sample text question in visit screening fo" +
                    "rm1.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.3,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13"});
#line 258
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 259
 testRunner.Given("I save the Event XML data in \"QueryCreateActual7.xml\" file by executing the query" +
                    " \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 17 and " +
                    "XmlMessage like \'%ItemData ItemOID=\"Text\" Value=\"\"%\' order by OdmSubscriberDetai" +
                    "lKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 260
 testRunner.And("I have the XML file \"QueryCreateExpected7.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 261
 testRunner.And("I have the XML file \"QueryCreateActual7.xml\" available in the Test XML Files fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table19.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table19.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table19.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table19.AddRow(new string[] {
                        "",
                        "FileOID"});
            table19.AddRow(new string[] {
                        "",
                        "SourceID"});
            table19.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table19.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 262
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table19, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T23_Update the manual query status from draft to sent raised on sample text quest" +
            "ion in visit screening form1.")]
        public virtual void T23_UpdateTheManualQueryStatusFromDraftToSentRaisedOnSampleTextQuestionInVisitScreeningForm1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T23_Update the manual query status from draft to sent raised on sample text quest" +
                    "ion in visit screening form1.", null, ((string[])(null)));
#line 272
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 273
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 274
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 275
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 276
 testRunner.And("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 277
 testRunner.And("I open main tab \"DCFs\" of Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "DCFID",
                        "Status",
                        "QueryDescription"});
            table20.AddRow(new string[] {
                        "",
                        "Draft",
                        "Enter the correct value."});
#line 278
 testRunner.And("I select the DCF row", ((string)(null)), table20, "And ");
#line 281
 testRunner.And("I click ActionPalette Item \"Send\" in \"DCFAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 282
 testRunner.Then("I see success message \"Dcf Create Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T24_Verify XML file for updated status from draft to sent of sample text question" +
            " query in visit screening form1.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13" +
            "")]
        public virtual void T24_VerifyXMLFileForUpdatedStatusFromDraftToSentOfSampleTextQuestionQueryInVisitScreeningForm1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T24_Verify XML file for updated status from draft to sent of sample text question" +
                    " query in visit screening form1.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13" +
                            ""});
#line 285
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 286
 testRunner.Given("I save the Event XML data in \"QueryCreateActual8.xml\" file by executing the query" +
                    " \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 17 and " +
                    "XmlMessage like \'%ItemData ItemOID=\"Text\" Value=\"\"%\' order by OdmSubscriberDetai" +
                    "lKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 287
 testRunner.And("I have the XML file \"QueryCreateExpected8.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 288
 testRunner.And("I have the XML file \"QueryCreateActual8.xml\" available in the Test XML Files fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table21.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table21.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table21.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table21.AddRow(new string[] {
                        "",
                        "FileOID"});
            table21.AddRow(new string[] {
                        "",
                        "SourceID"});
            table21.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table21.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 289
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table21, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T25_Update the status from sent to Viewed of sample text question query in visit " +
            "screening form1")]
        public virtual void T25_UpdateTheStatusFromSentToViewedOfSampleTextQuestionQueryInVisitScreeningForm1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T25_Update the status from sent to Viewed of sample text question query in visit " +
                    "screening form1", null, ((string[])(null)));
#line 299
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 300
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 301
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 302
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 303
 testRunner.And("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 304
 testRunner.And("I open main tab \"DCFs\" of Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "DCFID",
                        "Status",
                        "QueryDescription"});
            table22.AddRow(new string[] {
                        "",
                        "Sent",
                        "Enter the correct value."});
#line 305
 testRunner.And("I select the DCF row", ((string)(null)), table22, "And ");
#line 308
 testRunner.Then("I see success message \"Dcf Create Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T26_Verify XML file for updated status from sent to viewed of sample text questio" +
            "n query in visit screening form1.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13" +
            "")]
        public virtual void T26_VerifyXMLFileForUpdatedStatusFromSentToViewedOfSampleTextQuestionQueryInVisitScreeningForm1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T26_Verify XML file for updated status from sent to viewed of sample text questio" +
                    "n query in visit screening form1.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13" +
                            ""});
#line 311
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 312
 testRunner.Given("I save the Event XML data in \"QueryCreateActual9.xml\" file by executing the query" +
                    " \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 17 and " +
                    "XmlMessage like \'%ItemData ItemOID=\"Text\" Value=\"\"%\' order by OdmSubscriberDetai" +
                    "lKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 313
 testRunner.And("I have the XML file \"QueryCreateExpected9.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 314
 testRunner.And("I have the XML file \"QueryCreateActual9.xml\" available in the Test XML Files fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table23.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table23.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table23.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table23.AddRow(new string[] {
                        "",
                        "FileOID"});
            table23.AddRow(new string[] {
                        "",
                        "SourceID"});
            table23.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table23.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 315
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table23, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T27_Update the status from viewed to answer for sample text question in visit scr" +
            "eening form1.")]
        public virtual void T27_UpdateTheStatusFromViewedToAnswerForSampleTextQuestionInVisitScreeningForm1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T27_Update the status from viewed to answer for sample text question in visit scr" +
                    "eening form1.", null, ((string[])(null)));
#line 325
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 326
testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 327
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 328
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 329
 testRunner.And("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 330
 testRunner.And("I open main tab \"DCFs\" of Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "DCFID",
                        "Status",
                        "QueryDescription"});
            table24.AddRow(new string[] {
                        "",
                        "Viewed",
                        "Enter the correct value."});
#line 331
 testRunner.And("I select the DCF row", ((string)(null)), table24, "And ");
#line 334
 testRunner.When("I click ActionPalette Item \"Answer\" in \"DCFAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 335
 testRunner.And("I enter response \"DCF answered\" in AnswerDCFDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 336
 testRunner.And("I click SaveButton in AnswerDCFDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 337
 testRunner.Then("I see success message \"Dcf Create Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T28_Verify XML file for updated status from viewed to answered of sample text que" +
            "stion query in visit screening form1.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13" +
            "")]
        public virtual void T28_VerifyXMLFileForUpdatedStatusFromViewedToAnsweredOfSampleTextQuestionQueryInVisitScreeningForm1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T28_Verify XML file for updated status from viewed to answered of sample text que" +
                    "stion query in visit screening form1.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13" +
                            ""});
#line 340
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 341
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual10.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 17 and XmlMessage like '%<dl:ReasonForChange>Answered</dl:ReasonForChange>%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 342
 testRunner.And("I have the XML file \"QueryCreateExpected10.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 343
 testRunner.And("I have the XML file \"QueryCreateActual10.xml\" available in the Test XML Files fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table25.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table25.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table25.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table25.AddRow(new string[] {
                        "",
                        "FileOID"});
            table25.AddRow(new string[] {
                        "",
                        "SourceID"});
            table25.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table25.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 344
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table25, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T29_Close and Requery the answered query Enter the correct value from the DCF pag" +
            "e.")]
        public virtual void T29_CloseAndRequeryTheAnsweredQueryEnterTheCorrectValueFromTheDCFPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T29_Close and Requery the answered query Enter the correct value from the DCF pag" +
                    "e.", null, ((string[])(null)));
#line 354
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 355
testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 356
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 357
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 358
 testRunner.And("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 359
 testRunner.And("I open main tab \"DCFs\" of Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "DCFID",
                        "Status",
                        "QueryDescription"});
            table26.AddRow(new string[] {
                        "",
                        "Answered",
                        "Enter the correct value."});
#line 360
 testRunner.And("I select the DCF row", ((string)(null)), table26, "And ");
#line 363
 testRunner.And("I click ActionPalette Item \"Re-query\" in \"DCFAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "DCFStatus",
                        "QueryDescription",
                        "ActionRequest"});
            table27.AddRow(new string[] {
                        "Draft",
                        "Re-query as DRAFT",
                        "Re-query, Please Verify Value."});
#line 364
 testRunner.And("I enter manual DCF details in CreateDCFDialog", ((string)(null)), table27, "And ");
#line 367
 testRunner.And("I click save button in CreateDCFDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 368
 testRunner.Then("I see success message \"Dcf Create Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T30_Verify XML file for updated status from answered to closed of sample text que" +
            "stion query in visit screening form1.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13" +
            "")]
        public virtual void T30_VerifyXMLFileForUpdatedStatusFromAnsweredToClosedOfSampleTextQuestionQueryInVisitScreeningForm1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T30_Verify XML file for updated status from answered to closed of sample text que" +
                    "stion query in visit screening form1.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13" +
                            ""});
#line 371
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 372
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual11.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 17 and XmlMessage like '%<dl:Status CodeListOID=""DCF"">28</dl:Status>%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 373
 testRunner.And("I have the XML file \"QueryCreateExpected11.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 374
 testRunner.And("I have the XML file \"QueryCreateActual11.xml\" available in the Test XML Files fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table28.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table28.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table28.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table28.AddRow(new string[] {
                        "",
                        "FileOID"});
            table28.AddRow(new string[] {
                        "",
                        "SourceID"});
            table28.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table28.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 375
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table28, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T31_Add custom fields to query for sample text question query in visit screening " +
            "form1")]
        public virtual void T31_AddCustomFieldsToQueryForSampleTextQuestionQueryInVisitScreeningForm1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T31_Add custom fields to query for sample text question query in visit screening " +
                    "form1", null, ((string[])(null)));
#line 385
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 386
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 387
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 388
 testRunner.And("I click ActionPalette Item \"Edit Preferences\" in \"StudyResetAction\" ActionPalette" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 389
 testRunner.And("I open tab \"DCFs\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 390
 testRunner.And("I enter text \"Custom1\" in FieldLabelTextbox1 in StudyEditPreferencesDCFsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 391
 testRunner.And("I click ActiveRadioButton1 in StudyEditPreferencesDCFsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 392
 testRunner.And("I enter text \"Item1\" in AddNewItemTextbox1 in StudyEditPreferencesDCFsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 393
 testRunner.And("I click AddButton1 in StudyEditPreferencesDCFsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 394
 testRunner.And("I enter text \"Item2\" in AddNewItemTextbox1 in StudyEditPreferencesDCFsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 395
 testRunner.And("I click AddButton1 in StudyEditPreferencesDCFsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 396
 testRunner.And("I enter text \"Custom2\" in FieldLabelTextbox2 in StudyEditPreferencesDCFsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 397
 testRunner.And("I click ActiveRadioButton2 in StudyEditPreferencesDCFsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 398
 testRunner.And("I enter text \"Item3\" in AddNewItemTextbox2 in StudyEditPreferencesDCFsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 399
 testRunner.And("I click AddButton2 in StudyEditPreferencesDCFsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 400
 testRunner.And("I enter text \"Item4\" in AddNewItemTextbox2 in StudyEditPreferencesDCFsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 401
 testRunner.And("I click AddButton2 in StudyEditPreferencesDCFsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 402
 testRunner.And("I click SaveButton in StudyEditPreferencesDCFsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 403
 testRunner.Then("I verify the success message displayed as \"Edit Preferences Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T32_Add the custom field items for draft query in form1 screening event.")]
        public virtual void T32_AddTheCustomFieldItemsForDraftQueryInForm1ScreeningEvent_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T32_Add the custom field items for draft query in form1 screening event.", null, ((string[])(null)));
#line 405
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 406
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 407
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 408
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 409
 testRunner.And("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 410
 testRunner.And("I open main tab \"DCFs\" of Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "DCFID",
                        "Status",
                        "QueryDescription"});
            table29.AddRow(new string[] {
                        "",
                        "Draft",
                        "Please enter the value."});
#line 411
 testRunner.And("I select the DCF row", ((string)(null)), table29, "And ");
#line 414
 testRunner.And("I selected dropdown item \"Item2\" for customdropdown1 in EditDCFPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 415
 testRunner.And("I selected dropdown item \"Item3\" for customdropdown2 in EditDCFPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 416
 testRunner.And("I click save button in EditDCFPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 417
 testRunner.Then("I see success message \"Dcf Create Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T33_Verify the added custom field items to the query.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.7,3.1.5.8,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13")]
        public virtual void T33_VerifyTheAddedCustomFieldItemsToTheQuery_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T33_Verify the added custom field items to the query.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.7,3.1.5.8,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13"});
#line 420
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 421
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual12.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 17 and XmlMessage like '%Description=""Please enter the value."" Request=""Please Verify.""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 422
 testRunner.And("I have the XML file \"QueryCreateExpected12.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 423
 testRunner.And("I have the XML file \"QueryCreateActual12.xml\" available in the Test XML Files fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table30.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table30.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table30.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table30.AddRow(new string[] {
                        "",
                        "FileOID"});
            table30.AddRow(new string[] {
                        "",
                        "SourceID"});
            table30.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table30.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 424
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table30, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T34_Update the status to sent from draft.")]
        public virtual void T34_UpdateTheStatusToSentFromDraft_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T34_Update the status to sent from draft.", null, ((string[])(null)));
#line 434
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 435
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 436
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 437
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 438
 testRunner.And("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 439
 testRunner.And("I open main tab \"DCFs\" of Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "DCFID",
                        "Status",
                        "QueryDescription"});
            table31.AddRow(new string[] {
                        "",
                        "Draft",
                        "Please enter the value."});
#line 440
 testRunner.And("I select the DCF row", ((string)(null)), table31, "And ");
#line 443
 testRunner.And("I click ActionPalette Item \"Send\" in \"DCFAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 444
 testRunner.Then("I see success message \"Dcf Create Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T35_Verify the updated status from draft to send query.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.7,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12," +
            "3.1.5.13")]
        public virtual void T35_VerifyTheUpdatedStatusFromDraftToSendQuery_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T35_Verify the updated status from draft to send query.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.7,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12," +
                            "3.1.5.13"});
#line 447
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 448
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual13.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 17 and XmlMessage like '%dl:Status CodeListOID=""DCF"">24</dl:Status>%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 449
 testRunner.And("I have the XML file \"QueryCreateExpected13.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 450
 testRunner.And("I have the XML file \"QueryCreateActual13.xml\" available in the Test XML Files fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table32.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table32.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table32.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table32.AddRow(new string[] {
                        "",
                        "FileOID"});
            table32.AddRow(new string[] {
                        "",
                        "SourceID"});
            table32.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table32.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 451
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table32, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T36_Update the status from sent to viewed for visit screening form1.")]
        public virtual void T36_UpdateTheStatusFromSentToViewedForVisitScreeningForm1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T36_Update the status from sent to viewed for visit screening form1.", null, ((string[])(null)));
#line 461
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 462
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 463
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 464
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 465
 testRunner.And("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 466
 testRunner.And("I open main tab \"DCFs\" of Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "DCFID",
                        "Status",
                        "QueryDescription"});
            table33.AddRow(new string[] {
                        "",
                        "Sent",
                        "Please enter the value."});
#line 467
 testRunner.And("I select the DCF row", ((string)(null)), table33, "And ");
#line 470
 testRunner.Then("I see success message \"Dcf Create Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T37_Verify XML file for updated query custom field properties of visit screening " +
            "form1.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.7,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12," +
            "3.1.5.13")]
        public virtual void T37_VerifyXMLFileForUpdatedQueryCustomFieldPropertiesOfVisitScreeningForm1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T37_Verify XML file for updated query custom field properties of visit screening " +
                    "form1.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.7,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12," +
                            "3.1.5.13"});
#line 473
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 474
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual14.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 17 and XmlMessage like '%StudyEventData StudyEventOID=""Screening""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 475
 testRunner.And("I have the XML file \"QueryCreateExpected14.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 476
 testRunner.And("I have the XML file \"QueryCreateActual14.xml\" available in the Test XML Files fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table34.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table34.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table34.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table34.AddRow(new string[] {
                        "",
                        "FileOID"});
            table34.AddRow(new string[] {
                        "",
                        "SourceID"});
            table34.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table34.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 477
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table34, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T38_Update the status from viewed to answered and update the custom field items.")]
        public virtual void T38_UpdateTheStatusFromViewedToAnsweredAndUpdateTheCustomFieldItems_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T38_Update the status from viewed to answered and update the custom field items.", null, ((string[])(null)));
#line 487
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 488
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 489
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 490
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 491
 testRunner.And("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 492
 testRunner.And("I open main tab \"DCFs\" of Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "DCFID",
                        "Status",
                        "QueryDescription"});
            table35.AddRow(new string[] {
                        "",
                        "Viewed",
                        "Please enter the value."});
#line 493
 testRunner.And("I select the DCF row", ((string)(null)), table35, "And ");
#line 496
 testRunner.And("I selected dropdown item \"Item1\" for customdropdown1 in EditDCFPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 497
 testRunner.And("I selected dropdown item \"Item4\" for customdropdown2 in EditDCFPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 498
 testRunner.When("I click ActionPalette Item \"Answer\" in \"DCFAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 499
 testRunner.And("I enter response \"DCF answered for query\" in AnswerDCFDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 500
 testRunner.And("I click SaveButton in AnswerDCFDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 501
 testRunner.Then("I see success message \"Dcf Create Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T39_Verify XML file for updated status from viewed to answered of visit screening" +
            " form1.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13" +
            "")]
        public virtual void T39_VerifyXMLFileForUpdatedStatusFromViewedToAnsweredOfVisitScreeningForm1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T39_Verify XML file for updated status from viewed to answered of visit screening" +
                    " form1.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13" +
                            ""});
#line 504
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 505
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual15.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 17 and XmlMessage like '%<dl:ReasonForChange>Answered</dl:ReasonForChange>%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 506
 testRunner.And("I have the XML file \"QueryCreateExpected15.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 507
 testRunner.And("I have the XML file \"QueryCreateActual15.xml\" available in the Test XML Files fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table36.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table36.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table36.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table36.AddRow(new string[] {
                        "",
                        "FileOID"});
            table36.AddRow(new string[] {
                        "",
                        "SourceID"});
            table36.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table36.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 508
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table36, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T40_Verify XML file for updated custom field items.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.7,3.1.5.8,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13")]
        public virtual void T40_VerifyXMLFileForUpdatedCustomFieldItems_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T40_Verify XML file for updated custom field items.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.7,3.1.5.8,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13"});
#line 519
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 520
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual16.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 17 and XmlMessage like '%<dl:ReasonForChange>Answered</dl:ReasonForChange>%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 521
 testRunner.And("I have the XML file \"QueryCreateExpected16.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 522
 testRunner.And("I have the XML file \"QueryCreateActual16.xml\" available in the Test XML Files fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table37.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table37.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table37.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table37.AddRow(new string[] {
                        "",
                        "FileOID"});
            table37.AddRow(new string[] {
                        "",
                        "SourceID"});
            table37.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table37.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 523
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table37, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T41_Update the status to closed and off the custom fields.")]
        public virtual void T41_UpdateTheStatusToClosedAndOffTheCustomFields_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T41_Update the status to closed and off the custom fields.", null, ((string[])(null)));
#line 533
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 534
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 535
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 536
 testRunner.And("I click ActionPalette Item \"Edit Preferences\" in \"StudyResetAction\" ActionPalette" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 537
 testRunner.And("I open tab \"DCFs\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 538
 testRunner.And("I click InactiveRadioButton1 in StudyEditPreferencesDCFsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 539
 testRunner.And("I click InactiveRadioButton2 in StudyEditPreferencesDCFsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 540
 testRunner.And("I click SaveButton in StudyEditPreferencesDCFsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 541
 testRunner.Then("I see success message \"Dcf Create Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T42_Update the status from answered to Closed for visit screening form1 query.")]
        public virtual void T42_UpdateTheStatusFromAnsweredToClosedForVisitScreeningForm1Query_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T42_Update the status from answered to Closed for visit screening form1 query.", null, ((string[])(null)));
#line 543
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 544
testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 545
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 546
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 547
 testRunner.And("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 548
 testRunner.And("I open main tab \"DCFs\" of Form", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "DCFID",
                        "Status",
                        "QueryDescription"});
            table38.AddRow(new string[] {
                        "",
                        "Answered",
                        "Please enter the value."});
#line 549
 testRunner.And("I select the DCF row", ((string)(null)), table38, "And ");
#line 552
 testRunner.When("I click ActionPalette Item \"Close\" in \"DCFAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 553
 testRunner.Then("I see success message \"Dcf Create Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T43_Verify XML file for updated status from answered to Closed of visit screening" +
            " form1.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13" +
            "")]
        public virtual void T43_VerifyXMLFileForUpdatedStatusFromAnsweredToClosedOfVisitScreeningForm1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T43_Verify XML file for updated status from answered to Closed of visit screening" +
                    " form1.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13" +
                            ""});
#line 556
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 557
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual17.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 17 and XmlMessage like '%<dl:ReasonForChange>Closed</dl:ReasonForChange>%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 558
 testRunner.And("I have the XML file \"QueryCreateExpected17.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 559
 testRunner.And("I have the XML file \"QueryCreateActual17.xml\" available in the Test XML Files fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table39.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table39.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table39.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table39.AddRow(new string[] {
                        "",
                        "FileOID"});
            table39.AddRow(new string[] {
                        "",
                        "SourceID"});
            table39.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table39.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 560
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table39, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T44_Create query with New status on updating site settings.")]
        public virtual void T44_CreateQueryWithNewStatusOnUpdatingSiteSettings_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T44_Create query with New status on updating site settings.", null, ((string[])(null)));
#line 570
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 571
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 572
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 573
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "DCFWorkflow"});
            table40.AddRow(new string[] {
                        "Paper"});
#line 574
 testRunner.And("I edit site and Save in SiteDetailsPage", ((string)(null)), table40, "And ");
#line 577
 testRunner.Then("I see site \"01-Site\" in SiteManagementPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T45_Update the integer question for to raise a query with status \"New\"")]
        public virtual void T45_UpdateTheIntegerQuestionForToRaiseAQueryWithStatusNew()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T45_Update the integer question for to raise a query with status \"New\"", null, ((string[])(null)));
#line 579
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 580
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 581
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 582
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 583
 testRunner.And("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 584
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes"});
            table41.AddRow(new string[] {
                        "Sample integer question:",
                        "14",
                        "TextBox",
                        "1080",
                        "SOR",
                        "Updated Value1"});
#line 585
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table41, "And ");
#line 588
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 589
 testRunner.And("I click Continue button of Modal \"Queries Result\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 590
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T46_Verify XML file for updated status from answered to Closed of visit screening" +
            " form1.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.1,3.1.5.2,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13")]
        public virtual void T46_VerifyXMLFileForUpdatedStatusFromAnsweredToClosedOfVisitScreeningForm1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T46_Verify XML file for updated status from answered to Closed of visit screening" +
                    " form1.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.1,3.1.5.2,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13"});
#line 593
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 594
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual18.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%ItemData ItemOID=""Integer"" TransactionType=""Update"" Value=""1080""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 595
 testRunner.And("I have the XML file \"QueryCreateExpected18.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 596
 testRunner.And("I have the XML file \"QueryCreateActual18.xml\" available in the Test XML Files fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table42.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table42.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table42.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table42.AddRow(new string[] {
                        "",
                        "FileOID"});
            table42.AddRow(new string[] {
                        "",
                        "SourceID"});
            table42.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table42.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 597
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table42, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T47_Update the status from Sent to New from site settings.")]
        public virtual void T47_UpdateTheStatusFromSentToNewFromSiteSettings_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T47_Update the status from Sent to New from site settings.", null, ((string[])(null)));
#line 607
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 608
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 609
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 610
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "DCFWorkflow"});
            table43.AddRow(new string[] {
                        "Electronic"});
#line 611
 testRunner.And("I edit site and Save in SiteDetailsPage", ((string)(null)), table43, "And ");
#line 614
 testRunner.Then("I see site \"01-Site\" in SiteManagementPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T48_Create L4 query on updating two forms of data (AB_date query) and update auto" +
            " build form07.")]
        public virtual void T48_CreateL4QueryOnUpdatingTwoFormsOfDataAB_DateQueryAndUpdateAutoBuildForm07_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T48_Create L4 query on updating two forms of data (AB_date query) and update auto" +
                    " build form07.", null, ((string[])(null)));
#line 616
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 617
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 618
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 619
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 620
 testRunner.And("I expand \"Visit (Week 53)\" to select and open \"AutoBuild Form07\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 621
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form07\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table44.AddRow(new string[] {
                        "No",
                        "1",
                        "What Color is it?",
                        "Red",
                        "ListBox",
                        ""});
            table44.AddRow(new string[] {
                        "No",
                        "1",
                        "Date (Condition - Q1 is not equal to \"Not Applicable\")",
                        "08/26/1990",
                        "TextBox",
                        "Save & Close Row"});
#line 622
 testRunner.And("I enter below \"Key Sequence is on questions #1 & #3. Maximum Row is exactly 8. Ta" +
                    "ble Structure is open.:\" autobuild table questions data in the CRF.", ((string)(null)), table44, "And ");
#line 626
 testRunner.And("I click on \"Save & Close\" button on \"AutoBuild Form07\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 627
 testRunner.Then("I see success message \"Dcf Create Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T49_Update the data in autobuild form06 in visit week 53.")]
        public virtual void T49_UpdateTheDataInAutobuildForm06InVisitWeek53_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T49_Update the data in autobuild form06 in visit week 53.", null, ((string[])(null)));
#line 629
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 630
 testRunner.And("I expand \"Visit (Week 53)\" to select and open \"AutoBuild Form06\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 631
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form06\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table45.AddRow(new string[] {
                        "No",
                        "1",
                        "Date Field:&#x20",
                        "08/26/1990",
                        "TextBox",
                        "Save & Close Row"});
#line 632
 testRunner.And("I enter below \"Key Sequence is on questions #1 & #2. Maximum Table Rows is 25:\" a" +
                    "utobuild table questions data in the CRF.", ((string)(null)), table45, "And ");
#line 635
 testRunner.And("I click on \"Save & Close\" button on \"AutoBuild Form06\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 636
 testRunner.Then("I see success message \"Dcf Create Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T50_Verify XML file for created L4 query on visit week 53 auto build form 06 and " +
            "07.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.4.5,3.1.4.6,3.1.5.3,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13" +
            "")]
        public virtual void T50_VerifyXMLFileForCreatedL4QueryOnVisitWeek53AutoBuildForm06And07_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T50_Verify XML file for created L4 query on visit week 53 auto build form 06 and " +
                    "07.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.4.5,3.1.4.6,3.1.5.3,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13" +
                            ""});
#line 639
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 640
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual19.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 17 and XmlMessage like '%ItemData ItemOID=""AB_Date11"" Value=""08/26/1990""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 641
 testRunner.And("I have the XML file \"QueryCreateExpected19.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 642
 testRunner.And("I have the XML file \"QueryCreateActual19.xml\" available in the Test XML Files fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table46.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table46.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table46.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table46.AddRow(new string[] {
                        "",
                        "FileOID"});
            table46.AddRow(new string[] {
                        "",
                        "SourceID"});
            table46.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table46.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 643
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table46, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T51_update the data in visit screening form1.")]
        public virtual void T51_UpdateTheDataInVisitScreeningForm1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T51_update the data in visit screening form1.", null, ((string[])(null)));
#line 653
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 654
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 655
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 656
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 657
 testRunner.And("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 658
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table47.AddRow(new string[] {
                        "Sample float question:",
                        "1234",
                        "TextBox"});
#line 659
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table47, "And ");
#line 662
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 663
 testRunner.And("I click Continue button of Modal \"Queries Result\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 664
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T52_verify the XML file for generated query against float question in form1.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.1,3.1.5.2,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13")]
        public virtual void T52_VerifyTheXMLFileForGeneratedQueryAgainstFloatQuestionInForm1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T52_verify the XML file for generated query against float question in form1.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.1,3.1.5.2,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13"});
#line 667
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 668
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual20.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%ItemData ItemOID=""Float"" TransactionType=""Insert"" Value=""1234""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 669
 testRunner.And("I have the XML file \"QueryCreateExpected20.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 670
 testRunner.And("I have the XML file \"QueryCreateActual20.xml\" available in the Test XML Files fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table48.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table48.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table48.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table48.AddRow(new string[] {
                        "",
                        "FileOID"});
            table48.AddRow(new string[] {
                        "",
                        "SourceID"});
            table48.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table48.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 671
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table48, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T53_Update study with patients migration")]
        public virtual void T53_UpdateStudyWithPatientsMigration()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T53_Update study with patients migration", null, ((string[])(null)));
#line 683
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 684
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 685
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 686
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 687
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 688
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 689
 testRunner.And("I upload study \"Test4500_QUER_Major study Update V2.zip\" with Label \"V2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 690
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 691
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 692
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 693
 testRunner.And("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 694
 testRunner.And("I select \"Yes\" to reevaluate \"Change SD-Verify Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 695
 testRunner.And("I select \"Yes\" to reevaluate \"Change D-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 696
 testRunner.And("I select \"Yes\" to reevaluate \"Change M-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 697
 testRunner.And("I select \"Yes\" to reevaluate \"Change Signatures?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 698
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 699
 testRunner.And("I select patient migration option \"Migrate all patients\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 700
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 701
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table49.AddRow(new string[] {
                        "Migration of Site 01 for Study file (V2) - complete. 1 out of 1 patients migrated" +
                            " successfully. To review see migration report."});
            table49.AddRow(new string[] {
                        "Publishing of Study file (V2) - complete."});
#line 702
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table49, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T54_verify the XML file for generated query against float question in form1.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.1,3.1.5.2,3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3" +
            ".1.5.12,3.1.5.13.,3.1.6.10,3.1.6.1")]
        public virtual void T54_VerifyTheXMLFileForGeneratedQueryAgainstFloatQuestionInForm1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T54_verify the XML file for generated query against float question in form1.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.1,3.1.5.2,3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3" +
                            ".1.5.12,3.1.5.13.,3.1.6.10,3.1.6.1"});
#line 708
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 709
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual21.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 16 and XmlMessage like '%ItemData ItemOID=""Float"" TransactionType=""Update"" Value=""1234""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 710
 testRunner.And("I have the XML file \"QueryCreateExpected21.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 711
 testRunner.And("I have the XML file \"QueryCreateActual21.xml\" available in the Test XML Files fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table50.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table50.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table50.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table50.AddRow(new string[] {
                        "",
                        "FileOID"});
            table50.AddRow(new string[] {
                        "",
                        "SourceID"});
            table50.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table50.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 712
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table50, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T55_update query category status and query deactivate study update major.")]
        public virtual void T55_UpdateQueryCategoryStatusAndQueryDeactivateStudyUpdateMajor_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T55_update query category status and query deactivate study update major.", null, ((string[])(null)));
#line 722
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 723
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 724
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 725
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 726
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 727
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 728
 testRunner.And("I upload study \"Test4500_QUER_Major study Update V3.zip\" with Label \"V3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 729
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 730
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 731
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 732
 testRunner.And("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 733
 testRunner.And("I select \"Yes\" to reevaluate \"Change SD-Verify Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 734
 testRunner.And("I select \"Yes\" to reevaluate \"Change D-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 735
 testRunner.And("I select \"Yes\" to reevaluate \"Change M-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 736
 testRunner.And("I select \"Yes\" to reevaluate \"Change Signatures?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 737
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 738
 testRunner.And("I select patient migration option \"Migrate all patients\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 739
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 740
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table51.AddRow(new string[] {
                        "Migration of Site 01 for Study file (V3) - complete. 1 out of 1 patients migrated" +
                            " successfully. To review see migration report."});
            table51.AddRow(new string[] {
                        "Publishing of Study file (V3) - complete."});
#line 741
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table51, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T56_verify the XML file for generated query against float question in form1.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13" +
            ",3.1.5.14,3.1.6.10,3.1.6.1")]
        public virtual void T56_VerifyTheXMLFileForGeneratedQueryAgainstFloatQuestionInForm1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T56_verify the XML file for generated query against float question in form1.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13" +
                            ",3.1.5.14,3.1.6.10,3.1.6.1"});
#line 747
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 748
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual22.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 16 and XmlMessage like '%ItemData ItemOID=""AB_Date11"" TransactionType=""Update"" Value=""08/26/1990""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 749
 testRunner.And("I have the XML file \"QueryCreateExpected22.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 750
 testRunner.And("I have the XML file \"QueryCreateActual22.xml\" available in the Test XML Files fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table52.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table52.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table52.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table52.AddRow(new string[] {
                        "",
                        "FileOID"});
            table52.AddRow(new string[] {
                        "",
                        "SourceID"});
            table52.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table52.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 751
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table52, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T57_Update the query category to OFF and verify the XML file.")]
        public virtual void T57_UpdateTheQueryCategoryToOFFAndVerifyTheXMLFile_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T57_Update the query category to OFF and verify the XML file.", null, ((string[])(null)));
#line 761
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 762
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 763
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 764
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 765
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 766
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 767
 testRunner.And("I upload study \"Test4500_QUER_Major study Update V4.zip\" with Label \"V4\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 768
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 769
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 770
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 771
 testRunner.And("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 772
 testRunner.And("I select \"Yes\" to reevaluate \"Change SD-Verify Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 773
 testRunner.And("I select \"Yes\" to reevaluate \"Change D-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 774
 testRunner.And("I select \"Yes\" to reevaluate \"Change M-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 775
 testRunner.And("I select \"Yes\" to reevaluate \"Change Signatures?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 776
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 777
 testRunner.And("I select patient migration option \"Migrate all patients\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 778
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 779
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table53.AddRow(new string[] {
                        "Migration of Site 01 for Study file (V4) - complete. 1 out of 1 patients migrated" +
                            " successfully. To review see migration report."});
            table53.AddRow(new string[] {
                        "Publishing of Study file (V4) - complete."});
#line 780
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table53, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T58_verify the XML file for generated query category status to off.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13,3.1.5.14,3.1.6.10,3.1.6" +
            ".1")]
        public virtual void T58_VerifyTheXMLFileForGeneratedQueryCategoryStatusToOff_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T58_verify the XML file for generated query category status to off.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13,3.1.5.14,3.1.6.10,3.1.6" +
                            ".1"});
#line 786
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 787
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual23.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 16 and XmlMessage like '%ItemData ItemOID=""AB_Date11"" TransactionType=""Update"" Value=""08/26/1990""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 788
 testRunner.And("I have the XML file \"QueryCreateExpected23.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 789
 testRunner.And("I have the XML file \"QueryCreateActual23.xml\" available in the Test XML Files fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table54.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table54.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table54.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table54.AddRow(new string[] {
                        "",
                        "FileOID"});
            table54.AddRow(new string[] {
                        "",
                        "SourceID"});
            table54.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table54.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 790
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table54, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_Activate the query and verify the raised query.")]
        public virtual void T59_ActivateTheQueryAndVerifyTheRaisedQuery_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_Activate the query and verify the raised query.", null, ((string[])(null)));
#line 800
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 801
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 802
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 803
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 804
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 805
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 806
 testRunner.And("I upload study \"Test4500_QUER_Major study Update V5.zip\" with Label \"V5\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 807
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 808
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 809
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 810
 testRunner.And("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 811
 testRunner.And("I select \"Yes\" to reevaluate \"Change SD-Verify Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 812
 testRunner.And("I select \"Yes\" to reevaluate \"Change D-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 813
 testRunner.And("I select \"Yes\" to reevaluate \"Change M-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 814
 testRunner.And("I select \"Yes\" to reevaluate \"Change Signatures?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 815
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 816
 testRunner.And("I select patient migration option \"Migrate all patients\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 817
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 818
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table55.AddRow(new string[] {
                        "Migration of Site 01 for Study file (V5) - complete. 1 out of 1 patients migrated" +
                            " successfully. To review see migration report."});
            table55.AddRow(new string[] {
                        "Publishing of Study file (V5) - complete."});
#line 819
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table55, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T60_verify the XML file for generated query on integer question in form1.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.1,3.1.5.2,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13,3.1.6.1" +
            "0,3.1.6.1")]
        public virtual void T60_VerifyTheXMLFileForGeneratedQueryOnIntegerQuestionInForm1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T60_verify the XML file for generated query on integer question in form1.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.1,3.1.5.2,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13,3.1.6.1" +
                            "0,3.1.6.1"});
#line 825
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 826
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual24.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 16 and XmlMessage like '%ItemData ItemOID=""AB_Date11"" TransactionType=""Update"" Value=""08/26/1990""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 827
 testRunner.And("I have the XML file \"QueryCreateExpected24.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 828
 testRunner.And("I have the XML file \"QueryCreateActual24.xml\" available in the Test XML Files fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table56.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table56.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table56.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table56.AddRow(new string[] {
                        "",
                        "FileOID"});
            table56.AddRow(new string[] {
                        "",
                        "SourceID"});
            table56.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table56.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 829
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table56, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T61_Create Manual DCF through actions at form level and check in DCF tab for crea" +
            "ted DCF")]
        public virtual void T61_CreateManualDCFThroughActionsAtFormLevelAndCheckInDCFTabForCreatedDCF()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T61_Create Manual DCF through actions at form level and check in DCF tab for crea" +
                    "ted DCF", null, ((string[])(null)));
#line 839
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 840
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 841
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 842
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 843
 testRunner.And("I expand \"Visit (Screening)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 844
 testRunner.When("I click ActionPalette Item \"Create DCF\" in \"CRFAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "DCFStatus",
                        "QueryDescription",
                        "ActionRequest"});
            table57.AddRow(new string[] {
                        "Draft",
                        "Please enter the value for all items.",
                        "Please Verify the given value."});
#line 845
 testRunner.And("I enter manual DCF details in CreateDCFDialog", ((string)(null)), table57, "And ");
#line 848
 testRunner.And("I click save button in CreateDCFDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 849
 testRunner.Then("I see success message \"Dcf Create Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T62_verify the XML file for added query category for manual query.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13,3.1.5.14,3.1.6.10,3.1.6" +
            ".1")]
        public virtual void T62_VerifyTheXMLFileForAddedQueryCategoryForManualQuery_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T62_verify the XML file for added query category for manual query.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3.1.5.12,3.1.5.13,3.1.5.14,3.1.6.10,3.1.6" +
                            ".1"});
#line 852
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 853
 testRunner.Given("I save the Event XML data in \"QueryCreateActual25.xml\" file by executing the quer" +
                    "y \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 17 and" +
                    " XmlMessage like \'%FormData FormOID=\"Form1\"%\' order by OdmSubscriberDetailKey de" +
                    "sc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 854
 testRunner.And("I have the XML file \"QueryCreateExpected25.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 855
 testRunner.And("I have the XML file \"QueryCreateActual25.xml\" available in the Test XML Files fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table58.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table58.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table58.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table58.AddRow(new string[] {
                        "",
                        "FileOID"});
            table58.AddRow(new string[] {
                        "",
                        "SourceID"});
            table58.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table58.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 856
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table58, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T63_Update study with minor updates as updated description, action request and ad" +
            "ded query category status.")]
        public virtual void T63_UpdateStudyWithMinorUpdatesAsUpdatedDescriptionActionRequestAndAddedQueryCategoryStatus_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T63_Update study with minor updates as updated description, action request and ad" +
                    "ded query category status.", null, ((string[])(null)));
#line 868
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 869
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 870
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 871
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 872
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 873
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 874
 testRunner.And("I upload study \"Test4500_QUER_Minor study Update V1.zip\" with Label \"V6\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 875
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 876
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 877
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 878
 testRunner.And("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 879
 testRunner.And("I select \"Yes\" to reevaluate \"Change SD-Verify Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 880
 testRunner.And("I select \"Yes\" to reevaluate \"Change D-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 881
 testRunner.And("I select \"Yes\" to reevaluate \"Change M-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 882
 testRunner.And("I select \"Yes\" to reevaluate \"Change Signatures?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 883
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 884
 testRunner.And("I select scripting \"Queries\" in PublishStudyPage of MinorStudyUpdate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 885
 testRunner.And("I click Publish button in PublishStudyPage of MinorStudyUpdate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 886
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table59.AddRow(new string[] {
                        "Queries: #1 - complete. View summary."});
            table59.AddRow(new string[] {
                        "Publishing of Study file (V6) - complete."});
#line 887
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table59, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T64_verify the XML file for generated query on integer question in form1.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.1,3.1.5.2,3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3" +
            ".1.5.12,3.1.5.13.,3.1.6.10,3.1.6.1")]
        public virtual void T64_VerifyTheXMLFileForGeneratedQueryOnIntegerQuestionInForm1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T64_verify the XML file for generated query on integer question in form1.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.1,3.1.5.2,3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3" +
                            ".1.5.12,3.1.5.13.,3.1.6.10,3.1.6.1"});
#line 893
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 894
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual26.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 16 and XmlMessage like '%ItemData ItemOID=""Date"" Value=""08/26/2005""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 895
 testRunner.And("I have the XML file \"QueryCreateExpected26.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 896
 testRunner.And("I have the XML file \"QueryCreateActual26.xml\" available in the Test XML Files fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table60.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table60.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table60.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table60.AddRow(new string[] {
                        "",
                        "FileOID"});
            table60.AddRow(new string[] {
                        "",
                        "SourceID"});
            table60.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table60.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 897
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table60, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T65_verify the XML file for generated query on integer question in form1.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.1,3.1.5.2,3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3" +
            ".1.5.12,3.1.5.13.,3.1.6.10,3.1.6.1")]
        public virtual void T65_VerifyTheXMLFileForGeneratedQueryOnIntegerQuestionInForm1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T65_verify the XML file for generated query on integer question in form1.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.1,3.1.5.2,3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3" +
                            ".1.5.12,3.1.5.13.,3.1.6.10,3.1.6.1"});
#line 908
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 909
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual27.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 17 and XmlMessage like '%ItemData ItemOID=""Float"" Value=""1234""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 910
 testRunner.And("I have the XML file \"QueryCreateExpected27.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 911
 testRunner.And("I have the XML file \"QueryCreateActual27.xml\" available in the Test XML Files fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table61.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table61.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table61.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table61.AddRow(new string[] {
                        "",
                        "FileOID"});
            table61.AddRow(new string[] {
                        "",
                        "SourceID"});
            table61.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table61.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 912
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table61, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T66_Update study with minor updates as deactivated the query and updated query ca" +
            "tegory status.")]
        public virtual void T66_UpdateStudyWithMinorUpdatesAsDeactivatedTheQueryAndUpdatedQueryCategoryStatus_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T66_Update study with minor updates as deactivated the query and updated query ca" +
                    "tegory status.", null, ((string[])(null)));
#line 922
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 923
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 924
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 925
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 926
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 927
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 928
 testRunner.And("I upload study \"Test4500_QUER_Minor study Update V2.zip\" with Label \"V7\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 929
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 930
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 931
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 932
 testRunner.And("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 933
 testRunner.And("I select \"Yes\" to reevaluate \"Change SD-Verify Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 934
 testRunner.And("I select \"Yes\" to reevaluate \"Change D-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 935
 testRunner.And("I select \"Yes\" to reevaluate \"Change M-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 936
 testRunner.And("I select \"Yes\" to reevaluate \"Change Signatures?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 937
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 938
 testRunner.And("I select scripting \"Queries\" in PublishStudyPage of MinorStudyUpdate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 939
 testRunner.And("I click Publish button in PublishStudyPage of MinorStudyUpdate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 940
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table62.AddRow(new string[] {
                        "Queries: #2 - complete. View summary."});
            table62.AddRow(new string[] {
                        "Publishing of Study file (V7) - complete."});
#line 941
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table62, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T67_verify the XML file for generated query on integer question in form1.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.1,3.1.5.2,3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3" +
            ".1.5.12,3.1.5.13.,3.1.6.10,3.1.6.1")]
        public virtual void T67_VerifyTheXMLFileForGeneratedQueryOnIntegerQuestionInForm1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T67_verify the XML file for generated query on integer question in form1.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.1,3.1.5.2,3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3" +
                            ".1.5.12,3.1.5.13.,3.1.6.10,3.1.6.1"});
#line 947
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 948
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual28.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 16 and XmlMessage like '%ItemData ItemOID=""Integer"" Value=""1080""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 949
 testRunner.And("I have the XML file \"QueryCreateExpected28.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 950
 testRunner.And("I have the XML file \"QueryCreateActual28.xml\" available in the Test XML Files fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table63.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table63.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table63.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table63.AddRow(new string[] {
                        "",
                        "FileOID"});
            table63.AddRow(new string[] {
                        "",
                        "SourceID"});
            table63.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table63.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 951
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table63, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T68_verify the XML file for generated query on integer question in form1.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.5.1,3.1.5.2,3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3" +
            ".1.5.12,3.1.5.13.,3.1.6.10,3.1.6.1")]
        public virtual void T68_VerifyTheXMLFileForGeneratedQueryOnIntegerQuestionInForm1_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T68_verify the XML file for generated query on integer question in form1.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.5.1,3.1.5.2,3.1.5.4,3.1.5.5,3.1.5.6,3.1.5.8,3.1.5.9,3.1.5.10,3.1.5.11,3" +
                            ".1.5.12,3.1.5.13.,3.1.6.10,3.1.6.1"});
#line 962
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 963
 testRunner.Given(@"I save the Event XML data in ""QueryCreateActual29.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 17 and XmlMessage like '%ItemData ItemOID=""AB_Date12"" Value=""08/26/1990""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 964
 testRunner.And("I have the XML file \"QueryCreateExpected29.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 965
 testRunner.And("I have the XML file \"QueryCreateActual29.xml\" available in the Test XML Files fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table64.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table64.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table64.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table64.AddRow(new string[] {
                        "",
                        "FileOID"});
            table64.AddRow(new string[] {
                        "",
                        "SourceID"});
            table64.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table64.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 966
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table64, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T69_Logout from Datalabs application.")]
        public virtual void T69_LogoutFromDatalabsApplication_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T69_Logout from Datalabs application.", null, ((string[])(null)));
#line 976
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 977
 testRunner.When("I clik logout of Datalabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 978
 testRunner.Then("I see login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

