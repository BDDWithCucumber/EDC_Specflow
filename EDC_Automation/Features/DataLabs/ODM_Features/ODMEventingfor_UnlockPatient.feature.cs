// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.ODM_Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DataLabs_V5.7.0_ODM:Sendrefreshedlabdataonpatientunlock")]
    public partial class DataLabs_V5_7_0_ODMSendrefreshedlabdataonpatientunlockFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ODMEventingfor_UnlockPatient.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DataLabs_V5.7.0_ODM:Sendrefreshedlabdataonpatientunlock", @"Test Summary:
1) Verification of ODM eventing xml for Enrolled patient status.
2) Verification of ODM eventing xml for Discontinued patient status.
3) Verification of ODM eventing xml for Completed patient status.
4) Verification of ODM eventing xml for Failed patient status.
5) Verification of ODM eventing xml for patient status override (Discontinued to Enrolled).
6) Verification of ODM eventing xml for patient status override (Completed to Enrolled).
7) Verification of ODM eventing xml for patient status override (Enrolled to Screened).
8) Verification of ODM eventing xml for patient status override (Failed to Screened).
9) Verification of unpublished events and forms as part of patient status override eventing xml.
10) Verification of derived enrolled id in Enrolled status xml.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T01_Login to Datalabs")]
        public virtual void T01_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T01_Login to Datalabs", null, ((string[])(null)));
#line 14
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 16
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T02_Delete the current study")]
        public virtual void T02_DeleteTheCurrentStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T02_Delete the current study", null, ((string[])(null)));
#line 18
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 19
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T03_Publish the study")]
        public virtual void T03_PublishTheStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T03_Publish the study", null, ((string[])(null)));
#line 22
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 23
 testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.And("I upload a study \"Test4500_ODM_Eventing_Base.Zip\" with study label \"Test4500\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.Then("I see study label \"Test4500\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T04_Add Site 01-Site")]
        public virtual void T04_AddSite01_Site()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T04_Add Site 01-Site", null, ((string[])(null)));
#line 27
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 28
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteId",
                        "SiteName",
                        "Address1",
                        "Address2",
                        "Address3",
                        "Address4",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "SiteStatus",
                        "DCFWorkflow",
                        "ExternalSource",
                        "ExternalId"});
            table1.AddRow(new string[] {
                        "01",
                        "Site",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        "-"});
#line 30
 testRunner.And("I enter sites details and Save", ((string)(null)), table1, "And ");
#line 33
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.And("I click breadcrumb \"Site Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T05_Navigate to the Edit Preferences page and set the Endpoint URL")]
        public virtual void T05_NavigateToTheEditPreferencesPageAndSetTheEndpointURL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T05_Navigate to the Edit Preferences page and set the Endpoint URL", null, ((string[])(null)));
#line 38
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 39
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
 testRunner.When("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
 testRunner.And("I click ActionPalette Item \"Edit Preferences\" in \"StudyResetAction\" ActionPalette" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.And("I open tab \"Patient Data Eventing\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.And("I update the endpoint URL under Patient Data Eventing tab.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.And("I click \"Save\" button on the Edit Preferences page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.Then("I verify the success message displayed as \"Edit Preferences Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T06_Add patient 01-PAT from Datalabs UI")]
        public virtual void T06_AddPatient01_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T06_Add patient 01-PAT from Datalabs UI", null, ((string[])(null)));
#line 47
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 48
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table2.AddRow(new string[] {
                        "01",
                        "PAT",
                        "06/13/2018"});
#line 50
 testRunner.When("I add patient with below details.", ((string)(null)), table2, "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table3.AddRow(new string[] {
                        "01-PAT"});
#line 53
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T07_Select and enroll patient 01-PAT.")]
        public virtual void T07_SelectAndEnrollPatient01_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T07_Select and enroll patient 01-PAT.", null, ((string[])(null)));
#line 57
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 58
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 59
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table4.AddRow(new string[] {
                        "01",
                        "06/13/2018",
                        "Yes"});
#line 61
 testRunner.When("I enroll the patient \"01-PAT\" with below data.", ((string)(null)), table4, "When ");
#line 64
 testRunner.Then("I see patient \"01-PAT\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T08_Add a new lab test reference range record")]
        public virtual void T08_AddANewLabTestReferenceRangeRecord()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T08_Add a new lab test reference range record", null, ((string[])(null)));
#line 66
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 67
  testRunner.Given("I navigate to \"Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 68
     testRunner.When("I open lab with labid \"L01\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 69
  testRunner.And("I open labtest with labname \"01\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate",
                        "Gender",
                        "FromAgeSelect",
                        "FromAgeSet",
                        "ToAgeSelect",
                        "ToAgeSet",
                        "NormalRangeLowSelect",
                        "NormalRangeLowSet",
                        "NormalRangeHighSelect",
                        "NormalRangeHighSet",
                        "ClinicalRangeLowSelect",
                        "ClinicalRangeLowSet",
                        "ClinicalRangeHighSelect",
                        "ClinicalRangeHighSet",
                        "Unit",
                        "NA"});
            table5.AddRow(new string[] {
                        "02/25/2019",
                        "",
                        "Male",
                        ">",
                        "20",
                        "<",
                        "35",
                        ">",
                        "3",
                        "<",
                        "15",
                        ">",
                        "20.41",
                        "<",
                        "25.71",
                        "01",
                        "False"});
            table5.AddRow(new string[] {
                        "02/25/2019",
                        "",
                        "Female",
                        ">",
                        "20",
                        "<",
                        "35",
                        ">",
                        "3",
                        "<",
                        "15",
                        ">",
                        "20.41",
                        "<",
                        "25.71",
                        "01",
                        "False"});
            table5.AddRow(new string[] {
                        "02/25/2019",
                        "",
                        "Not Specified",
                        ">",
                        "20",
                        "<",
                        "35",
                        ">",
                        "3",
                        "<",
                        "15",
                        ">",
                        "20.41",
                        "<",
                        "25.71",
                        "01",
                        "False"});
#line 70
  testRunner.And("I click add and enter reference ranges of a lab test and Save and can see \"LabTes" +
                    "t Reference Range Added Successfully\" message upon each record save in Reference" +
                    "RangesPage including NA", ((string)(null)), table5, "And ");
#line 75
  testRunner.Then("a Reference ID is auto generated for a newly added lab test in ReferenceRangesPag" +
                    "e", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T09_Expand the Visit (Screening) and open the demographics form to update the dat" +
            "a")]
        public virtual void T09_ExpandTheVisitScreeningAndOpenTheDemographicsFormToUpdateTheData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T09_Expand the Visit (Screening) and open the demographics form to update the dat" +
                    "a", null, ((string[])(null)));
#line 78
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 79
   testRunner.When("I expand \"Visit (Screening)\" to select and open \"Demographics RTSM\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
      testRunner.And("I click \"Checkout\" button on \"Demographics RTSM\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table6.AddRow(new string[] {
                        "Gender:",
                        "Male",
                        "ListBox"});
            table6.AddRow(new string[] {
                        "Age at Study Start:",
                        "31",
                        "TextBox"});
            table6.AddRow(new string[] {
                        "Age Units at Study Start:",
                        "Years",
                        "ListBox"});
#line 81
      testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table6, "And ");
#line 86
   testRunner.And("I click on \"Save & Close\" button on \"Demographics RTSM\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
   testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T10_Expand the Visit (Week2) event and open the LabForm1 form and update the data" +
            "")]
        public virtual void T10_ExpandTheVisitWeek2EventAndOpenTheLabForm1FormAndUpdateTheData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T10_Expand the Visit (Week2) event and open the LabForm1 form and update the data" +
                    "", null, ((string[])(null)));
#line 90
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 91
   testRunner.When("I expand \"Visit (Week 2)\" to select and open \"LabForm1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 92
      testRunner.And("I click \"Checkout\" button on \"LabForm1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table7.AddRow(new string[] {
                        "Lab ID",
                        "Lab01 (L01)",
                        "ListBox"});
            table7.AddRow(new string[] {
                        "CRF Collection Date",
                        "02/28/2019",
                        "TextBox"});
#line 93
      testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table7, "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table8.AddRow(new string[] {
                        "No",
                        "2",
                        "CRF Lab value",
                        "16",
                        "TextBox",
                        ""});
            table8.AddRow(new string[] {
                        "No",
                        "2",
                        "CRF Lab Unit",
                        "01",
                        "ListBox",
                        "Save & Close Row"});
#line 97
   testRunner.And("I enter below \"Autobuild Table:\" autobuild table questions data in the CRF.", ((string)(null)), table8, "And ");
#line 101
   testRunner.And("I click on \"Save & Close\" button on \"LabForm1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
   testRunner.And("I click \"Save\" button on \"LabForm1\" CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
   testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T11_Verify the Lab report data")]
        public virtual void T11_VerifyTheLabReportData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T11_Verify the Lab report data", null, ((string[])(null)));
#line 104
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 105
   testRunner.When("I expand row \"2\" of table \"Autobuild Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table9.AddRow(new string[] {
                        "2",
                        "CRF Lab Test Name",
                        "Test1",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Lab Test Description",
                        "01",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "CRF Lab Unit",
                        "01",
                        "Link",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "CRF Lab value",
                        "16",
                        "Link",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Lab Test Name",
                        "01",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Lab Test Code",
                        "01",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "LOINC Code",
                        "1",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Category",
                        "Cat1",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Subcategory",
                        "SubCat1",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Specimen",
                        "Specimen1",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Method",
                        "Method1",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Result Type",
                        "Result1",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Normal Reference Range High",
                        "< 15.00",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Critical Reference Range Low",
                        "> 20.41",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Normal Reference Range Low",
                        "> 3.00",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Critical Reference Range High",
                        "< 25.71",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Reference Range ID",
                        "{ReferenceRangeID1}",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Out of Normal Range Indicator",
                        "Above normal range high",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Normalized Patient Lab Value",
                        "16",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Normalized Lab Unit",
                        "cm",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Normalized Normal Reference Range Low",
                        "> 3.00",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Normalized Normal Reference Range High",
                        "< 15.00",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Normalized Critical Reference Range Low",
                        "> 20.41",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Reference Range Not Applicable",
                        "No",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Normalized Critical Reference Range High",
                        "< 25.71",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Precision",
                        "2",
                        "Text",
                        ""});
            table9.AddRow(new string[] {
                        "2",
                        "Conversion Factor",
                        "1",
                        "Text",
                        "Save & Close Row"});
#line 108
   testRunner.Then("I verify below ReferenceRange CRF \"Autobuild Table:\" table questions data in the " +
                    "CRF.", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T12_Verify the XML Data evented out for the Enrolled Patient from Datalabs UI")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.3")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T12_VerifyTheXMLDataEventedOutForTheEnrolledPatientFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T12_Verify the XML Data evented out for the Enrolled Patient from Datalabs UI", null, new string[] {
                        "ReqID:3.1.2.3",
                        "ObjectiveEvidence"});
#line 139
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 140
 testRunner.Given(@"I save the Event XML data in ""EnrollPatientFromUIActual.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 3 and XmlMessage like '%ItemData ItemOID=""ENRLID"" TransactionType=""Insert"" Value=""01""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 141
 testRunner.And("I have the XML file \"EnrollPatientFromUIExpected.xml\" available in the project fo" +
                    "lder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
 testRunner.And("I have the XML file \"EnrollPatientFromUIActual.xml\" available in the Test XML Fil" +
                    "es folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table10.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table10.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table10.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table10.AddRow(new string[] {
                        "",
                        "FileOID"});
            table10.AddRow(new string[] {
                        "",
                        "SourceID"});
            table10.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 143
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T13_Discontinue the patient 01-PAT")]
        public virtual void T13_DiscontinueThePatient01_PAT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T13_Discontinue the patient 01-PAT", null, ((string[])(null)));
#line 153
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 154
 testRunner.When("I click ActionPalette Item \"Discontinue Patient\" in \"PatientPortalActions\" Action" +
                    "Palette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table11.AddRow(new string[] {
                        "Discontinued Date:",
                        "06/24/2018",
                        "TextBox"});
#line 155
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table11, "And ");
#line 158
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
 testRunner.And("I click on \"Save & Close\" button on \"\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 160
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T14_Verify the XML Data evented out for the Discontinued Patient from Datalabs UI" +
            "")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.3")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T14_VerifyTheXMLDataEventedOutForTheDiscontinuedPatientFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T14_Verify the XML Data evented out for the Discontinued Patient from Datalabs UI" +
                    "", null, new string[] {
                        "ReqID:3.1.2.3",
                        "ObjectiveEvidence"});
#line 163
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 164
 testRunner.Given(@"I save the Event XML data in ""DiscontinuePatientFromUIActual.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 3 and XmlMessage like '%ItemData ItemOID=""DISCDATE"" TransactionType=""Insert"" Value=""06/24/2018""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 165
 testRunner.And("I have the XML file \"DiscontinuePatientFromUIExpected.xml\" available in the proje" +
                    "ct folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 166
 testRunner.And("I have the XML file \"DiscontinuePatientFromUIActual.xml\" available in the Test XM" +
                    "L Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table12.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table12.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table12.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table12.AddRow(new string[] {
                        "",
                        "FileOID"});
            table12.AddRow(new string[] {
                        "",
                        "SourceID"});
            table12.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 167
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T15_Add patient 02-PAT from Datalabs UI")]
        public virtual void T15_AddPatient02_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T15_Add patient 02-PAT from Datalabs UI", null, ((string[])(null)));
#line 176
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 177
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 178
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table13.AddRow(new string[] {
                        "02",
                        "PAT",
                        "06/13/2018"});
#line 179
 testRunner.When("I add patient with below details.", ((string)(null)), table13, "When ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table14.AddRow(new string[] {
                        "02-PAT"});
#line 182
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table14, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T16_Select and enroll patient 02-PAT.")]
        public virtual void T16_SelectAndEnrollPatient02_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T16_Select and enroll patient 02-PAT.", null, ((string[])(null)));
#line 186
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 187
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 188
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
 testRunner.And("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table15.AddRow(new string[] {
                        "02",
                        "06/13/2018",
                        "Yes"});
#line 190
 testRunner.When("I enroll the patient \"02-PAT\" with below data.", ((string)(null)), table15, "When ");
#line 193
 testRunner.Then("I see patient \"02-PAT\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T17_Complete the patient 02-PAT")]
        public virtual void T17_CompleteThePatient02_PAT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T17_Complete the patient 02-PAT", null, ((string[])(null)));
#line 196
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 197
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 198
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
 testRunner.And("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
 testRunner.When("I click ActionPalette Item \"Complete Patient\" in \"PatientPortalActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table16.AddRow(new string[] {
                        "Completed Date:",
                        "06/25/2018",
                        "TextBox"});
#line 201
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table16, "And ");
#line 204
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 205
 testRunner.And("I click on \"Save & Close\" button on \"\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 206
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T18_Verify the XML Data evented out for the Completed Patient from Datalabs UI")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.3")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T18_VerifyTheXMLDataEventedOutForTheCompletedPatientFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T18_Verify the XML Data evented out for the Completed Patient from Datalabs UI", null, new string[] {
                        "ReqID:3.1.2.3",
                        "ObjectiveEvidence"});
#line 209
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 210
 testRunner.Given(@"I save the Event XML data in ""CompletePatientFromUIActual.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 3 and XmlMessage like '%ItemData ItemOID=""COMPDATE"" TransactionType=""Insert"" Value=""06/25/2018""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 211
 testRunner.And("I have the XML file \"CompletePatientFromUIExpected.xml\" available in the project " +
                    "folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 212
 testRunner.And("I have the XML file \"CompletePatientFromUIActual.xml\" available in the Test XML F" +
                    "iles folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table17.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table17.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table17.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table17.AddRow(new string[] {
                        "",
                        "FileOID"});
            table17.AddRow(new string[] {
                        "",
                        "SourceID"});
            table17.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 213
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table17, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T19_Add patient 03-PAT from Datalabs UI")]
        public virtual void T19_AddPatient03_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T19_Add patient 03-PAT from Datalabs UI", null, ((string[])(null)));
#line 222
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 223
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 224
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table18.AddRow(new string[] {
                        "03",
                        "PAT",
                        "06/13/2018"});
#line 225
 testRunner.When("I add patient with below details.", ((string)(null)), table18, "When ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table19.AddRow(new string[] {
                        "03-PAT"});
#line 228
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table19, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T20_Fail the patient 03-PAT")]
        public virtual void T20_FailThePatient03_PAT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T20_Fail the patient 03-PAT", null, ((string[])(null)));
#line 233
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 234
 testRunner.Given("I select the patient \"03-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 235
 testRunner.When("I click ActionPalette Item \"Fail Patient\" in \"PatientPortalActions\" ActionPalette" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table20.AddRow(new string[] {
                        "Failed Date:",
                        "06/26/2018",
                        "TextBox"});
#line 236
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table20, "And ");
#line 239
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 240
 testRunner.And("I click on \"Save & Close\" button on \"\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 241
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T21_Verify the XML Data evented out for the Failed Patient from Datalabs UI")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.3")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T21_VerifyTheXMLDataEventedOutForTheFailedPatientFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T21_Verify the XML Data evented out for the Failed Patient from Datalabs UI", null, new string[] {
                        "ReqID:3.1.2.3",
                        "ObjectiveEvidence"});
#line 244
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 245
 testRunner.Given(@"I save the Event XML data in ""FailPatientFromUIActual.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 3 and XmlMessage like '%ItemData ItemOID=""SCRNFAILDATE"" TransactionType=""Insert"" Value=""06/26/2018""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 246
 testRunner.And("I have the XML file \"FailPatientFromUIExpected.xml\" available in the project fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 247
 testRunner.And("I have the XML file \"FailPatientFromUIActual.xml\" available in the Test XML Files" +
                    " folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table21.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table21.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table21.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table21.AddRow(new string[] {
                        "",
                        "FileOID"});
            table21.AddRow(new string[] {
                        "",
                        "SourceID"});
            table21.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 248
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table21, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T22_Select 01-Site and a patient 01-PAT.")]
        public virtual void T22_Select01_SiteAndAPatient01_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T22_Select 01-Site and a patient 01-PAT.", null, ((string[])(null)));
#line 257
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 258
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 259
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 260
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 261
 testRunner.Then("I see Patient details page for \"01-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T23_Fill and save Discontinue Reason CRF from Discontinue event")]
        public virtual void T23_FillAndSaveDiscontinueReasonCRFFromDiscontinueEvent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T23_Fill and save Discontinue Reason CRF from Discontinue event", null, ((string[])(null)));
#line 263
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 264
 testRunner.Given("I expand \"Discontinue\" to select and open \"Discontinue Reason\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 265
 testRunner.When("I click \"Checkout\" button on \"Discontinue Reason\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table22.AddRow(new string[] {
                        "Discontinue Reason:",
                        "Safety",
                        "TextBox"});
#line 266
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table22, "And ");
#line 269
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 270
 testRunner.And("I click on \"Save & Close\" button on \"Discontinue Reason\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 271
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T24_Override the patient status from Discontinue to Enrolled for patient 01-PAT")]
        public virtual void T24_OverrideThePatientStatusFromDiscontinueToEnrolledForPatient01_PAT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T24_Override the patient status from Discontinue to Enrolled for patient 01-PAT", null, ((string[])(null)));
#line 274
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 275
testRunner.Given("I click ActionPalette Item \"Patient Status Override\" in \"PatientPortalActions\" Ac" +
                    "tionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 276
 testRunner.And("I select change to \"Enrolled\" in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 277
 testRunner.And("I enter reason \"Status override from Discontinued to Enrolled\" for patient status" +
                    " change in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 278
 testRunner.And("I Click save button in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 279
 testRunner.Then("I see success message \"Status Override Changed Successfully.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T25_Verify the XML Data evented out for the Enrolled status due to status overrid" +
            "e.")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.3,3.1.2.4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T25_VerifyTheXMLDataEventedOutForTheEnrolledStatusDueToStatusOverride_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T25_Verify the XML Data evented out for the Enrolled status due to status overrid" +
                    "e.", null, new string[] {
                        "ReqID:3.1.2.3,3.1.2.4",
                        "ObjectiveEvidence"});
#line 282
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 283
 testRunner.Given(@"I save the Event XML data in ""DiscontinuePatientOverrideActual.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 3 and XmlMessage like '%Status override from Discontinued to Enrolled%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 284
 testRunner.And("I have the XML file \"DiscontinuePatientOverrideExpected.xml\" available in the pro" +
                    "ject folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 285
 testRunner.And("I have the XML file \"DiscontinuePatientOverrideActual.xml\" available in the Test " +
                    "XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table23.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table23.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table23.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table23.AddRow(new string[] {
                        "",
                        "FileOID"});
            table23.AddRow(new string[] {
                        "",
                        "SourceID"});
            table23.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 286
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table23, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T26_Select 01-Site and a patient 02-PAT.")]
        public virtual void T26_Select01_SiteAndAPatient02_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T26_Select 01-Site and a patient 02-PAT.", null, ((string[])(null)));
#line 295
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 296
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 297
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 298
 testRunner.When("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 299
 testRunner.Then("I see Patient details page for \"02-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T27_Fill and save FollowUp CRF from Complete event")]
        public virtual void T27_FillAndSaveFollowUpCRFFromCompleteEvent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T27_Fill and save FollowUp CRF from Complete event", null, ((string[])(null)));
#line 301
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 302
 testRunner.Given("I expand \"Complete\" to select and open \"FollowUp\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 303
 testRunner.When("I click \"Checkout\" button on \"FollowUp\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table24.AddRow(new string[] {
                        "Follow up comments:",
                        "Completed",
                        "TextBox"});
#line 304
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table24, "And ");
#line 307
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 308
 testRunner.And("I click on \"Save & Close\" button on \"FollowUp\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 309
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T45_Logout from Datalabs")]
        public virtual void T45_LogoutFromDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T45_Logout from Datalabs", null, ((string[])(null)));
#line 536
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 537
 testRunner.When("I clik logout of Datalabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 538
 testRunner.Then("I see login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

