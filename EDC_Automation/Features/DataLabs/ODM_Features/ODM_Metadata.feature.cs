// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.ODM_Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DataLabs_V5.7.0_ODM Eventing for Metadata")]
    public partial class DataLabs_V5_7_0_ODMEventingForMetadataFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ODM_Metadata.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DataLabs_V5.7.0_ODM Eventing for Metadata", "Test Summary:\r\n\tVerification of Metadata xml for multiple study protocols.\r\n\tStud" +
                    "y-2\r\n\t1) Verify by adding crf and assign to existing event\r\n\t2) Verify by adding" +
                    " New Domain\r\n\t3) Verify by adding and event and assign an exisiting crf\r\n\t4) Ver" +
                    "ify by updating Event Category\r\n\t5) Verify by updating Question prompt\r\n\t6) Veri" +
                    "fy by moving Flat question to Table Question\r\n\t7) Verify by adding Codelist item" +
                    "s and assign codelist to Domain item\r\n\tStudy-3:\r\n\t1) Form name update\r\n\t2) Event" +
                    " name update\r\n\t3) Event Order update\r\n\t4) Question order change\r\n\t5) Moving Tabl" +
                    "e question to Flat Question \r\n\t6) Domain Name change \r\n\t7) Domain item Name chan" +
                    "ge\r\n\t8) Data Type of Domain Item Changed \r\n\t9) Code Value Change \r\n\t10) Code Des" +
                    "cription change\r\n\tStudy-4:\r\n\t1) Delete Codelist item  \r\n\t2) Codelist name change" +
                    "  \r\n\t3) New pScript created with pScript name and Description \r\n\t4) valid pScrip" +
                    "t status changes to Inactive\r\n\t5) Updated pScript name and added description \r\n\t" +
                    "6) Update script text \r\n\t7) Update description for Function\r\n\tStudy-5:\r\n\t1) Form" +
                    " Delete \r\n\t2) Event Delete\r\n\t3) Domain delete \r\n\t4) Update Code description for " +
                    "system codelist \r\n\t5) Inactive the edit check \r\n\t6) Activate the edit checks \r\n\t" +
                    "7) Update editcheck description \r\n\t8) Update editcheck Action request \r\n\t9) Upda" +
                    "te Query Description \r\n\t10) Update Derivation Description \r\n\tStudy-6:\r\n\t1) Chang" +
                    "e Query description\r\n\t2) Change Query Action Request\r\n\t3) Warn user disable \r\n\tS" +
                    "tudy-7:\r\n\t1) Parameter Reference change for Query \r\n\t2) Script update by making " +
                    "invalid derivation \r\n\t3) Parameter Reference change for Derivation \r\n\t4) Delete " +
                    "Question \r\n\t5) Change the comparator in condtional question \r\n\t6) Change the con" +
                    "dition value for conditional question \r\n\t7) Change the parent question item in c" +
                    "onditional question ", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01_Login to Datalabs")]
        public virtual void _01_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_Login to Datalabs", null, ((string[])(null)));
#line 56
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 57
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 58
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02_Delete a study")]
        public virtual void _02_DeleteAStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02_Delete a study", null, ((string[])(null)));
#line 60
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 61
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 62
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("03_Publish a study")]
        public virtual void _03_PublishAStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03_Publish a study", null, ((string[])(null)));
#line 64
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 65
 testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
 testRunner.And("I upload a study \"Test3210_Metadata_01.zip\" with study label \"Test3210_Metadata_0" +
                    "1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 67
 testRunner.Then("I see study label \"Test3210_Query Smoke Test\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("04_Get Metadata from PatientAndOperationalDataEventing webservice")]
        public virtual void _04_GetMetadataFromPatientAndOperationalDataEventingWebservice()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04_Get Metadata from PatientAndOperationalDataEventing webservice", null, ((string[])(null)));
#line 69
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "StudyNameData",
                        "ProtocolVersionData",
                        "ResponseFile"});
            table1.AddRow(new string[] {
                        "Test3210_Base",
                        "1.0",
                        "TestMetaData1Actual.xml"});
#line 70
 testRunner.When("I save the Study meta data exported from GetStudyMetaDataODM132 method under Pati" +
                    "entAndOperationalDataEventing webservice", ((string)(null)), table1, "When ");
#line 73
 testRunner.Then("The response should contain success status code as \"200\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("05_Verify the metadata XML Data generated")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.6.7,3.1.6.8,3.1.6.9,3.1.6.10")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void _05_VerifyTheMetadataXMLDataGenerated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05_Verify the metadata XML Data generated", null, new string[] {
                        "ReqID:3.1.6.7,3.1.6.8,3.1.6.9,3.1.6.10",
                        "ObjectiveEvidence"});
#line 76
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 77
 testRunner.Given("I have the XML file \"TestMetaData1Expected.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 78
 testRunner.And("I have the XML file \"TestMetaData1Actual.xml\" available in the Result XML Files f" +
                    "older.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table2.AddRow(new string[] {
                        "",
                        "FileOID"});
            table2.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table2.AddRow(new string[] {
                        "",
                        "DerivedRunOrder"});
            table2.AddRow(new string[] {
                        "",
                        "OrderNumber"});
            table2.AddRow(new string[] {
                        "",
                        "QueryKey"});
            table2.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 79
 testRunner.Then("I verify that the data in both metadata XML files is same except for below fields" +
                    ".", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("06_Study update with patients migration")]
        public virtual void _06_StudyUpdateWithPatientsMigration()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06_Study update with patients migration", null, ((string[])(null)));
#line 88
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 89
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 90
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 94
 testRunner.And("I upload study \"Test3210_Metadata_02.zip\" with Label \"Test3210_Metadata_02\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
 testRunner.And("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
 testRunner.And("I select \"Yes\" to reevaluate \"Change SD-Verify Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 100
 testRunner.And("I select \"Yes\" to reevaluate \"Change D-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
 testRunner.And("I select \"Yes\" to reevaluate \"Change M-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
 testRunner.And("I select \"Yes\" to reevaluate \"Change Signatures?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 104
 testRunner.And("I select patient migration option \"Migrate all patients\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table3.AddRow(new string[] {
                        "Study file (Test3210_Metadata_02) - complete."});
#line 107
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("07_Get Metadata from PatientAndOperationalDataEventing webservice")]
        public virtual void _07_GetMetadataFromPatientAndOperationalDataEventingWebservice()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("07_Get Metadata from PatientAndOperationalDataEventing webservice", null, ((string[])(null)));
#line 111
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "StudyNameData",
                        "ProtocolVersionData",
                        "ResponseFile"});
            table4.AddRow(new string[] {
                        "Test3210_Base",
                        "2.0",
                        "TestMetaData2Actual.xml"});
#line 112
 testRunner.When("I save the Study meta data exported from GetStudyMetaDataODM132 method under Pati" +
                    "entAndOperationalDataEventing webservice", ((string)(null)), table4, "When ");
#line 115
 testRunner.Then("The response should contain success status code as \"200\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("08_Verify the metadata XML Data generated")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.6.7,3.1.6.8,3.1.6.9,3.1.6.10")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void _08_VerifyTheMetadataXMLDataGenerated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("08_Verify the metadata XML Data generated", null, new string[] {
                        "ReqID:3.1.6.7,3.1.6.8,3.1.6.9,3.1.6.10",
                        "ObjectiveEvidence"});
#line 118
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 119
 testRunner.Given("I have the XML file \"TestMetaData2Expected.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 120
 testRunner.And("I have the XML file \"TestMetaData2Actual.xml\" available in the Result XML Files f" +
                    "older.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table5.AddRow(new string[] {
                        "",
                        "FileOID"});
            table5.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table5.AddRow(new string[] {
                        "",
                        "DerivedRunOrder"});
            table5.AddRow(new string[] {
                        "",
                        "OrderNumber"});
            table5.AddRow(new string[] {
                        "",
                        "QueryKey"});
            table5.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 121
 testRunner.Then("I verify that the data in both metadata XML files is same except for below fields" +
                    ".", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("09_Study update with patients migration")]
        public virtual void _09_StudyUpdateWithPatientsMigration()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("09_Study update with patients migration", null, ((string[])(null)));
#line 130
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 131
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 132
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 133
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
 testRunner.And("I upload study \"Test3210_Metadata_03.zip\" with Label \"Test3210_Metadata_03\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 138
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 139
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 140
 testRunner.And("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 141
 testRunner.And("I select \"Yes\" to reevaluate \"Change SD-Verify Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
 testRunner.And("I select \"Yes\" to reevaluate \"Change D-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
 testRunner.And("I select \"Yes\" to reevaluate \"Change M-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
 testRunner.And("I select \"Yes\" to reevaluate \"Change Signatures?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 145
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 146
 testRunner.And("I select patient migration option \"Migrate all patients\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table6.AddRow(new string[] {
                        "Study file (Test3210_Metadata_03) - complete."});
#line 149
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("10_Get Metadata from PatientAndOperationalDataEventing webservice")]
        public virtual void _10_GetMetadataFromPatientAndOperationalDataEventingWebservice()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("10_Get Metadata from PatientAndOperationalDataEventing webservice", null, ((string[])(null)));
#line 153
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "StudyNameData",
                        "ProtocolVersionData",
                        "ResponseFile"});
            table7.AddRow(new string[] {
                        "Test3210_Base",
                        "3.0",
                        "TestMetaData3Actual.xml"});
#line 154
 testRunner.When("I save the Study meta data exported from GetStudyMetaDataODM132 method under Pati" +
                    "entAndOperationalDataEventing webservice", ((string)(null)), table7, "When ");
#line 157
 testRunner.Then("The response should contain success status code as \"200\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("11_Verify the metadata XML Data generated")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.6.7,3.1.6.8,3.1.6.9,3.1.6.10")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void _11_VerifyTheMetadataXMLDataGenerated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("11_Verify the metadata XML Data generated", null, new string[] {
                        "ReqID:3.1.6.7,3.1.6.8,3.1.6.9,3.1.6.10",
                        "ObjectiveEvidence"});
#line 160
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 161
 testRunner.Given("I have the XML file \"TestMetaData3Expected.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 162
 testRunner.And("I have the XML file \"TestMetaData3Actual.xml\" available in the Result XML Files f" +
                    "older.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table8.AddRow(new string[] {
                        "",
                        "FileOID"});
            table8.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table8.AddRow(new string[] {
                        "",
                        "DerivedRunOrder"});
            table8.AddRow(new string[] {
                        "",
                        "OrderNumber"});
            table8.AddRow(new string[] {
                        "",
                        "QueryKey"});
            table8.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 163
 testRunner.Then("I verify that the data in both metadata XML files is same except for below fields" +
                    ".", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("12_Study update with patients migration")]
        public virtual void _12_StudyUpdateWithPatientsMigration()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("12_Study update with patients migration", null, ((string[])(null)));
#line 172
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 173
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 174
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 175
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 176
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 177
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
 testRunner.And("I upload study \"Test3210_Metadata_04.zip\" with Label \"Test3210_Metadata_04\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 179
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 180
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 181
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 182
 testRunner.And("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
 testRunner.And("I select \"Yes\" to reevaluate \"Change SD-Verify Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
 testRunner.And("I select \"Yes\" to reevaluate \"Change D-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
 testRunner.And("I select \"Yes\" to reevaluate \"Change M-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 186
 testRunner.And("I select \"Yes\" to reevaluate \"Change Signatures?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 187
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 188
 testRunner.And("I select patient migration option \"Migrate all patients\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table9.AddRow(new string[] {
                        "Study file (Test3210_Metadata_04) - complete."});
#line 191
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("13_Get Metadata from PatientAndOperationalDataEventing webservice")]
        public virtual void _13_GetMetadataFromPatientAndOperationalDataEventingWebservice()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("13_Get Metadata from PatientAndOperationalDataEventing webservice", null, ((string[])(null)));
#line 195
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "StudyNameData",
                        "ProtocolVersionData",
                        "ResponseFile"});
            table10.AddRow(new string[] {
                        "Test3210_Base",
                        "4.0",
                        "TestMetaData4Actual.xml"});
#line 196
 testRunner.When("I save the Study meta data exported from GetStudyMetaDataODM132 method under Pati" +
                    "entAndOperationalDataEventing webservice", ((string)(null)), table10, "When ");
#line 199
 testRunner.Then("The response should contain success status code as \"200\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("14_Verify the metadata XML Data generated")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.6.7,3.1.6.8,3.1.6.9,3.1.6.10")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void _14_VerifyTheMetadataXMLDataGenerated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("14_Verify the metadata XML Data generated", null, new string[] {
                        "ReqID:3.1.6.7,3.1.6.8,3.1.6.9,3.1.6.10",
                        "ObjectiveEvidence"});
#line 202
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 203
 testRunner.Given("I have the XML file \"TestMetaData4Expected.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 204
 testRunner.And("I have the XML file \"TestMetaData4Actual.xml\" available in the Result XML Files f" +
                    "older.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table11.AddRow(new string[] {
                        "",
                        "FileOID"});
            table11.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table11.AddRow(new string[] {
                        "",
                        "DerivedRunOrder"});
            table11.AddRow(new string[] {
                        "",
                        "OrderNumber"});
            table11.AddRow(new string[] {
                        "",
                        "QueryKey"});
            table11.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 205
 testRunner.Then("I verify that the data in both metadata XML files is same except for below fields" +
                    ".", ((string)(null)), table11, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("15_Study update with patients migration")]
        public virtual void _15_StudyUpdateWithPatientsMigration()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("15_Study update with patients migration", null, ((string[])(null)));
#line 213
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 214
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 215
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 216
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 219
 testRunner.And("I upload study \"Test3210_Metadata_05.zip\" with Label \"Test3210_Metadata_05\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 220
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 221
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 222
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 223
 testRunner.And("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 224
 testRunner.And("I select \"Yes\" to reevaluate \"Change SD-Verify Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 225
 testRunner.And("I select \"Yes\" to reevaluate \"Change D-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 226
 testRunner.And("I select \"Yes\" to reevaluate \"Change M-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 227
 testRunner.And("I select \"Yes\" to reevaluate \"Change Signatures?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 228
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 229
 testRunner.And("I select patient migration option \"Migrate all patients\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 230
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 231
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table12.AddRow(new string[] {
                        "Study file (Test3210_Metadata_05) - complete."});
#line 232
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("16_Get Metadata from PatientAndOperationalDataEventing webservice")]
        public virtual void _16_GetMetadataFromPatientAndOperationalDataEventingWebservice()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("16_Get Metadata from PatientAndOperationalDataEventing webservice", null, ((string[])(null)));
#line 236
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "StudyNameData",
                        "ProtocolVersionData",
                        "ResponseFile"});
            table13.AddRow(new string[] {
                        "Test3210_Base",
                        "5.0",
                        "TestMetaData5Actual.xml"});
#line 237
 testRunner.When("I save the Study meta data exported from GetStudyMetaDataODM132 method under Pati" +
                    "entAndOperationalDataEventing webservice", ((string)(null)), table13, "When ");
#line 240
 testRunner.Then("The response should contain success status code as \"200\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("17_Verify the metadata XML Data generated")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.6.7,3.1.6.8,3.1.6.9,3.1.6.10")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void _17_VerifyTheMetadataXMLDataGenerated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("17_Verify the metadata XML Data generated", null, new string[] {
                        "ReqID:3.1.6.7,3.1.6.8,3.1.6.9,3.1.6.10",
                        "ObjectiveEvidence"});
#line 243
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 244
 testRunner.Given("I have the XML file \"TestMetaData5Expected.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 245
 testRunner.And("I have the XML file \"TestMetaData5Actual.xml\" available in the Result XML Files f" +
                    "older.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table14.AddRow(new string[] {
                        "",
                        "FileOID"});
            table14.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table14.AddRow(new string[] {
                        "",
                        "DerivedRunOrder"});
            table14.AddRow(new string[] {
                        "",
                        "OrderNumber"});
            table14.AddRow(new string[] {
                        "",
                        "QueryKey"});
            table14.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 246
 testRunner.Then("I verify that the data in both metadata XML files is same except for below fields" +
                    ".", ((string)(null)), table14, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("18_Upload and Stage a Study which has Minor study changes")]
        public virtual void _18_UploadAndStageAStudyWhichHasMinorStudyChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("18_Upload and Stage a Study which has Minor study changes", null, ((string[])(null)));
#line 255
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 256
       testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 257
       testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 258
       testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 259
       testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 260
       testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 261
       testRunner.And("I upload study \"Test3210_Metadata_05.1.zip\" with Label \"Test3210_Metadata_05.1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 262
       testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 263
       testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 264
       testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 265
       testRunner.And("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 266
       testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 267
       testRunner.And("I click Publish button in PublishStudyPage of MinorStudyUpdate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 268
       testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table15.AddRow(new string[] {
                        "Publishing of Study file (Test3210_Metadata_05.1) - complete."});
#line 269
       testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table15, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("19_Get Metadata from PatientAndOperationalDataEventing webservice")]
        public virtual void _19_GetMetadataFromPatientAndOperationalDataEventingWebservice()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("19_Get Metadata from PatientAndOperationalDataEventing webservice", null, ((string[])(null)));
#line 273
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "StudyNameData",
                        "ProtocolVersionData",
                        "ResponseFile"});
            table16.AddRow(new string[] {
                        "Test3210_Base",
                        "5.1",
                        "TestMetaData5_1Actual.xml"});
#line 274
 testRunner.When("I save the Study meta data exported from GetStudyMetaDataODM132 method under Pati" +
                    "entAndOperationalDataEventing webservice", ((string)(null)), table16, "When ");
#line 277
 testRunner.Then("The response should contain success status code as \"200\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("20_Verify the metadata XML Data generated")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.6.7,3.1.6.8,3.1.6.9,3.1.6.10")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void _20_VerifyTheMetadataXMLDataGenerated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("20_Verify the metadata XML Data generated", null, new string[] {
                        "ReqID:3.1.6.7,3.1.6.8,3.1.6.9,3.1.6.10",
                        "ObjectiveEvidence"});
#line 280
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 281
 testRunner.Given("I have the XML file \"TestMetaData5_1Expected.xml\" available in the project folder" +
                    ".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 282
 testRunner.And("I have the XML file \"TestMetaData5_1Actual.xml\" available in the Result XML Files" +
                    " folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table17.AddRow(new string[] {
                        "",
                        "FileOID"});
            table17.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table17.AddRow(new string[] {
                        "",
                        "DerivedRunOrder"});
            table17.AddRow(new string[] {
                        "",
                        "OrderNumber"});
            table17.AddRow(new string[] {
                        "",
                        "QueryKey"});
            table17.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 283
 testRunner.Then("I verify that the data in both metadata XML files is same except for below fields" +
                    ".", ((string)(null)), table17, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("21_Study update with patients migration")]
        public virtual void _21_StudyUpdateWithPatientsMigration()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("21_Study update with patients migration", null, ((string[])(null)));
#line 292
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 293
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 294
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 295
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 296
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 297
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 298
 testRunner.And("I upload study \"Test3210_Metadata_06.zip\" with Label \"Test3210_Metadata_06\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 299
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 300
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 301
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 302
 testRunner.And("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 303
 testRunner.And("I select \"Yes\" to reevaluate \"Change SD-Verify Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 304
 testRunner.And("I select \"Yes\" to reevaluate \"Change D-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 305
 testRunner.And("I select \"Yes\" to reevaluate \"Change M-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 306
 testRunner.And("I select \"Yes\" to reevaluate \"Change Signatures?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 307
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 308
 testRunner.And("I select patient migration option \"Migrate all patients\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 309
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 310
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table18.AddRow(new string[] {
                        "Study file (Test3210_Metadata_06) - complete."});
#line 311
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table18, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("22_Get Metadata from PatientAndOperationalDataEventing webservice")]
        public virtual void _22_GetMetadataFromPatientAndOperationalDataEventingWebservice()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22_Get Metadata from PatientAndOperationalDataEventing webservice", null, ((string[])(null)));
#line 315
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "StudyNameData",
                        "ProtocolVersionData",
                        "ResponseFile"});
            table19.AddRow(new string[] {
                        "Test3210_Base",
                        "6.0",
                        "TestMetaData6Actual.xml"});
#line 316
 testRunner.When("I save the Study meta data exported from GetStudyMetaDataODM132 method under Pati" +
                    "entAndOperationalDataEventing webservice", ((string)(null)), table19, "When ");
#line 319
 testRunner.Then("The response should contain success status code as \"200\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("23_Verify the metadata XML Data generated")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.6.7,3.1.6.8,3.1.6.9,3.1.6.10")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void _23_VerifyTheMetadataXMLDataGenerated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("23_Verify the metadata XML Data generated", null, new string[] {
                        "ReqID:3.1.6.7,3.1.6.8,3.1.6.9,3.1.6.10",
                        "ObjectiveEvidence"});
#line 322
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 323
 testRunner.Given("I have the XML file \"TestMetaData6Expected.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 324
 testRunner.And("I have the XML file \"TestMetaData6Actual.xml\" available in the Result XML Files f" +
                    "older.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table20.AddRow(new string[] {
                        "",
                        "FileOID"});
            table20.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table20.AddRow(new string[] {
                        "",
                        "DerivedRunOrder"});
            table20.AddRow(new string[] {
                        "",
                        "OrderNumber"});
            table20.AddRow(new string[] {
                        "",
                        "QueryKey"});
            table20.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 325
 testRunner.Then("I verify that the data in both metadata XML files is same except for below fields" +
                    ".", ((string)(null)), table20, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

