// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.ODM_Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DataLabs_V5.7.0_ODM EventingforVisitdateupdatesOnForm")]
    public partial class DataLabs_V5_7_0_ODMEventingforVisitdateupdatesOnFormFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Visit date updates-Form Question - Study update.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DataLabs_V5.7.0_ODM EventingforVisitdateupdatesOnForm", @"Test Summary:
	1. Verification of ODM eventing for added date from form for event.
	2. Verification of ODM eventing for updated date from form for event.
	3. Verification of ODM eventing for updated with blank date for event from form.
	4. Verification of ODM eventing for updated mapped form for event on study update.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T01_Login to Datalabs")]
        public virtual void T01_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T01_Login to Datalabs", null, ((string[])(null)));
#line 10
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 11
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 12
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T02_Delete the current study")]
        public virtual void T02_DeleteTheCurrentStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T02_Delete the current study", null, ((string[])(null)));
#line 14
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 16
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T03_Publish the study")]
        public virtual void T03_PublishTheStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T03_Publish the study", null, ((string[])(null)));
#line 18
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 19
 testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
 testRunner.And("I upload a study \"Test4500_ODM_Eventing1_Base V1.Zip\" with study label \"V1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 21
 testRunner.Then("I see study label \"Test4500\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T04_Add Site 01-Site")]
        public virtual void T04_AddSite01_Site()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T04_Add Site 01-Site", null, ((string[])(null)));
#line 23
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 24
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteId",
                        "SiteName",
                        "Address1",
                        "Address2",
                        "Address3",
                        "Address4",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "SiteStatus",
                        "DCFWorkflow",
                        "ExternalSource",
                        "ExternalId"});
            table1.AddRow(new string[] {
                        "01",
                        "Site",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        "-"});
#line 26
 testRunner.And("I enter sites details and Save", ((string)(null)), table1, "And ");
#line 29
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.Then("I see Site details page for \"01-Site\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T05_Navigate to the Edit Preferences page and set the CRF Default save to Complet" +
            "e and update the Endpoint URL")]
        public virtual void T05_NavigateToTheEditPreferencesPageAndSetTheCRFDefaultSaveToCompleteAndUpdateTheEndpointURL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T05_Navigate to the Edit Preferences page and set the CRF Default save to Complet" +
                    "e and update the Endpoint URL", null, ((string[])(null)));
#line 34
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 35
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 36
 testRunner.When("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 37
 testRunner.And("I click ActionPalette Item \"Edit Preferences\" in \"StudyResetAction\" ActionPalette" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.And("I open tab \"Forms\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And("I select the \"Partial\" for Default Save: in StudyEditPreferencesFormsPage.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("I open tab \"patient data eventing\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.And("I update the endpoint URL under Patient Data Eventing tab.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.And("I click \"Save\" button on the Edit Preferences page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.Then("I verify the success message displayed as \"Edit Preferences Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T06_Add patient 01-PAT from Datalabs UI")]
        public virtual void T06_AddPatient01_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T06_Add patient 01-PAT from Datalabs UI", null, ((string[])(null)));
#line 45
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 46
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 47
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table2.AddRow(new string[] {
                        "01",
                        "PAT",
                        "06/13/2018"});
#line 48
 testRunner.When("I add patient with below details.", ((string)(null)), table2, "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table3.AddRow(new string[] {
                        "01-PAT"});
#line 51
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T07_Select and enroll patient 01-PAT.")]
        public virtual void T07_SelectAndEnrollPatient01_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T07_Select and enroll patient 01-PAT.", null, ((string[])(null)));
#line 55
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 56
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 57
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table4.AddRow(new string[] {
                        "01",
                        "06/13/2018",
                        "Yes"});
#line 59
 testRunner.When("I enroll the patient \"01-PAT\" with below data.", ((string)(null)), table4, "When ");
#line 62
 testRunner.Then("I see patient \"01-PAT\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T08_Navigate to form and enter date value and verify the event for derived date.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.6,3.1.2.7,3.1.2.8")]
        public virtual void T08_NavigateToFormAndEnterDateValueAndVerifyTheEventForDerivedDate_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T08_Navigate to form and enter date value and verify the event for derived date.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.2.6,3.1.2.7,3.1.2.8"});
#line 65
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 66
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 67
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 69
 testRunner.And("I expand \"Visit (Week 7)\" to select and open \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
 testRunner.When("I click \"Checkout\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table5.AddRow(new string[] {
                        "Date (DT1_Date1):",
                        "12/05/2018",
                        "TextBox"});
#line 71
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table5, "And ");
#line 74
 testRunner.When("I click on \"Save & Close\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 75
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 76
 testRunner.Then("I verify event date value \"12/05/2018\" for \"Visit (Week 7)\" event", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T09_Verify the date value which is derived from form to event.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.6,3.1.2.7,3.1.2.8")]
        public virtual void T09_VerifyTheDateValueWhichIsDerivedFromFormToEvent_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T09_Verify the date value which is derived from form to event.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.2.6,3.1.2.7,3.1.2.8"});
#line 79
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 80
 testRunner.Given(@"I save the Event XML data in ""UpdateEventDateFromUIActual1.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 5 and XmlMessage like '%' + (Select SubjectKey from Patient where PatientIdentity = '01-Pat') + '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 81
 testRunner.And("I have the XML file \"UpdateEventDateFromUIExpected1.xml\" available in the project" +
                    " folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.And("I have the XML file \"UpdateEventDateFromUIActual1.xml\" available in the Test XML " +
                    "Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table6.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table6.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table6.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table6.AddRow(new string[] {
                        "",
                        "FileOID"});
            table6.AddRow(new string[] {
                        "",
                        "SourceID"});
            table6.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 83
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T10_Update the form date value and verify the event for updated value.")]
        public virtual void T10_UpdateTheFormDateValueAndVerifyTheEventForUpdatedValue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T10_Update the form date value and verify the event for updated value.", null, ((string[])(null)));
#line 92
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 93
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 94
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
 testRunner.And("I expand \"Visit (Week 7)\" to select and open \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
 testRunner.When("I click \"Checkout\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes"});
            table7.AddRow(new string[] {
                        "Date (DT1_Date1):",
                        "12/05/2018",
                        "TextBox",
                        "12/06/2018",
                        "DCF",
                        "test"});
#line 98
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table7, "And ");
#line 101
 testRunner.When("I click on \"Save & Close\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 102
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 103
 testRunner.Then("I verify event date value \"12/06/2018\" for \"Visit (Week 7)\" event", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T11_Verify the date value which is derived from form to event.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.6,3.1.2.7,3.1.2.8")]
        public virtual void T11_VerifyTheDateValueWhichIsDerivedFromFormToEvent_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T11_Verify the date value which is derived from form to event.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.2.6,3.1.2.7,3.1.2.8"});
#line 106
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 107
 testRunner.Given(@"I save the Event XML data in ""UpdateEventDateFromUIActual2.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 5 and XmlMessage like '%' + (Select SubjectKey from Patient where PatientIdentity = '01-Pat') + '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 108
 testRunner.And("I have the XML file \"UpdateEventDateFromUIExpected2.xml\" available in the project" +
                    " folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 109
 testRunner.And("I have the XML file \"UpdateEventDateFromUIActual2.xml\" available in the Test XML " +
                    "Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table8.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table8.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table8.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table8.AddRow(new string[] {
                        "",
                        "FileOID"});
            table8.AddRow(new string[] {
                        "",
                        "SourceID"});
            table8.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 110
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T12_Update the form date value to blank and verify the event for updated value.")]
        public virtual void T12_UpdateTheFormDateValueToBlankAndVerifyTheEventForUpdatedValue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T12_Update the form date value to blank and verify the event for updated value.", null, ((string[])(null)));
#line 119
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 120
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 121
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
 testRunner.And("I expand \"Visit (Week 7)\" to select and open \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
 testRunner.When("I click \"Checkout\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes"});
            table9.AddRow(new string[] {
                        "Date (DT1_Date1):",
                        "12/06/2018",
                        "TextBox",
                        "",
                        "SEC",
                        "Updated Value"});
#line 125
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table9, "And ");
#line 128
 testRunner.When("I click on \"Save & Close\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 129
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 130
 testRunner.Then("I verify event date value \"<none>\" for \"Visit (Week 7)\" event", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T13_Verify the date value which is derived from form to event.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.6,3.1.2.7,3.1.2.8")]
        public virtual void T13_VerifyTheDateValueWhichIsDerivedFromFormToEvent_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T13_Verify the date value which is derived from form to event.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.2.6,3.1.2.7,3.1.2.8"});
#line 133
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 134
 testRunner.Given(@"I save the Event XML data in ""UpdateEventDateFromUIActual3.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 5 and XmlMessage like '%' + (Select SubjectKey from Patient where PatientIdentity = '01-Pat') + '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 135
 testRunner.And("I have the XML file \"UpdateEventDateFromUIExpected3.xml\" available in the project" +
                    " folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 136
 testRunner.And("I have the XML file \"UpdateEventDateFromUIActual3.xml\" available in the Test XML " +
                    "Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table10.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table10.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table10.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table10.AddRow(new string[] {
                        "",
                        "FileOID"});
            table10.AddRow(new string[] {
                        "",
                        "SourceID"});
            table10.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 137
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T14_Update the form date value from blank and verify the event for updated value." +
            "")]
        public virtual void T14_UpdateTheFormDateValueFromBlankAndVerifyTheEventForUpdatedValue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T14_Update the form date value from blank and verify the event for updated value." +
                    "", null, ((string[])(null)));
#line 146
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 147
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 148
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
 testRunner.And("I expand \"Visit (Week 7)\" to select and open \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
 testRunner.When("I click \"Checkout\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes"});
            table11.AddRow(new string[] {
                        "Date (DT1_Date1):",
                        "[Blank]",
                        "TextBox",
                        "12/07/2018",
                        "SOR",
                        "Updated Blank"});
#line 152
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table11, "And ");
#line 155
 testRunner.When("I click on \"Save & Close\" button on \"DT1 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 156
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 157
 testRunner.Then("I verify event date value \"12/07/2018\" for \"Visit (Week 7)\" event", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T15_Verify the date value which is derived from form to event.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.6,3.1.2.7,3.1.2.8")]
        public virtual void T15_VerifyTheDateValueWhichIsDerivedFromFormToEvent_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T15_Verify the date value which is derived from form to event.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.2.6,3.1.2.7,3.1.2.8"});
#line 160
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 161
 testRunner.Given(@"I save the Event XML data in ""UpdateEventDateFromUIActual4.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 5 and XmlMessage like '%' + (Select SubjectKey from Patient where PatientIdentity = '01-Pat') + '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 162
 testRunner.And("I have the XML file \"UpdateEventDateFromUIExpected4.xml\" available in the project" +
                    " folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
 testRunner.And("I have the XML file \"UpdateEventDateFromUIActual4.xml\" available in the Test XML " +
                    "Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table12.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table12.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table12.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table12.AddRow(new string[] {
                        "",
                        "FileOID"});
            table12.AddRow(new string[] {
                        "",
                        "SourceID"});
            table12.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 164
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T16_Update study with patients migration")]
        public virtual void T16_UpdateStudyWithPatientsMigration()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T16_Update study with patients migration", null, ((string[])(null)));
#line 175
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 176
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 177
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 178
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 179
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 180
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 181
 testRunner.And("I upload study \"Test4500_ODM_Eventing_Updated Mapped Form V2.Zip\" with Label \"V2\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 182
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 183
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 184
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
 testRunner.And("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 186
 testRunner.And("I select \"Yes\" to reevaluate \"Change SD-Verify Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 187
 testRunner.And("I select \"Yes\" to reevaluate \"Change D-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 188
 testRunner.And("I select \"Yes\" to reevaluate \"Change M-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
 testRunner.And("I select \"Yes\" to reevaluate \"Change Signatures?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
 testRunner.And("I click Publish button in PublishStudyPage of MinorStudyUpdate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 192
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table13.AddRow(new string[] {
                        "Publishing of Study file (V2) - complete."});
#line 193
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table13, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T17_Verify the date value which is derived from form to event.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.6,3.1.2.7,3.1.2.8")]
        public virtual void T17_VerifyTheDateValueWhichIsDerivedFromFormToEvent_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T17_Verify the date value which is derived from form to event.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.2.6,3.1.2.7,3.1.2.8"});
#line 198
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 199
 testRunner.Given(@"I save the Event XML data in ""UpdateEventDateFromUIActual5.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 16 and XmlMessage like '%' + (Select SubjectKey from Patient where PatientIdentity = '01-Pat') + '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 200
 testRunner.And("I have the XML file \"UpdateEventDateFromUIExpected5.xml\" available in the project" +
                    " folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 201
 testRunner.And("I have the XML file \"UpdateEventDateFromUIActual5.xml\" available in the Test XML " +
                    "Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table14.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table14.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table14.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table14.AddRow(new string[] {
                        "",
                        "FileOID"});
            table14.AddRow(new string[] {
                        "",
                        "SourceID"});
            table14.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 202
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table14, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T18_Update study with patients migration")]
        public virtual void T18_UpdateStudyWithPatientsMigration()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T18_Update study with patients migration", null, ((string[])(null)));
#line 214
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 215
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 216
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 217
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 219
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 220
 testRunner.And("I upload study \"Test4500_ODM_Eventing_Updated Mapped Form V3.Zip\" with Label \"V3\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 221
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 222
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 223
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 224
 testRunner.And("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 225
 testRunner.And("I select \"Yes\" to reevaluate \"Change SD-Verify Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 226
 testRunner.And("I select \"Yes\" to reevaluate \"Change D-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 227
 testRunner.And("I select \"Yes\" to reevaluate \"Change M-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 228
 testRunner.And("I select \"Yes\" to reevaluate \"Change Signatures?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 229
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 230
 testRunner.And("I click Publish button in PublishStudyPage of MinorStudyUpdate", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 231
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table15.AddRow(new string[] {
                        "Publishing of Study file (V3) - complete."});
#line 232
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table15, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T19_Verify the date value which is derived from form to event.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.6,3.1.2.7,3.1.2.8")]
        public virtual void T19_VerifyTheDateValueWhichIsDerivedFromFormToEvent_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T19_Verify the date value which is derived from form to event.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.2.6,3.1.2.7,3.1.2.8"});
#line 237
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 238
 testRunner.Given(@"I save the Event XML data in ""UpdateEventDateFromUIActual6.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 16 and XmlMessage like '%' + (Select SubjectKey from Patient where PatientIdentity = '01-Pat') + '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 239
 testRunner.And("I have the XML file \"UpdateEventDateFromUIExpected6.xml\" available in the project" +
                    " folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 240
 testRunner.And("I have the XML file \"UpdateEventDateFromUIActual6.xml\" available in the Test XML " +
                    "Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table16.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table16.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table16.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table16.AddRow(new string[] {
                        "",
                        "FileOID"});
            table16.AddRow(new string[] {
                        "",
                        "SourceID"});
            table16.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 241
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table16, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T20_Logout from Datalabs application.")]
        public virtual void T20_LogoutFromDatalabsApplication_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T20_Logout from Datalabs application.", null, ((string[])(null)));
#line 249
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 250
 testRunner.When("I clik logout of Datalabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 251
 testRunner.Then("I see login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

