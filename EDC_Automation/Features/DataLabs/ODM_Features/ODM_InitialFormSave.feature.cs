// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.ODM_Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ODM_InitialFormSave")]
    public partial class ODM_InitialFormSaveFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ODM_InitialFormSave.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ODM_InitialFormSave", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01_Login to Datalabs")]
        public virtual void _01_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_Login to Datalabs", null, ((string[])(null)));
#line 3
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 4
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 5
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02_Delete a study")]
        public virtual void _02_DeleteAStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02_Delete a study", null, ((string[])(null)));
#line 7
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("03_Upload and publish the study.")]
        public virtual void _03_UploadAndPublishTheStudy_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03_Upload and publish the study.", null, ((string[])(null)));
#line 11
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 12
    testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
    testRunner.And("I upload a study \"AllmappedforD1_1_20191213_T12120518.zip\" with study label \"Allm" +
                    "appedforD1_1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 14
    testRunner.Then("I see study label \"AllmappedforD1_1\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("04_Add site in Site Management and associate testadmin testadmin user to 01-Site")]
        public virtual void _04_AddSiteInSiteManagementAndAssociateTestadminTestadminUserTo01_Site()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04_Add site in Site Management and associate testadmin testadmin user to 01-Site", null, ((string[])(null)));
#line 16
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 17
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteId",
                        "SiteName",
                        "Address1",
                        "Address2",
                        "Address3",
                        "Address4",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "SiteStatus",
                        "DCFWorkflow",
                        "ExternalSource",
                        "ExternalId"});
            table1.AddRow(new string[] {
                        "01",
                        "Site",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        "-"});
#line 19
 testRunner.And("I enter sites details and Save", ((string)(null)), table1, "And ");
#line 22
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 23
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.Then("I see Site details page for \"01-Site\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T05_Add Labs")]
        public virtual void T05_AddLabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T05_Add Labs", null, ((string[])(null)));
#line 27
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 28
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.And("I click Link \"Lab Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And("I click Link \"Manage Laboratories\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "LabId",
                        "LaboratoryName",
                        "Company",
                        "Department",
                        "Address1",
                        "Address2",
                        "Address3",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "LaboratoryStatus",
                        "ContactPerson"});
            table2.AddRow(new string[] {
                        "L02",
                        "Lab02",
                        "PFIZER",
                        "RD",
                        "A1",
                        "A2",
                        "A3",
                        "City1",
                        "AP",
                        "500084",
                        "INDIA(IND)",
                        "",
                        "11111111",
                        "22222222",
                        "Active",
                        "Mr.XYZ"});
#line 31
 testRunner.And("I enter labs details and Save", ((string)(null)), table2, "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "LabId",
                        "LaboratoryName",
                        "Company",
                        "Department",
                        "Address1",
                        "Address2",
                        "Address3",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "LaboratoryStatus",
                        "ContactPerson"});
            table3.AddRow(new string[] {
                        "L02",
                        "Lab02",
                        "PFIZER",
                        "RD",
                        "A1",
                        "A2",
                        "A3",
                        "City1",
                        "AP",
                        "500084",
                        "INDIA(IND)",
                        "",
                        "11111111",
                        "22222222",
                        "Active",
                        "Mr.XYZ"});
#line 34
 testRunner.Then("I see labs with details in lab grid", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T06_Associate Lab L02 to 01-Site")]
        public virtual void T06_AssociateLabL02To01_Site()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T06_Associate Lab L02 to 01-Site", null, ((string[])(null)));
#line 38
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 39
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.And("I click ActionPalette Item \"Associate Lab(s)\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.And("I add and save lab id \"L02\" and lab name \"Lab02\" to associated labs in AssociateL" +
                    "abs page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.And("I select sub tab \"Labs\" in site page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "LabId",
                        "LaboratoryName",
                        "Company",
                        "Department",
                        "LaboratoryStatus"});
            table4.AddRow(new string[] {
                        "L02",
                        "Lab02",
                        "PFIZER",
                        "RD",
                        "Active"});
#line 45
 testRunner.Then("I see lab data in labs tab of Site in SitePage", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T07_Add a new lab test reference range record under Lab02 under WBC")]
        public virtual void T07_AddANewLabTestReferenceRangeRecordUnderLab02UnderWBC()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T07_Add a new lab test reference range record under Lab02 under WBC", null, ((string[])(null)));
#line 49
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 50
 testRunner.Given("I navigate to \"Local Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 51
    testRunner.When("I open lab with labid \"L02\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 52
 testRunner.And("I open labtest with labname \"MRRTEST21\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate",
                        "Gender",
                        "FromAgeSelect",
                        "FromAgeSet",
                        "ToAgeSelect",
                        "ToAgeSet",
                        "NormalRangeLowSelect",
                        "NormalRangeLowSet",
                        "NormalRangeHighSelect",
                        "NormalRangeHighSet",
                        "ClinicalRangeLowSelect",
                        "ClinicalRangeLowSet",
                        "ClinicalRangeHighSelect",
                        "ClinicalRangeHighSet",
                        "Unit",
                        "NA"});
            table5.AddRow(new string[] {
                        "02/03/2019",
                        "03/03/2040",
                        "Male",
                        ">",
                        "0",
                        "<",
                        "35",
                        ">",
                        "10",
                        "<",
                        "15",
                        ">",
                        "5",
                        "<",
                        "20",
                        "3Unit",
                        "False"});
#line 53
 testRunner.And("I click add and enter reference ranges of a lab test and Save and can see \"LabTes" +
                    "t Reference Range Added Successfully\" message upon each record save in Reference" +
                    "RangesPage including NA", ((string)(null)), table5, "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReferenceRangeID"});
            table6.AddRow(new string[] {
                        "{ReferenceRangeID1}"});
#line 56
 testRunner.Then("I see the reference range ids in the Reference Range Table.", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T08_Add patient 01-PAT from Datalabs UI")]
        public virtual void T08_AddPatient01_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T08_Add patient 01-PAT from Datalabs UI", null, ((string[])(null)));
#line 60
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 61
      testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 62
      testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table7.AddRow(new string[] {
                        "01",
                        "PAT",
                        "06/14/2019"});
#line 63
      testRunner.When("I add patient with below details.", ((string)(null)), table7, "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table8.AddRow(new string[] {
                        "01-PAT"});
#line 66
  testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T09_Select Site1 and patient 01-PAT.")]
        public virtual void T09_SelectSite1AndPatient01_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T09_Select Site1 and patient 01-PAT.", null, ((string[])(null)));
#line 70
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 71
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 72
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 74
 testRunner.Then("I see Patient details page for \"01-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T10_Expand the Visit (Screening) and open the demographics form to update the dat" +
            "a")]
        public virtual void T10_ExpandTheVisitScreeningAndOpenTheDemographicsFormToUpdateTheData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T10_Expand the Visit (Screening) and open the demographics form to update the dat" +
                    "a", null, ((string[])(null)));
#line 76
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 77
 testRunner.When("I expand \"Event 1\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
    testRunner.And("I click \"Checkout\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table9.AddRow(new string[] {
                        "What is your age",
                        "31",
                        "TextBox"});
            table9.AddRow(new string[] {
                        "Age Unit",
                        "Year",
                        "ListBox"});
            table9.AddRow(new string[] {
                        "What is your gender",
                        "Male",
                        "ListBox"});
#line 79
    testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table9, "And ");
#line 84
 testRunner.And("I click on \"Save & Close\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 85
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T11_Expand the Visit (week2) event and open the FormD1 form and update the data.")]
        public virtual void T11_ExpandTheVisitWeek2EventAndOpenTheFormD1FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T11_Expand the Visit (week2) event and open the FormD1 form and update the data.", null, ((string[])(null)));
#line 88
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 89
 testRunner.When("I expand \"Visit (week2)\" to select and open \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 90
 testRunner.And("I click \"Checkout\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table10.AddRow(new string[] {
                        "Lab ID Q1 For D1",
                        "Lab02 (L02)",
                        "ListBox"});
            table10.AddRow(new string[] {
                        "CRF Collection Date Q1 For D1",
                        "06/10/2019",
                        "TextBox"});
#line 91
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table10, "And ");
#line 95
    testRunner.And("I expand row \"1\" of table \"AutoBuildQuestionsForD1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table11.AddRow(new string[] {
                        "No",
                        "1",
                        "CRF Lab Value For D1",
                        "20",
                        "TextBox",
                        ""});
            table11.AddRow(new string[] {
                        "No",
                        "1",
                        "CRF Lab (Original) Unit for D1",
                        "Unit 3",
                        "ListBox",
                        "Save & Close Row"});
#line 96
 testRunner.Then("I enter below \"AutoBuildQuestionsForD1:\" autobuild table questions data in the CR" +
                    "F.", ((string)(null)), table11, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T12_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T12_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T12_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 102
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 103
 testRunner.Given("I save the Event XML data in \"RowSaveODMActual.xml\" file by executing the query \"" +
                    "select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 order b" +
                    "y OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 104
 testRunner.And("I have the XML file \"RowSaveODMExpected.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 105
 testRunner.And("I have the XML file \"RowSaveODMActual.xml\" available in the Test XML Files folder" +
                    ".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table12.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table12.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table12.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table12.AddRow(new string[] {
                        "",
                        "FileOID"});
            table12.AddRow(new string[] {
                        "",
                        "SourceID"});
            table12.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 106
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T13_Expand the Visit (week2) event and open the LabForm2 form and update the data" +
            ".")]
        public virtual void T13_ExpandTheVisitWeek2EventAndOpenTheLabForm2FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T13_Expand the Visit (week2) event and open the LabForm2 form and update the data" +
                    ".", null, ((string[])(null)));
#line 116
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 117
 testRunner.When("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 118
 testRunner.And("I expand row \"1\" of table \"AutoBuildQuestionsForD1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table13.AddRow(new string[] {
                        "No",
                        "1",
                        "CRF Lab Value For D1",
                        "20",
                        "20",
                        "SEC",
                        "TextBox",
                        "Save & Close Row"});
#line 120
    testRunner.Then("I enter below \"AutoBuildQuestionsForD1:\" table questions data in the CRF.", ((string)(null)), table13, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T14_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T14_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T14_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 125
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 126
 testRunner.Given("I save the Event XML data in \"RowSaveWithEntryCompleteODMActual.xml\" file by exec" +
                    "uting the query \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEve" +
                    "ntKey = 8 order by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 127
 testRunner.And("I have the XML file \"RowSaveWithEntryCompleteODMExpected.xml\" available in the pr" +
                    "oject folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.And("I have the XML file \"RowSaveWithEntryCompleteODMActual.xml\" available in the Test" +
                    " XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table14.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table14.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table14.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table14.AddRow(new string[] {
                        "",
                        "FileOID"});
            table14.AddRow(new string[] {
                        "",
                        "SourceID"});
            table14.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 129
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table14, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T15_Expand the Visit (week2) event and open the LabForm2 form and update the data" +
            ".")]
        public virtual void T15_ExpandTheVisitWeek2EventAndOpenTheLabForm2FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T15_Expand the Visit (week2) event and open the LabForm2 form and update the data" +
                    ".", null, ((string[])(null)));
#line 139
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 140
 testRunner.When("I click on \"Save\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 141
 testRunner.And("I expand row \"1\" of table \"AutoBuildQuestionsForD1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table15.AddRow(new string[] {
                        "1",
                        "CRF Lab Test Name For D1",
                        "HEMOGLOBIN1",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "CRF Lab Value For D1",
                        "20",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Lab Test Description For D1",
                        "Test11",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Lab Test Code For D1",
                        "21",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Lab Test Name For D1",
                        "MRRTEST21",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "LOINC Code For D1",
                        "21",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Category For D1",
                        "RBC01",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Specimen For D1",
                        "Automated01",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Method For D1",
                        "Quantitative01",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Result Type For D1",
                        "g/dl",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Normal Reference Range Low For D1",
                        "> 10.00000",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Normal Reference Range High For D1",
                        "< 15.00000",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Subcategory For D1",
                        "Serum01",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Critical Reference Range High For D1",
                        "< 20.00000",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Critical Reference Range Low For D1",
                        "> 5.00000",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Reference Range ID For D1",
                        "{ReferenceRangeID1}",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Normalized Patient Lab Value For D1",
                        "[Blank]",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Normalized Lab Unit For D1",
                        "5Unit",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range Low For D1",
                        "[Blank]",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Normalized Normal Reference Range High For D1",
                        "[Blank]",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range Low for D1",
                        "[Blank]",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Normalized Critical Reference Range High For D1",
                        "[Blank]",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Precision For D1",
                        "3",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Reference Range Not Applicable For D1",
                        "No",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Conversion Factor for D1",
                        "[Blank]",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "CRF Lab (Original) Unit for D1",
                        "Unit 3",
                        "Text",
                        ""});
            table15.AddRow(new string[] {
                        "1",
                        "Out of Normal Range Indicator",
                        "Above normal range high",
                        "Text",
                        ""});
#line 142
 testRunner.Then("I verify below ReferenceRange CRF \"AutoBuildQuestionsForD1:\" table questions data" +
                    " in the CRF.", ((string)(null)), table15, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T16_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T16_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T16_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 173
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 174
 testRunner.Given("I save the Event XML data in \"InitialFormSaveODMActual.xml\" file by executing the" +
                    " query \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8" +
                    " order by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 175
 testRunner.And("I have the XML file \"InitialFormSaveODMExpected.xml\" available in the project fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 176
 testRunner.And("I have the XML file \"InitialFormSaveODMActual.xml\" available in the Test XML File" +
                    "s folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table16.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table16.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table16.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table16.AddRow(new string[] {
                        "",
                        "FileOID"});
            table16.AddRow(new string[] {
                        "",
                        "SourceID"});
            table16.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 177
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table16, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

