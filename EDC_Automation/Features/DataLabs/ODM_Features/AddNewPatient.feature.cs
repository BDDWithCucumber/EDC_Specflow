// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.ODM_Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DataLabs_V5.7.0_ODM Eventing for AddNewPatient")]
    public partial class DataLabs_V5_7_0_ODMEventingForAddNewPatientFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "AddNewPatient.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DataLabs_V5.7.0_ODM Eventing for AddNewPatient", @"	Test Summary:
	1. Verification of ODM eventing for Patient Add from UI
	2. Verification of ODM eventing for Patient Add from Site Service
	3. Verification of ODM eventing for Patient Add from CDISC Service
	4. Verification of ODM eventing for Patient Add using Study with and without Patient Initials", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T01_Login to Datalabs")]
        public virtual void T01_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T01_Login to Datalabs", null, ((string[])(null)));
#line 8
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 9
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 10
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T02_Delete the current study")]
        public virtual void T02_DeleteTheCurrentStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T02_Delete the current study", null, ((string[])(null)));
#line 12
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 13
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 14
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T03_Publish the study")]
        public virtual void T03_PublishTheStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T03_Publish the study", null, ((string[])(null)));
#line 16
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 17
 testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 18
 testRunner.And("I upload a study \"Test4500_ODM_Eventing_Base.Zip\" with study label \"Test4500\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 19
 testRunner.Then("I see study label \"Test4500\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T04_Add Site 01-Site")]
        public virtual void T04_AddSite01_Site()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T04_Add Site 01-Site", null, ((string[])(null)));
#line 21
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 22
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteId",
                        "SiteName",
                        "Address1",
                        "Address2",
                        "Address3",
                        "Address4",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "SiteStatus",
                        "DCFWorkflow",
                        "ExternalSource",
                        "ExternalId"});
            table1.AddRow(new string[] {
                        "01",
                        "Site",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        "-"});
#line 24
 testRunner.And("I enter sites details and Save", ((string)(null)), table1, "And ");
#line 27
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 28
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.Then("I see success message \"Save Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T05_01_Navigate to the Edit Preferences page and set the CRF Default save to Comp" +
            "lete and update the Endpoint URL")]
        public virtual void T05_01_NavigateToTheEditPreferencesPageAndSetTheCRFDefaultSaveToCompleteAndUpdateTheEndpointURL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T05_01_Navigate to the Edit Preferences page and set the CRF Default save to Comp" +
                    "lete and update the Endpoint URL", null, ((string[])(null)));
#line 32
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 33
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 34
 testRunner.When("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
 testRunner.And("I click ActionPalette Item \"Edit Preferences\" in \"StudyResetAction\" ActionPalette" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.And("I open tab \"Forms\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.And("I select the \"Complete\" for Default Save: in StudyEditPreferencesFormsPage.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.And("I open tab \"patient data eventing\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And("I update the endpoint URL under Patient Data Eventing tab.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("I click \"Save\" button on the Edit Preferences page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.Then("I verify the success message displayed as \"Edit Preferences Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T05_Add a patient from Datalabs UI")]
        public virtual void T05_AddAPatientFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T05_Add a patient from Datalabs UI", null, ((string[])(null)));
#line 43
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 44
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 45
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table2.AddRow(new string[] {
                        "01",
                        "PAT",
                        "06/13/2018"});
#line 46
 testRunner.When("I add patient with below details.", ((string)(null)), table2, "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table3.AddRow(new string[] {
                        "01-PAT"});
#line 49
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T06_Verify the XML Data evented out for the Added Patient from Datalabs UI")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.1")]
        public virtual void T06_VerifyTheXMLDataEventedOutForTheAddedPatientFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T06_Verify the XML Data evented out for the Added Patient from Datalabs UI", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.2.1"});
#line 54
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 55
 testRunner.Given("I save the Event XML data in \"AddPatientFromUIActual.xml\" file by executing the q" +
                    "uery \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 1 a" +
                    "nd StatusKey = 311 order by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 56
 testRunner.And("I have the XML file \"AddPatientFromUIExpected.xml\" available in the project folde" +
                    "r.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.And("I have the XML file \"AddPatientFromUIActual.xml\" available in the Test XML Files " +
                    "folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table4.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table4.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table4.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table4.AddRow(new string[] {
                        "",
                        "FileOID"});
            table4.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 58
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T07_Add a ptient using SiteService Add New Patient Webservice")]
        public virtual void T07_AddAPtientUsingSiteServiceAddNewPatientWebservice()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T07_Add a ptient using SiteService Add New Patient Webservice", null, ((string[])(null)));
#line 66
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteIDData",
                        "ScreenIDData",
                        "PatientInitialsData",
                        "ScreenedDateData"});
            table5.AddRow(new string[] {
                        "01",
                        "02",
                        "PAT",
                        "06/13/2018"});
#line 67
 testRunner.When("I add a new patient using AddNewPatient webservice with below data.", ((string)(null)), table5, "When ");
#line 70
 testRunner.Then("The response should contain success status code as \"200\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T08_Verify the XML Data evented out for the Added Patient using CDISC webservice")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.1")]
        public virtual void T08_VerifyTheXMLDataEventedOutForTheAddedPatientUsingCDISCWebservice()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T08_Verify the XML Data evented out for the Added Patient using CDISC webservice", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.2.1"});
#line 72
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 73
 testRunner.Given("I save the Event XML data in \"AddPatientUsingWSActual.xml\" file by executing the " +
                    "query \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 1 " +
                    "and StatusKey = 311 order by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 74
 testRunner.And("I have the XML file \"AddPatientUsingWSExpected.xml\" available in the project fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.And("I have the XML file \"AddPatientUsingWSActual.xml\" available in the Test XML Files" +
                    " folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table6.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table6.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table6.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table6.AddRow(new string[] {
                        "",
                        "FileOID"});
            table6.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 76
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T09_Select the site 01-Site and patient 01-PAT.")]
        public virtual void T09_SelectTheSite01_SiteAndPatient01_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T09_Select the site 01-Site and patient 01-PAT.", null, ((string[])(null)));
#line 84
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 85
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 86
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 88
 testRunner.Then("I see Patient details page for \"01-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T10_Select Screened form and update the Screened Date value.")]
        public virtual void T10_SelectScreenedFormAndUpdateTheScreenedDateValue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T10_Select Screened form and update the Screened Date value.", null, ((string[])(null)));
#line 90
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 91
 testRunner.Given("I expand \"Common\" to select and open \"Screened\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 92
 testRunner.When("I click \"Checkout\" button on \"\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes"});
            table7.AddRow(new string[] {
                        "Screen Date:",
                        "06/13/2018",
                        "TextBox",
                        "06/28/2018",
                        "SOR",
                        "Test"});
#line 93
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table7, "And ");
#line 96
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 97
 testRunner.And("I click on \"Save & Close\" button on \"\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 98
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T11_Verify updating/submitting Screened form with new data is not evented out as " +
            "Patient Add.")]
        public virtual void T11_VerifyUpdatingSubmittingScreenedFormWithNewDataIsNotEventedOutAsPatientAdd_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T11_Verify updating/submitting Screened form with new data is not evented out as " +
                    "Patient Add.", null, ((string[])(null)));
#line 100
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 101
 testRunner.When("I execute the query \"select * from OdmSubscriberDetail where StudyEventKey = 1 an" +
                    "d XmlMessage like \'%ItemData ItemOID=\"SCRNID\" TransactionType=\"Insert\" Value=\"01" +
                    "\"%\'\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 102
 testRunner.Then("I have \"1\" records resulted on querying the DB.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T12_Delete the current study")]
        public virtual void T12_DeleteTheCurrentStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T12_Delete the current study", null, ((string[])(null)));
#line 104
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 105
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 106
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T13_Publish the study")]
        public virtual void T13_PublishTheStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T13_Publish the study", null, ((string[])(null)));
#line 108
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 109
 testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 110
 testRunner.And("I upload a study \"Test4500_ODM_Eventing_NoInitials.Zip\" with study label \"Test450" +
                    "0\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
 testRunner.Then("I see study label \"Test4500\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T14_Add a patient from Datalabs UI")]
        public virtual void T14_AddAPatientFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T14_Add a patient from Datalabs UI", null, ((string[])(null)));
#line 113
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 114
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 115
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "ScreenDate"});
            table8.AddRow(new string[] {
                        "03",
                        "06/13/2018"});
#line 116
 testRunner.When("I add patient with below details.", ((string)(null)), table8, "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table9.AddRow(new string[] {
                        "03"});
#line 119
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T15_Verify the XML Data evented out for the Added Patient from Datalabs UI")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.1")]
        public virtual void T15_VerifyTheXMLDataEventedOutForTheAddedPatientFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T15_Verify the XML Data evented out for the Added Patient from Datalabs UI", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.2.1"});
#line 123
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 124
 testRunner.Given("I save the Event XML data in \"AddPatientUsingUIActual2.xml\" file by executing the" +
                    " query \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 1" +
                    " and StatusKey = 311 order by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 125
 testRunner.And("I have the XML file \"AddPatientUsingUIExpected2.xml\" available in the project fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
 testRunner.And("I have the XML file \"AddPatientUsingUIActual2.xml\" available in the Test XML File" +
                    "s folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table10.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table10.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table10.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table10.AddRow(new string[] {
                        "",
                        "FileOID"});
            table10.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 127
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T16_Add a ptient using Site Service Add New Patient Webservice")]
        public virtual void T16_AddAPtientUsingSiteServiceAddNewPatientWebservice()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T16_Add a ptient using Site Service Add New Patient Webservice", null, ((string[])(null)));
#line 135
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteIDData",
                        "ScreenIDData",
                        "PatientInitialsData",
                        "ScreenedDateData"});
            table11.AddRow(new string[] {
                        "01",
                        "04",
                        "PAT",
                        "06/13/2018"});
#line 136
 testRunner.When("I add a new patient using AddNewPatient webservice with below data.", ((string)(null)), table11, "When ");
#line 139
 testRunner.Then("The response should contain success status code as \"200\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T17_Verify the XML Data evented out for the Added Patient using CDISC webservice")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.1")]
        public virtual void T17_VerifyTheXMLDataEventedOutForTheAddedPatientUsingCDISCWebservice()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T17_Verify the XML Data evented out for the Added Patient using CDISC webservice", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.2.1"});
#line 141
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 142
 testRunner.Given("I save the Event XML data in \"AddPatientUsingWSActual2.xml\" file by executing the" +
                    " query \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 1" +
                    " and StatusKey = 311 order by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 143
 testRunner.And("I have the XML file \"AddPatientUsingWSExpected2.xml\" available in the project fol" +
                    "der.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
 testRunner.And("I have the XML file \"AddPatientUsingWSActual2.xml\" available in the Test XML File" +
                    "s folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table12.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table12.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table12.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table12.AddRow(new string[] {
                        "",
                        "FileOID"});
            table12.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 145
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T18_Add a Patient using CDISC service")]
        public virtual void T18_AddAPatientUsingCDISCService()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T18_Add a Patient using CDISC service", null, ((string[])(null)));
#line 153
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "ODMDATA",
                        "AddNewPatientsDATA"});
            table13.AddRow(new string[] {
                        "AddPatientUsingCDISC1.xml",
                        "true"});
#line 154
 testRunner.When("I add a new patient using ConsumeODMStrAddNewPatients webservice with below data " +
                    "and odmfile.", ((string)(null)), table13, "When ");
#line 157
 testRunner.Then("The response should contain success status code as \"200\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T19_Verify the XML Data evented out for the Added Patient using CDISC webservice")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.1")]
        public virtual void T19_VerifyTheXMLDataEventedOutForTheAddedPatientUsingCDISCWebservice()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T19_Verify the XML Data evented out for the Added Patient using CDISC webservice", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.2.1"});
#line 160
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 161
 testRunner.Given("I save the Event XML data in \"AddPatientUsingCDISCActual.xml\" file by executing t" +
                    "he query \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey =" +
                    " 1 and StatusKey = 311 order by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 162
 testRunner.And("I have the XML file \"AddPatientUsingCDISCExpected.xml\" available in the project f" +
                    "older.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
 testRunner.And("I have the XML file \"AddPatientUsingCDISCActual.xml\" available in the Test XML Fi" +
                    "les folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table14.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table14.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table14.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table14.AddRow(new string[] {
                        "",
                        "FileOID"});
            table14.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 164
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table14, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T20_Logout from Datalabs")]
        public virtual void T20_LogoutFromDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T20_Logout from Datalabs", null, ((string[])(null)));
#line 173
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 174
 testRunner.When("I clik logout of Datalabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 175
 testRunner.Then("I see login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

