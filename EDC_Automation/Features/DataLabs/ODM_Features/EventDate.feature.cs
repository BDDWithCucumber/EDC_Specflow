// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.ODM_Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DataLabs_V5.7.0_ODM Eventing for EventDate")]
    public partial class DataLabs_V5_7_0_ODMEventingForEventDateFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "EventDate.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DataLabs_V5.7.0_ODM Eventing for EventDate", @"	Test Summary:
	1. Verification of odm eventing xml for Event Date entry from UI.
	2. Verification of odm eventing xml for Event Date update from UI.
	3. Verification of Event date odm eventing xml for unscheduled event.
	4. Verification of Patient status override odm eventing xml from Enrolled to Screened in which the enrolled event have an Event Date entry.
	5. Verification of odm eventing xml for Event Date entry from Patient Event Web Service (SetEventDate service).", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T01_Login to Datalabs")]
        public virtual void T01_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T01_Login to Datalabs", null, ((string[])(null)));
#line 9
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 10
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 11
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T02_Delete the current study")]
        public virtual void T02_DeleteTheCurrentStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T02_Delete the current study", null, ((string[])(null)));
#line 13
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 14
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T03_Publish the study")]
        public virtual void T03_PublishTheStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T03_Publish the study", null, ((string[])(null)));
#line 17
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 18
 testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
 testRunner.And("I upload a study \"Test4500_ODM_Eventing_Base.Zip\" with study label \"Test4500\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 20
 testRunner.Then("I see study label \"Test4500\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T04_Add Site 01-Site")]
        public virtual void T04_AddSite01_Site()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T04_Add Site 01-Site", null, ((string[])(null)));
#line 22
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 23
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteId",
                        "SiteName",
                        "Address1",
                        "Address2",
                        "Address3",
                        "Address4",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "SiteStatus",
                        "DCFWorkflow",
                        "ExternalSource",
                        "ExternalId"});
            table1.AddRow(new string[] {
                        "01",
                        "Site",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        "-"});
#line 25
 testRunner.And("I enter sites details and Save", ((string)(null)), table1, "And ");
#line 28
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 30
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.Then("I verify the success message displayed as \"Save Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T05_Navigate to the Edit Preferences page and set the Endpoint URL")]
        public virtual void T05_NavigateToTheEditPreferencesPageAndSetTheEndpointURL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T05_Navigate to the Edit Preferences page and set the Endpoint URL", null, ((string[])(null)));
#line 33
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 34
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 35
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.And("I click ActionPalette Item \"Edit Preferences\" in \"StudyResetAction\" ActionPalette" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.And("I open tab \"Patient Data Eventing\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.And("I update the endpoint URL under Patient Data Eventing tab.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And("I click \"Save\" button on the Edit Preferences page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.Then("I verify the success message displayed as \"Edit Preferences Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T06_Add patient 01-PAT from Datalabs UI")]
        public virtual void T06_AddPatient01_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T06_Add patient 01-PAT from Datalabs UI", null, ((string[])(null)));
#line 42
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 43
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 44
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table2.AddRow(new string[] {
                        "01",
                        "PAT",
                        "06/13/2018"});
#line 45
 testRunner.When("I add patient with below details.", ((string)(null)), table2, "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table3.AddRow(new string[] {
                        "01-PAT"});
#line 48
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T07_Select and enroll patient 01-PAT.")]
        public virtual void T07_SelectAndEnrollPatient01_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T07_Select and enroll patient 01-PAT.", null, ((string[])(null)));
#line 52
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 53
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table4.AddRow(new string[] {
                        "01",
                        "06/13/2018",
                        "Yes"});
#line 56
 testRunner.When("I enroll the patient \"01-PAT\" with below data.", ((string)(null)), table4, "When ");
#line 59
 testRunner.Then("I see patient \"01-PAT\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T08_Enter event date for Visit (Screening) Event")]
        public virtual void T08_EnterEventDateForVisitScreeningEvent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T08_Enter event date for Visit (Screening) Event", null, ((string[])(null)));
#line 61
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 62
 testRunner.When("I click event date value \"<none>\" for \"Visit (Screening)\" event", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 63
 testRunner.And("I set NeweventDate \"06/28/2018\" in EventActualDate modal.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
 testRunner.And("I click Save button in EventActualDatePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 65
 testRunner.Then("I verify event date value \"06/28/2018\" for \"Visit (Screening)\" event", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T09_Verify the XML Data evented out for the Visit date is entered from Datalabs U" +
            "I")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.7")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T09_VerifyTheXMLDataEventedOutForTheVisitDateIsEnteredFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T09_Verify the XML Data evented out for the Visit date is entered from Datalabs U" +
                    "I", null, new string[] {
                        "ReqID:3.1.2.7",
                        "ObjectiveEvidence"});
#line 68
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 69
 testRunner.Given(@"I save the Event XML data in ""EventDateFromUIActual1.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 5 and XmlMessage like '%StudyEventOID=""Screening"" TransactionType=""Insert""%' and XmlMessage like '%' +(Select SubjectKey from Patient where PatientIdentity='01-PAT')+ '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 70
 testRunner.And("I have the XML file \"EventDateFromUIExpected1.xml\" available in the project folde" +
                    "r.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
 testRunner.And("I have the XML file \"EventDateFromUIActual1.xml\" available in the Test XML Files " +
                    "folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table5.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table5.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table5.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table5.AddRow(new string[] {
                        "",
                        "FileOID"});
            table5.AddRow(new string[] {
                        "",
                        "SourceID"});
            table5.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 72
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T10_Update the event date for Visit (Screening) event")]
        public virtual void T10_UpdateTheEventDateForVisitScreeningEvent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T10_Update the event date for Visit (Screening) event", null, ((string[])(null)));
#line 81
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 82
 testRunner.When("I click event date value \"06/28/2018\" for \"Visit (Screening)\" event", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnterNewValue",
                        "ReasonforChange",
                        "AdditionalNotes"});
            table6.AddRow(new string[] {
                        "06/29/2018",
                        "DCF",
                        "Testing"});
#line 83
 testRunner.And("I update eventDate in EventActualDate modal.", ((string)(null)), table6, "And ");
#line 86
 testRunner.And("I click Save button in EventActualDatePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
 testRunner.Then("I verify event date value \"06/29/2018\" for \"Visit (Screening)\" event", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T11_Verify the XML Data evented out for the Visit date udapted from Datalabs UI")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.6,3.1.2.7")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T11_VerifyTheXMLDataEventedOutForTheVisitDateUdaptedFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T11_Verify the XML Data evented out for the Visit date udapted from Datalabs UI", null, new string[] {
                        "ReqID:3.1.2.6,3.1.2.7",
                        "ObjectiveEvidence"});
#line 90
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 91
 testRunner.Given(@"I save the Event XML data in ""EventDateFromUIActual2.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 5 and XmlMessage like '%StudyEventOID=""Screening"" TransactionType=""Update""%' and XmlMessage like '%' +(Select SubjectKey from Patient where PatientIdentity='01-PAT')+ '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 92
 testRunner.And("I have the XML file \"EventDateFromUIExpected2.xml\" available in the project folde" +
                    "r.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.And("I have the XML file \"EventDateFromUIActual2.xml\" available in the Test XML Files " +
                    "folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table7.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table7.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table7.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table7.AddRow(new string[] {
                        "",
                        "FileOID"});
            table7.AddRow(new string[] {
                        "",
                        "SourceID"});
            table7.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 94
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table7, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T12_Add an unscheduled event Visit (Week 4)")]
        public virtual void T12_AddAnUnscheduledEventVisitWeek4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T12_Add an unscheduled event Visit (Week 4)", null, ((string[])(null)));
#line 103
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 104
 testRunner.When("I click ActionPalette Item \"Add Unscheduled Event\" in \"PatientPortalActions\" Acti" +
                    "onPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 105
 testRunner.And("I select \"Visit (Week 4)\" from events list on AddUnscheduledEventStep1Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 106
 testRunner.And("I click on Next button on AddUnscheduledEventStep1Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "FormName"});
            table8.AddRow(new string[] {
                        "Case_Form"});
#line 107
 testRunner.And("I select below forms on on AddUnscheduledEventStep2Page", ((string)(null)), table8, "And ");
#line 110
 testRunner.And("I click on Next button on AddUnscheduledEventStep2Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 111
 testRunner.And("I click on Finish button on AddUnscheduledEventStep3Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 112
 testRunner.Then("I see event \"Visit (Week 4).1\" in PatientPortalPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T13_Enter event date for Visit (Week 4)1 Event")]
        public virtual void T13_EnterEventDateForVisitWeek41Event()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T13_Enter event date for Visit (Week 4)1 Event", null, ((string[])(null)));
#line 114
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 115
 testRunner.When("I click event date value \"<none>\" for \"Visit (Week 4).1\" event", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 116
 testRunner.And("I set NeweventDate \"06/28/2018\" in EventActualDate modal.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 117
 testRunner.And("I click Save button in EventActualDatePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
 testRunner.Then("I verify event date value \"06/28/2018\" for \"Visit (Week 4).1\" event", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T14_Verify the XML Data evented out for the Visit date entered for an unscheduled" +
            " event from Datalabs UI")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.7,3.1.2.8")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T14_VerifyTheXMLDataEventedOutForTheVisitDateEnteredForAnUnscheduledEventFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T14_Verify the XML Data evented out for the Visit date entered for an unscheduled" +
                    " event from Datalabs UI", null, new string[] {
                        "ReqID:3.1.2.7,3.1.2.8",
                        "ObjectiveEvidence"});
#line 121
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 122
 testRunner.Given(@"I save the Event XML data in ""EventDateFromUIActual3.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 5 and XmlMessage like '%StudyEventOID=""Unscheduled%TransactionType=""Insert""%' and XmlMessage like '%' +(Select SubjectKey from Patient where PatientIdentity='01-PAT')+ '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 123
 testRunner.And("I have the XML file \"EventDateFromUIExpected3.xml\" available in the project folde" +
                    "r.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
 testRunner.And("I have the XML file \"EventDateFromUIActual3.xml\" available in the Test XML Files " +
                    "folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table9.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table9.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table9.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table9.AddRow(new string[] {
                        "",
                        "FileOID"});
            table9.AddRow(new string[] {
                        "",
                        "SourceID"});
            table9.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 125
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T15_Enter event date for Visit (Week 4) Event")]
        public virtual void T15_EnterEventDateForVisitWeek4Event()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T15_Enter event date for Visit (Week 4) Event", null, ((string[])(null)));
#line 134
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 135
 testRunner.When("I click event date value \"<none>\" for \"Visit (Week 4)\" event", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 136
 testRunner.And("I set NeweventDate \"06/28/2018\" in EventActualDate modal.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 137
 testRunner.And("I click Save button in EventActualDatePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 138
 testRunner.Then("I verify event date value \"06/28/2018\" for \"Visit (Week 4)\" event", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T16_Verify the XML Data evented out for the Visit date entered for an event from " +
            "Datalabs UI")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.7")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T16_VerifyTheXMLDataEventedOutForTheVisitDateEnteredForAnEventFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T16_Verify the XML Data evented out for the Visit date entered for an event from " +
                    "Datalabs UI", null, new string[] {
                        "ReqID:3.1.2.7",
                        "ObjectiveEvidence"});
#line 141
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 142
 testRunner.Given(@"I save the Event XML data in ""EventDateFromUIActual4.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 5 and XmlMessage like '%StudyEventOID=""Visit04"" TransactionType=""Insert""%' and XmlMessage like '%' +(Select SubjectKey from Patient where PatientIdentity='01-PAT')+ '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 143
 testRunner.And("I have the XML file \"EventDateFromUIExpected4.xml\" available in the project folde" +
                    "r.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
 testRunner.And("I have the XML file \"EventDateFromUIActual4.xml\" available in the Test XML Files " +
                    "folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table10.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table10.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table10.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table10.AddRow(new string[] {
                        "",
                        "FileOID"});
            table10.AddRow(new string[] {
                        "",
                        "SourceID"});
            table10.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 145
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T17_Override the patient status from Enrolled to Screened for patient 01-PAT")]
        public virtual void T17_OverrideThePatientStatusFromEnrolledToScreenedForPatient01_PAT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T17_Override the patient status from Enrolled to Screened for patient 01-PAT", null, ((string[])(null)));
#line 154
 this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 155
 testRunner.When("I click ActionPalette Item \"Patient Status Override\" in \"PatientPortalActions\" Ac" +
                    "tionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 156
 testRunner.Given("I select change to \"Screened\" in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 157
 testRunner.And("I enter reason \"Status override from Enrolled to Screened\" for patient status cha" +
                    "nge in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
 testRunner.And("I Click save button in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
 testRunner.Then("I see success message \"Status Override Changed Successfully.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T18_Verify the XML Data evented out for the Screened status due to status overrid" +
            "e.")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.3,3.1.2.4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T18_VerifyTheXMLDataEventedOutForTheScreenedStatusDueToStatusOverride_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T18_Verify the XML Data evented out for the Screened status due to status overrid" +
                    "e.", null, new string[] {
                        "ReqID:3.1.2.3,3.1.2.4",
                        "ObjectiveEvidence"});
#line 162
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 163
 testRunner.Given(@"I save the Event XML data in ""EnrollPatientOverrideEventDateActual.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 3 and XmlMessage like '%Status override from Enrolled to Screened%' and XmlMessage like '%' +(Select SubjectKey from Patient where PatientIdentity='01-PAT')+ '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 164
 testRunner.And("I have the XML file \"EnrollPatientOverrideEventDateExpected.xml\" available in the" +
                    " project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
 testRunner.And("I have the XML file \"EnrollPatientOverrideEventDateActual.xml\" available in the T" +
                    "est XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table11.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table11.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table11.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table11.AddRow(new string[] {
                        "",
                        "FileOID"});
            table11.AddRow(new string[] {
                        "",
                        "SourceID"});
            table11.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 166
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table11, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T19_Enter Visit date for Visit (Week 2) event via SetEventDate Webservice")]
        public virtual void T19_EnterVisitDateForVisitWeek2EventViaSetEventDateWebservice()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T19_Enter Visit date for Visit (Week 2) event via SetEventDate Webservice", null, ((string[])(null)));
#line 175
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientKeyData",
                        "PatientEventKeyData",
                        "EventDateData"});
            table12.AddRow(new string[] {
                        "1",
                        "4",
                        "2018-06-28"});
#line 176
 testRunner.When("I enter Visit date using SetEventDate webservice with below data.", ((string)(null)), table12, "When ");
#line 179
 testRunner.Then("The response should contain success status code as \"200\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T20_Verify the XML Data evented out for the Visit date is entered via Webservice")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.7")]
        public virtual void T20_VerifyTheXMLDataEventedOutForTheVisitDateIsEnteredViaWebservice()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T20_Verify the XML Data evented out for the Visit date is entered via Webservice", null, new string[] {
                        "ReqID:3.1.2.7"});
#line 182
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 183
 testRunner.Given(@"I save the Event XML data in ""EventDateUsingWebserviceActual.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 5 and XmlMessage like '%Changed by the PatientEvent Web Service%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 184
 testRunner.And("I have the XML file \"EventDateUsingWebserviceExpected.xml\" available in the proje" +
                    "ct folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
 testRunner.And("I have the XML file \"EventDateUsingWebserviceActual.xml\" available in the Test XM" +
                    "L Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table13.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table13.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table13.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table13.AddRow(new string[] {
                        "",
                        "FileOID"});
            table13.AddRow(new string[] {
                        "",
                        "SourceID"});
            table13.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 186
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table13, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T21_Logout from Datalabs")]
        public virtual void T21_LogoutFromDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T21_Logout from Datalabs", null, ((string[])(null)));
#line 195
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 196
 testRunner.When("I clik logout of Datalabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 197
 testRunner.Then("I see login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

