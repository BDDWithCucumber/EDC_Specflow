// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.ODM_Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DataLabs_V5.7.0_ODM Eventing for ItemDataUpdate")]
    public partial class DataLabs_V5_7_0_ODMEventingForItemDataUpdateFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "DataItemUpdate.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DataLabs_V5.7.0_ODM Eventing for ItemDataUpdate", @"	Test Summary:
	1. Verification of ODM eventing for Item Update on Flat Questions
	2. Verification of ODM eventing for Item Update on table Questions
	3. Verification of ODM eventing for Item Update on Mark Not Answered
	4. Verification of ODM eventing for Item Update on Clear Item
	5. Verification of ODM eventing for Item Update on Restore table row
	6. Verification of ODM eventing for Item Update on CDISC Webservice
	7. Verification of ODM eventing for Item Update on Status forms and non status forms", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T01_Login to Datalabs")]
        public virtual void T01_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T01_Login to Datalabs", null, ((string[])(null)));
#line 11
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 12
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 13
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T02_Delete the current study")]
        public virtual void T02_DeleteTheCurrentStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T02_Delete the current study", null, ((string[])(null)));
#line 15
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 16
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T03_Publish the study")]
        public virtual void T03_PublishTheStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T03_Publish the study", null, ((string[])(null)));
#line 19
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 20
 testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
 testRunner.And("I upload a study \"Test4500_ItemUpdateVerification.Zip\" with study label \"Test4500" +
                    "\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.Then("I see study label \"Test4500\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T04_Add Site 01-Site")]
        public virtual void T04_AddSite01_Site()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T04_Add Site 01-Site", null, ((string[])(null)));
#line 24
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 25
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteId",
                        "SiteName",
                        "Address1",
                        "Address2",
                        "Address3",
                        "Address4",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "SiteStatus",
                        "DCFWorkflow",
                        "ExternalSource",
                        "ExternalId"});
            table1.AddRow(new string[] {
                        "01",
                        "Site",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        "-"});
#line 27
 testRunner.And("I enter sites details and Save", ((string)(null)), table1, "And ");
#line 30
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.Then("I see Site details page for \"01-Site\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T05_Navigate to the Edit Preferences page and set the CRF Default save to Complet" +
            "e and update the Endpoint URL")]
        public virtual void T05_NavigateToTheEditPreferencesPageAndSetTheCRFDefaultSaveToCompleteAndUpdateTheEndpointURL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T05_Navigate to the Edit Preferences page and set the CRF Default save to Complet" +
                    "e and update the Endpoint URL", null, ((string[])(null)));
#line 36
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 37
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
 testRunner.When("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 39
 testRunner.And("I click ActionPalette Item \"Edit Preferences\" in \"StudyResetAction\" ActionPalette" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("I open tab \"Forms\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.And("I select the \"Partial\" for Default Save: in StudyEditPreferencesFormsPage.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.And("I open tab \"patient data eventing\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.And("I update the endpoint URL under Patient Data Eventing tab.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.And("I click \"Save\" button on the Edit Preferences page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.Then("I verify the success message displayed as \"Edit Preferences Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T06_Add patient 01-PAT from Datalabs UI")]
        public virtual void T06_AddPatient01_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T06_Add patient 01-PAT from Datalabs UI", null, ((string[])(null)));
#line 47
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 48
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table2.AddRow(new string[] {
                        "01",
                        "PAT",
                        "<Today>"});
#line 50
 testRunner.When("I add patient with below details.", ((string)(null)), table2, "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table3.AddRow(new string[] {
                        "01-PAT"});
#line 53
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T07_Select and enroll patient 01-PAT.")]
        public virtual void T07_SelectAndEnrollPatient01_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T07_Select and enroll patient 01-PAT.", null, ((string[])(null)));
#line 57
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 58
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 59
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 60
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table4.AddRow(new string[] {
                        "01",
                        "06/13/2018",
                        "Yes"});
#line 61
 testRunner.When("I enroll the patient \"01-PAT\" with below data.", ((string)(null)), table4, "When ");
#line 64
 testRunner.Then("I see patient \"01-PAT\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T08_Fill flat questions in Form1 and submit partially")]
        public virtual void T08_FillFlatQuestionsInForm1AndSubmitPartially()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T08_Fill flat questions in Form1 and submit partially", null, ((string[])(null)));
#line 66
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 67
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 68
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table5.AddRow(new string[] {
                        "Sample text question:",
                        "Test",
                        "TextBox"});
            table5.AddRow(new string[] {
                        "Sample select question:",
                        "Yes",
                        "ListBox"});
            table5.AddRow(new string[] {
                        "Sample radio question:",
                        "No",
                        "Radio"});
#line 69
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table5, "And ");
#line 74
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T09_Verify the XML Data evented out for the partially submitted form data from Da" +
            "talabs UI")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.4.1,3.1.4.2,3.1.4.3")]
        public virtual void T09_VerifyTheXMLDataEventedOutForThePartiallySubmittedFormDataFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T09_Verify the XML Data evented out for the partially submitted form data from Da" +
                    "talabs UI", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.4.1,3.1.4.2,3.1.4.3"});
#line 79
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 80
 testRunner.Given(@"I save the Event XML data in ""ItemUpdateFlatQuestionsActual1.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%TransactionType=""Insert"" Value=""Test""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 81
 testRunner.And("I have the XML file \"ItemUpdateFlatQuestionsExpected1.xml\" available in the proje" +
                    "ct folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.And("I have the XML file \"ItemUpdateFlatQuestionsActual1.xml\" available in the Result " +
                    "XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table6.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table6.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table6.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table6.AddRow(new string[] {
                        "",
                        "FileOID"});
            table6.AddRow(new string[] {
                        "",
                        "SourceID"});
            table6.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 83
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T10_Update the form by filling unanswered flat questions in Form1 and submit part" +
            "ially")]
        public virtual void T10_UpdateTheFormByFillingUnansweredFlatQuestionsInForm1AndSubmitPartially()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T10_Update the form by filling unanswered flat questions in Form1 and submit part" +
                    "ially", null, ((string[])(null)));
#line 92
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 93
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 94
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table7.AddRow(new string[] {
                        "Sample integer question:",
                        "12",
                        "TextBox"});
            table7.AddRow(new string[] {
                        "Sample date question:",
                        "08/17/1999",
                        "TextBox"});
#line 95
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table7, "And ");
#line 99
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 100
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T11_Verify the XML Data evented out for the partially submitted form data from Da" +
            "talabs UI")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.4.1,3.1.4.2,3.1.4.3")]
        public virtual void T11_VerifyTheXMLDataEventedOutForThePartiallySubmittedFormDataFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T11_Verify the XML Data evented out for the partially submitted form data from Da" +
                    "talabs UI", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.4.1,3.1.4.2,3.1.4.3"});
#line 104
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 105
 testRunner.Given(@"I save the Event XML data in ""ItemUpdateFlatQuestionsActual2.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%ItemData ItemOID=""Date"" TransactionType=""Insert"" Value=""08/17/1999""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 106
 testRunner.And("I have the XML file \"ItemUpdateFlatQuestionsExpected2.xml\" available in the proje" +
                    "ct folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 107
 testRunner.And("I have the XML file \"ItemUpdateFlatQuestionsActual2.xml\" available in the Result " +
                    "XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table8.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table8.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table8.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table8.AddRow(new string[] {
                        "",
                        "FileOID"});
            table8.AddRow(new string[] {
                        "",
                        "SourceID"});
            table8.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 108
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T12_Submit the Form1 completely")]
        public virtual void T12_SubmitTheForm1Completely()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T12_Submit the Form1 completely", null, ((string[])(null)));
#line 118
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 119
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 120
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 121
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 122
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
 testRunner.And("I click Continue button of Modal \"Queries Result\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T13_Verify the XML Data evented out for the completely submitted form data from D" +
            "atalabs UI")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.4.1,3.1.4.2,3.1.4.3")]
        public virtual void T13_VerifyTheXMLDataEventedOutForTheCompletelySubmittedFormDataFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T13_Verify the XML Data evented out for the completely submitted form data from D" +
                    "atalabs UI", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.4.1,3.1.4.2,3.1.4.3"});
#line 128
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 129
 testRunner.Given(@"I save the Event XML data in ""ItemUpdateFlatQuestionsActual3.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%ItemData ItemOID=""Float"" TransactionType=""Insert"" Value=""""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 130
 testRunner.And("I have the XML file \"ItemUpdateFlatQuestionsExpected3.xml\" available in the proje" +
                    "ct folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
 testRunner.And("I have the XML file \"ItemUpdateFlatQuestionsActual3.xml\" available in the Result " +
                    "XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table9.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table9.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table9.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table9.AddRow(new string[] {
                        "",
                        "FileOID"});
            table9.AddRow(new string[] {
                        "",
                        "SourceID"});
            table9.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table9.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 132
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T14_Submit the blank Demographics completely")]
        public virtual void T14_SubmitTheBlankDemographicsCompletely()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T14_Submit the blank Demographics completely", null, ((string[])(null)));
#line 142
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 143
 testRunner.Given("I expand \"Visit (Week 3)\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 144
 testRunner.When("I click \"Check out\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 145
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 146
 testRunner.And("I click on \"Save & Close\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T15_Verify the XML Data evented out for the completely submitted with no data fro" +
            "m Datalabs UI")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.4.1,3.1.4.2,3.1.4.3")]
        public virtual void T15_VerifyTheXMLDataEventedOutForTheCompletelySubmittedWithNoDataFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T15_Verify the XML Data evented out for the completely submitted with no data fro" +
                    "m Datalabs UI", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.4.1,3.1.4.2,3.1.4.3"});
#line 151
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 152
 testRunner.Given(@"I save the Event XML data in ""ItemUpdateFlatQuestionsActual4.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%ItemData ItemOID=""BRTHDT"" TransactionType=""Insert"" Value=""""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 153
 testRunner.And("I have the XML file \"ItemUpdateFlatQuestionsExpected4.xml\" available in the proje" +
                    "ct folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 154
 testRunner.And("I have the XML file \"ItemUpdateFlatQuestionsActual4.xml\" available in the Result " +
                    "XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table10.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table10.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table10.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table10.AddRow(new string[] {
                        "",
                        "FileOID"});
            table10.AddRow(new string[] {
                        "",
                        "SourceID"});
            table10.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 155
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T16_Update the form by filling unanswered flat questions in Form1 and submit")]
        public virtual void T16_UpdateTheFormByFillingUnansweredFlatQuestionsInForm1AndSubmit()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T16_Update the form by filling unanswered flat questions in Form1 and submit", null, ((string[])(null)));
#line 164
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 165
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 166
 testRunner.When("I click \"Check out\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes"});
            table11.AddRow(new string[] {
                        "Sample float question:",
                        "[Blank]",
                        "TextBox",
                        "11.09",
                        "SOR",
                        "Test"});
#line 167
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table11, "And ");
#line 170
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 171
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T17_Verify the XML Data evented out for updating the submitted data from Datalabs" +
            " UI")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.4.1,3.1.4.2,3.1.4.3")]
        public virtual void T17_VerifyTheXMLDataEventedOutForUpdatingTheSubmittedDataFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T17_Verify the XML Data evented out for updating the submitted data from Datalabs" +
                    " UI", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.4.1,3.1.4.2,3.1.4.3"});
#line 174
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 175
 testRunner.Given(@"I save the Event XML data in ""ItemUpdateFlatQuestionsActual5.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%ItemData ItemOID=""Float"" TransactionType=""Update"" Value=""11.09""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 176
 testRunner.And("I have the XML file \"ItemUpdateFlatQuestionsExpected5.xml\" available in the proje" +
                    "ct folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 177
 testRunner.And("I have the XML file \"ItemUpdateFlatQuestionsActual5.xml\" available in the Test XM" +
                    "L Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table12.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table12.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table12.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table12.AddRow(new string[] {
                        "",
                        "FileOID"});
            table12.AddRow(new string[] {
                        "",
                        "SourceID"});
            table12.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table12.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 178
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T18_Update the form by filling table questions in Form1 and submit")]
        public virtual void T18_UpdateTheFormByFillingTableQuestionsInForm1AndSubmit()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T18_Update the form by filling table questions in Form1 and submit", null, ((string[])(null)));
#line 188
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 189
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 190
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table13.AddRow(new string[] {
                        "Yes",
                        "1",
                        "Drug Name:",
                        "Test Drug 1",
                        "TextBox",
                        ""});
            table13.AddRow(new string[] {
                        "No",
                        "1",
                        "Condition:",
                        "Initial",
                        "TextBox",
                        ""});
            table13.AddRow(new string[] {
                        "No",
                        "1",
                        "Start Date:",
                        "01/01/2000",
                        "TextBox",
                        "Save & Close Row"});
            table13.AddRow(new string[] {
                        "Yes",
                        "2",
                        "Drug Name:",
                        "Test Drug 2",
                        "TextBox",
                        ""});
            table13.AddRow(new string[] {
                        "N0",
                        "2",
                        "Start Date:",
                        "01/01/2010",
                        "TextBox",
                        "Save & Close Row"});
#line 191
 testRunner.And("I enter below \"Sample Table:\" table questions data in the CRF.", ((string)(null)), table13, "And ");
#line 198
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T19_Verify the XML Data evented out for adding table row #1 in Form1 from Datalab" +
            "s UI")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.4.1,3.1.4.4,3.1.4.6")]
        public virtual void T19_VerifyTheXMLDataEventedOutForAddingTableRow1InForm1FromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T19_Verify the XML Data evented out for adding table row #1 in Form1 from Datalab" +
                    "s UI", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.4.1,3.1.4.4,3.1.4.6"});
#line 201
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 202
 testRunner.Given(@"I save the Event XML data in ""ItemUpdateTableQuestionsActual1.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%ItemData ItemOID=""T_Text1"" TransactionType=""Insert"" Value=""Test Drug 1""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 203
 testRunner.And("I have the XML file \"ItemUpdateTableQuestionsExpected1.xml\" available in the proj" +
                    "ect folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 204
 testRunner.And("I have the XML file \"ItemUpdateTableQuestionsActual1.xml\" available in the Test X" +
                    "ML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table14.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table14.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table14.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table14.AddRow(new string[] {
                        "",
                        "FileOID"});
            table14.AddRow(new string[] {
                        "",
                        "SourceID"});
            table14.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table14.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 205
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table14, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T20_Verify the XML Data evented out for adding table row #2 in Form1 from Datalab" +
            "s UI")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.4.1,3.1.4.4,3.1.4.6")]
        public virtual void T20_VerifyTheXMLDataEventedOutForAddingTableRow2InForm1FromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T20_Verify the XML Data evented out for adding table row #2 in Form1 from Datalab" +
                    "s UI", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.4.1,3.1.4.4,3.1.4.6"});
#line 216
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 217
 testRunner.Given(@"I save the Event XML data in ""ItemUpdateTableQuestionsActual2.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%ItemData ItemOID=""T_Text1"" TransactionType=""Insert"" Value=""Test Drug 2""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 218
 testRunner.And("I have the XML file \"ItemUpdateTableQuestionsExpected2.xml\" available in the proj" +
                    "ect folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 219
 testRunner.And("I have the XML file \"ItemUpdateTableQuestionsActual2.xml\" available in the Test X" +
                    "ML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table15.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table15.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table15.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table15.AddRow(new string[] {
                        "",
                        "FileOID"});
            table15.AddRow(new string[] {
                        "",
                        "SourceID"});
            table15.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table15.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 220
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table15, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T21_Submit Form1 completely to submit unfilled table questions")]
        public virtual void T21_SubmitForm1CompletelyToSubmitUnfilledTableQuestions()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T21_Submit Form1 completely to submit unfilled table questions", null, ((string[])(null)));
#line 230
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 231
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 232
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 233
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 234
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 235
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T22_Verify the XML Data evented out for submitting Form1 from Datalabs UI")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.4.1,3.1.4.4,3.1.4.6")]
        public virtual void T22_VerifyTheXMLDataEventedOutForSubmittingForm1FromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T22_Verify the XML Data evented out for submitting Form1 from Datalabs UI", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.4.1,3.1.4.4,3.1.4.6"});
#line 238
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 239
 testRunner.Given(@"I save the Event XML data in ""ItemUpdateTableQuestionsActual3.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%ItemData ItemOID=""T_S2Date"" TransactionType=""Insert"" Value=""""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 240
 testRunner.And("I have the XML file \"ItemUpdateTableQuestionsExpected3.xml\" available in the proj" +
                    "ect folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 241
 testRunner.And("I have the XML file \"ItemUpdateTableQuestionsActual3.xml\" available in the Test X" +
                    "ML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table16.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table16.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table16.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table16.AddRow(new string[] {
                        "",
                        "FileOID"});
            table16.AddRow(new string[] {
                        "",
                        "SourceID"});
            table16.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table16.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 242
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table16, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T23_Mark not answered and clear flat questions in Form1")]
        public virtual void T23_MarkNotAnsweredAndClearFlatQuestionsInForm1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T23_Mark not answered and clear flat questions in Form1", null, ((string[])(null)));
#line 252
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 253
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 254
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 255
 testRunner.And("I click icon \"icon_mna_disabled.png\" for the flat question \"Sample text question:" +
                    "\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 256
    testRunner.And("I enter comments \"MNA Comments for Q1\" in MarkItemDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 257
 testRunner.And("I click ok button in MarkItemDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 258
 testRunner.And("I click icon \"icon_mna_disabled.png\" for the flat question \"Sample radio question" +
                    ":\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 259
 testRunner.And("I enter comments \"MNA Comments for Q3\" in MarkItemDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 260
 testRunner.And("I click ok button in MarkItemDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 261
 testRunner.And("I click ClearItem for the flat question \"Sample select question:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 262
 testRunner.And("I enter notes \"Clearing item for Q2\" in ClearItemModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 263
 testRunner.And("I click ok button in ClearItemModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 264
 testRunner.Then("I see icon \"icon_mna.png\" against question \"Sample text question:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 265
 testRunner.And("I see icon \"icon_mna.png\" against question \"Sample radio question:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 266
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T24_Verify the XML Data evented out for MNA and clearing flat questions from Data" +
            "labs UI")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.4.2,3.1.4.3")]
        public virtual void T24_VerifyTheXMLDataEventedOutForMNAAndClearingFlatQuestionsFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T24_Verify the XML Data evented out for MNA and clearing flat questions from Data" +
                    "labs UI", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.4.2,3.1.4.3"});
#line 269
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 270
 testRunner.Given(@"I save the Event XML data in ""MNAClearItemFlatQuestionsActual1.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%ItemData ItemOID=""Text"" TransactionType=""Update"" Value=""""%<ReasonForChange>Marked Not Answered</ReasonForChange>%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 271
 testRunner.And("I have the XML file \"MNAClearItemFlatQuestionsExpected1.xml\" available in the pro" +
                    "ject folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 272
 testRunner.And("I have the XML file \"MNAClearItemFlatQuestionsActual1.xml\" available in the Test " +
                    "XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table17.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table17.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table17.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table17.AddRow(new string[] {
                        "",
                        "FileOID"});
            table17.AddRow(new string[] {
                        "",
                        "SourceID"});
            table17.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table17.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 273
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table17, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T25_Mark not answered and clear table questions in Form1")]
        public virtual void T25_MarkNotAnsweredAndClearTableQuestionsInForm1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T25_Mark not answered and clear table questions in Form1", null, ((string[])(null)));
#line 283
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 284
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 285
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 286
 testRunner.And("I expand row \"2\" of table \"Sample Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 287
 testRunner.And("I click \"icon_mna_disabled.png\" icon of a question \"Drug Name:\" of table \"Sample " +
                    "Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 288
 testRunner.And("I enter comments \"Marking not answered for Q7.2.1\" in MarkItemDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 289
 testRunner.And("I click ok button in MarkItemDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 290
 testRunner.And("I clear question \"Start Date:\" of table \"Sample Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 291
 testRunner.And("I enter notes \"Clearing item for Q7.2.3\" in ClearItemModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 292
 testRunner.And("I click ok button in ClearItemModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 293
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Sample Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 294
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 295
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T26_Verify the XML Data evented out for MNA and clearing table questions from Dat" +
            "alabs UI")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.4.2,3.1.4.3")]
        public virtual void T26_VerifyTheXMLDataEventedOutForMNAAndClearingTableQuestionsFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T26_Verify the XML Data evented out for MNA and clearing table questions from Dat" +
                    "alabs UI", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.4.2,3.1.4.3"});
#line 298
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 299
 testRunner.Given(@"I save the Event XML data in ""MNAClearItemTableQuestionsActual1.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%ItemData ItemOID=""T_Text1"" TransactionType=""Update"" Value=""""%<ReasonForChange>Marked Not Answered</ReasonForChange>%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 300
 testRunner.And("I have the XML file \"MNAClearItemTableQuestionsExpected1.xml\" available in the pr" +
                    "oject folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 301
 testRunner.And("I have the XML file \"MNAClearItemTableQuestionsActual1.xml\" available in the Test" +
                    " XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table18.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table18.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table18.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table18.AddRow(new string[] {
                        "",
                        "FileOID"});
            table18.AddRow(new string[] {
                        "",
                        "SourceID"});
            table18.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table18.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 302
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table18, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T27_Delete table row question #1 from Form1")]
        public virtual void T27_DeleteTableRowQuestion1FromForm1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T27_Delete table row question #1 from Form1", null, ((string[])(null)));
#line 312
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 313
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 314
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 315
 testRunner.And("I expand row \"1\" of table \"Sample Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 316
 testRunner.And("I click table row button \"Delete Row\" of table \"Sample Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 317
 testRunner.And("I select reason for change \"SEC\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 318
 testRunner.And("I enter additional notes \"Deleting Row#1\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 319
 testRunner.And("I click continue button in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 320
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 321
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 322
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T28_Verify the XML Data evented out for deleting table row questions from Datalab" +
            "s UI")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.4.1,3.1.4.4,3.1.4.6")]
        public virtual void T28_VerifyTheXMLDataEventedOutForDeletingTableRowQuestionsFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T28_Verify the XML Data evented out for deleting table row questions from Datalab" +
                    "s UI", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.4.1,3.1.4.4,3.1.4.6"});
#line 325
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 326
 testRunner.Given(@"I save the Event XML data in ""DeleteTableRowActual1.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%<ReasonForChange>Row # 1: Deleted (SEC)</ReasonForChange>%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 327
 testRunner.And("I have the XML file \"DeleteTableRowExpected1.xml\" available in the project folder" +
                    ".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 328
 testRunner.And("I have the XML file \"DeleteTableRowActual1.xml\" available in the Result XML Files" +
                    " folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table19.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table19.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table19.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table19.AddRow(new string[] {
                        "",
                        "FileOID"});
            table19.AddRow(new string[] {
                        "",
                        "SourceID"});
            table19.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table19.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 329
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table19, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T29_Restore the table row question #1 from Form1")]
        public virtual void T29_RestoreTheTableRowQuestion1FromForm1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T29_Restore the table row question #1 from Form1", null, ((string[])(null)));
#line 339
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 340
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 341
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 342
 testRunner.And("I expand row \"1\" of table \"Sample Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 343
 testRunner.And("I click table row button \"Restore Row\" of table \"Sample Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 344
 testRunner.And("I select reason for change \"SEC\" in RestoreTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 345
 testRunner.And("I enter additional notes \"Restoring Row#1\" in RestoreTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 346
 testRunner.And("I click continue button in RestoreTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 347
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 348
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 349
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T30_Verify the XML Data evented out for Restore table row questions from Datalabs" +
            " UI")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.4.1,3.1.4.4,3.1.4.6")]
        public virtual void T30_VerifyTheXMLDataEventedOutForRestoreTableRowQuestionsFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T30_Verify the XML Data evented out for Restore table row questions from Datalabs" +
                    " UI", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.4.1,3.1.4.4,3.1.4.6"});
#line 352
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 353
 testRunner.Given(@"I save the Event XML data in ""RestoreTableRowActual1.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%<ReasonForChange>Row # 1: Deleted (SEC)</ReasonForChange>%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 354
 testRunner.And("I have the XML file \"RestoreTableRowExpected1.xml\" available in the project folde" +
                    "r.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 355
 testRunner.And("I have the XML file \"RestoreTableRowActual1.xml\" available in the Result XML File" +
                    "s folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table20.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table20.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table20.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table20.AddRow(new string[] {
                        "",
                        "FileOID"});
            table20.AddRow(new string[] {
                        "",
                        "SourceID"});
            table20.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table20.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 356
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table20, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T31_Select Visit (Week 5) - Form1 and Submit the form")]
        public virtual void T31_SelectVisitWeek5_Form1AndSubmitTheForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T31_Select Visit (Week 5) - Form1 and Submit the form", null, ((string[])(null)));
#line 366
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 367
 testRunner.Given("I expand \"Visit (Week 5)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 368
 testRunner.When("I select \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table21.AddRow(new string[] {
                        "Sample text question:",
                        "Text",
                        "Textbox"});
            table21.AddRow(new string[] {
                        "Sample select question:",
                        "Yes",
                        "Listbox"});
            table21.AddRow(new string[] {
                        "Sample radio question:",
                        "Yes",
                        "RadioButton"});
            table21.AddRow(new string[] {
                        "Sample integer question:",
                        "5",
                        "Textbox"});
            table21.AddRow(new string[] {
                        "Sample float question:",
                        "16.66",
                        "Textbox"});
            table21.AddRow(new string[] {
                        "Sample date question:",
                        "09/04/1992",
                        "Textbox"});
#line 369
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table21, "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table22.AddRow(new string[] {
                        "Yes",
                        "1",
                        "Drug Name:",
                        "DrugName",
                        "TextBox",
                        ""});
            table22.AddRow(new string[] {
                        "No",
                        "1",
                        "Condition:",
                        "Condition",
                        "TextBox",
                        ""});
            table22.AddRow(new string[] {
                        "No",
                        "1",
                        "Start Date:",
                        "09/04/1992",
                        "TextBox",
                        ""});
            table22.AddRow(new string[] {
                        "No",
                        "1",
                        "Stop Date:",
                        "09/04/1992",
                        "TextBox",
                        "Save & Close Row"});
#line 377
 testRunner.And("I enter below \"Sample Table:\" table questions data in the CRF.", ((string)(null)), table22, "And ");
#line 383
 testRunner.And("I select \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 384
 testRunner.And("I click Continue button of Modal \"Queries Result\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 385
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T32_Verify the XML Data evented out for Item update Form Fully Submitted with DCF" +
            "s from Datalabs UI")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.4.2,3.1.4.3")]
        public virtual void T32_VerifyTheXMLDataEventedOutForItemUpdateFormFullySubmittedWithDCFsFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T32_Verify the XML Data evented out for Item update Form Fully Submitted with DCF" +
                    "s from Datalabs UI", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.4.2,3.1.4.3"});
#line 387
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 388
 testRunner.Given(@"I save the Event XML data in ""ItemUpdateFullySubmitWithDCFActual1.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%ItemOID=""Integer"" TransactionType=""Insert"" Value=""5""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 389
 testRunner.And("I have the XML file \"ItemUpdateFullySubmitWithDCFExpected1.xml\" available in the " +
                    "project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 390
 testRunner.And("I have the XML file \"ItemUpdateFullySubmitWithDCFActual1.xml\" available in the Re" +
                    "sult XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table23.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table23.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table23.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table23.AddRow(new string[] {
                        "",
                        "FileOID"});
            table23.AddRow(new string[] {
                        "",
                        "SourceID"});
            table23.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table23.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 391
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table23, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T33_Flag on for the Flat Question 3 and 4 and Sign Casebook for the Form1")]
        public virtual void T33_FlagOnForTheFlatQuestion3And4AndSignCasebookForTheForm1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T33_Flag on for the Flat Question 3 and 4 and Sign Casebook for the Form1", null, ((string[])(null)));
#line 401
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 402
 testRunner.Given("I expand \"Visit (Week 5)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "SD-Verify",
                        "M-Review",
                        "D-Review"});
            table24.AddRow(new string[] {
                        "Sample radio question:",
                        "",
                        "On",
                        ""});
            table24.AddRow(new string[] {
                        "Sample integer question:",
                        "On",
                        "",
                        ""});
#line 403
 testRunner.When("I set flag for below flat questions data in the CRFs.", ((string)(null)), table24, "When ");
#line 407
 testRunner.And("I click breadcrumb \"01-PAT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 408
 testRunner.And("I click ActionPalette Item \"Request Signature\" in \"PatientPortalActions\" ActionPa" +
                    "lette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName"});
            table25.AddRow(new string[] {
                        "Visit (Week 5)",
                        "Form1"});
#line 409
 testRunner.And("I select Request checkbox for below forms in RequestSignaturePage", ((string)(null)), table25, "And ");
#line 412
 testRunner.And("I click on Submit button in RequestSignaturePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 413
 testRunner.And("I click ActionPalette Item \"Sign Casebook\" in \"PatientPortalActions\" ActionPalett" +
                    "e", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName",
                        "Radiobutton"});
            table26.AddRow(new string[] {
                        "Visit (Week 5)",
                        "Form1",
                        "Accept"});
#line 414
 testRunner.And("I select radio button for below forms in SignCasebookPage", ((string)(null)), table26, "And ");
#line 417
 testRunner.And("I given username as \"testadmin\" in SignCasebookPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 418
 testRunner.And("I given password as \"Datalabs1234\" in SignCasebookPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 419
 testRunner.And("I click on Submit button in SignCasebbokPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 420
 testRunner.Then("I see success message \"CRFs for Casebook Saved Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T34_Select Reset CRF - Visit (Week 5) - Form1")]
        public virtual void T34_SelectResetCRF_VisitWeek5_Form1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T34_Select Reset CRF - Visit (Week 5) - Form1", null, ((string[])(null)));
#line 422
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 423
 testRunner.Given("I expand \"Visit (Week 5)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 424
 testRunner.When("I click ActionPalette Item \"Reset CRF\" in \"CRFAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 425
 testRunner.And("I click Yes button in ResetCRFModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 426
 testRunner.And("I enter reason \"Reset CRF Testing\" in ResetCRFModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 427
    testRunner.And("I click Continue button in ResetCRFModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 428
    testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table27.AddRow(new string[] {
                        "CRF Reset - Visit (Week 5)/Form1 for patient 01-PAT - COMPLETE. View Summary."});
#line 429
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table27, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T35_Verify the XML Data evented out when Form is reset from Datalabs UI")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.4.1,3.1.4.2,3.1.4.3")]
        public virtual void T35_VerifyTheXMLDataEventedOutWhenFormIsResetFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T35_Verify the XML Data evented out when Form is reset from Datalabs UI", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.4.1,3.1.4.2,3.1.4.3"});
#line 434
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 435
 testRunner.Given("I save the Event XML data in \"CRFResetItemUpdateActual1.xml\" file by executing th" +
                    "e query \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = " +
                    "8 and XmlMessage like \'%CRF [Reset]%\' order by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 436
 testRunner.And("I have the XML file \"CRFResetItemUpdateExpected1.xml\" available in the project fo" +
                    "lder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 437
 testRunner.And("I have the XML file \"CRFResetItemUpdateActual1.xml\" available in the Result XML F" +
                    "iles folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table28.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table28.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table28.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table28.AddRow(new string[] {
                        "",
                        "FileOID"});
            table28.AddRow(new string[] {
                        "",
                        "SourceID"});
            table28.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table28.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 438
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table28, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T36_Update the Form with CDISC WebService - ConsumeODM1_StrTransactional")]
        public virtual void T36_UpdateTheFormWithCDISCWebService_ConsumeODM1_StrTransactional()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T36_Update the Form with CDISC WebService - ConsumeODM1_StrTransactional", null, ((string[])(null)));
#line 448
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "TransactionTypeData",
                        "AddNewPatientsData",
                        "ODMDATA"});
            table29.AddRow(new string[] {
                        "Legacy",
                        "true",
                        "ODMUpdateWeekCommonForm1.xml"});
#line 449
 testRunner.When("I add item data using ConsumeODMStrTransactional webservice with below data and o" +
                    "dmfile.", ((string)(null)), table29, "When ");
#line 452
 testRunner.Then("The response should contain success status code as \"200\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T37_Verify the XML Data evented out when an Item is updated from CDISC and DCF is" +
            " created for an Item through CDISC.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.4.1,3.1.4.2,3.1.4.3")]
        public virtual void T37_VerifyTheXMLDataEventedOutWhenAnItemIsUpdatedFromCDISCAndDCFIsCreatedForAnItemThroughCDISC_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T37_Verify the XML Data evented out when an Item is updated from CDISC and DCF is" +
                    " created for an Item through CDISC.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.4.1,3.1.4.2,3.1.4.3"});
#line 454
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 455
 testRunner.Given(@"I save the Event XML data in ""CDISCItemUpdateAndDCFCreatedActual1.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%SubjectKey=""72BC3B08-1701-45A3-AD42-9787C9D86786%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 456
 testRunner.And("I have the XML file \"CDISCItemUpdateAndDCFCreatedExpected1.xml\" available in the " +
                    "project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 457
 testRunner.And("I have the XML file \"CDISCItemUpdateAndDCFCreatedActual1.xml\" available in the Re" +
                    "sult XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table30.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table30.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table30.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table30.AddRow(new string[] {
                        "",
                        "FileOID"});
            table30.AddRow(new string[] {
                        "",
                        "SourceID"});
            table30.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table30.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 458
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table30, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T38_Update Enrolled form with new Enroll ID")]
        public virtual void T38_UpdateEnrolledFormWithNewEnrollID()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T38_Update Enrolled form with new Enroll ID", null, ((string[])(null)));
#line 468
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 469
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 470
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 471
 testRunner.And("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 472
 testRunner.And("I expand \"Common\" to select and open \"Enrolled\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 473
 testRunner.When("I click \"Checkout\" button on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AnswerFieldType"});
            table31.AddRow(new string[] {
                        "Enroll ID:",
                        "02",
                        "03",
                        "SEC",
                        "TextBox"});
#line 474
 testRunner.And("I enter below data for Flat questions in CRF.", ((string)(null)), table31, "And ");
#line 477
 testRunner.And("I click \"Save & Close\" button on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 478
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T39_Verify the Item Update is evented out when Enrolled form is updated")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.4.1,3.1.4.2,3.1.4.3")]
        public virtual void T39_VerifyTheItemUpdateIsEventedOutWhenEnrolledFormIsUpdated()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T39_Verify the Item Update is evented out when Enrolled form is updated", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.4.1,3.1.4.2,3.1.4.3"});
#line 481
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 482
 testRunner.Given("I save the Event XML data in \"StatusFormItemUpdateActual1.xml\" file by executing " +
                    "the query \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey " +
                    "= 8 and XmlMessage like \'%FormData FormOID=\"Enroll\"%\' order by OdmSubscriberDeta" +
                    "ilKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 483
 testRunner.And("I have the XML file \"StatusFormItemUpdateExpected1.xml\" available in the project " +
                    "folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 484
 testRunner.And("I have the XML file \"StatusFormItemUpdateActual1.xml\" available in the Result XML" +
                    " Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table32.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table32.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table32.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table32.AddRow(new string[] {
                        "",
                        "FileOID"});
            table32.AddRow(new string[] {
                        "",
                        "SourceID"});
            table32.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table32.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 485
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table32, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

