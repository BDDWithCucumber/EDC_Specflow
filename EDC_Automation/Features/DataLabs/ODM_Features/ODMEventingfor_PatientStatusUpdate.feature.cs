// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.ODM_Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DataLabs_V5.7.0_ODM Eventing for PatientStatusUpdate")]
    public partial class DataLabs_V5_7_0_ODMEventingForPatientStatusUpdateFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ODMEventingfor_PatientStatusUpdate.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DataLabs_V5.7.0_ODM Eventing for PatientStatusUpdate", @"Test Summary:
1) Verification of ODM eventing xml for Enrolled patient status.
2) Verification of ODM eventing xml for Discontinued patient status.
3) Verification of ODM eventing xml for Completed patient status.
4) Verification of ODM eventing xml for Failed patient status.
5) Verification of ODM eventing xml for patient status override (Discontinued to Enrolled).
6) Verification of ODM eventing xml for patient status override (Completed to Enrolled).
7) Verification of ODM eventing xml for patient status override (Enrolled to Screened).
8) Verification of ODM eventing xml for patient status override (Failed to Screened).
9) Verification of unpublished events and forms as part of patient status override eventing xml.
10) Verification of derived enrolled id in Enrolled status xml.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T01_Login to Datalabs")]
        public virtual void T01_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T01_Login to Datalabs", null, ((string[])(null)));
#line 14
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 15
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 16
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T02_Delete the current study")]
        public virtual void T02_DeleteTheCurrentStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T02_Delete the current study", null, ((string[])(null)));
#line 18
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 19
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T03_Publish the study")]
        public virtual void T03_PublishTheStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T03_Publish the study", null, ((string[])(null)));
#line 22
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 23
 testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 24
 testRunner.And("I upload a study \"Test4500_ODM_Eventing_Base.Zip\" with study label \"Test4500\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.Then("I see study label \"Test4500\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T04_Add Site 01-Site")]
        public virtual void T04_AddSite01_Site()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T04_Add Site 01-Site", null, ((string[])(null)));
#line 27
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 28
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 29
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteId",
                        "SiteName",
                        "Address1",
                        "Address2",
                        "Address3",
                        "Address4",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "SiteStatus",
                        "DCFWorkflow",
                        "ExternalSource",
                        "ExternalId"});
            table1.AddRow(new string[] {
                        "01",
                        "Site",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        "-"});
#line 30
 testRunner.And("I enter sites details and Save", ((string)(null)), table1, "And ");
#line 33
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.And("I click breadcrumb \"Site Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T05_Navigate to the Edit Preferences page and set the Endpoint URL")]
        public virtual void T05_NavigateToTheEditPreferencesPageAndSetTheEndpointURL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T05_Navigate to the Edit Preferences page and set the Endpoint URL", null, ((string[])(null)));
#line 38
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 39
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 40
 testRunner.When("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 41
 testRunner.And("I click ActionPalette Item \"Edit Preferences\" in \"StudyResetAction\" ActionPalette" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.And("I open tab \"Patient Data Eventing\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.And("I update the endpoint URL under Patient Data Eventing tab.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.And("I click \"Save\" button on the Edit Preferences page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 45
 testRunner.Then("I verify the success message displayed as \"Edit Preferences Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T06_Add patient 01-PAT from Datalabs UI")]
        public virtual void T06_AddPatient01_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T06_Add patient 01-PAT from Datalabs UI", null, ((string[])(null)));
#line 47
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 48
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 49
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table2.AddRow(new string[] {
                        "01",
                        "PAT",
                        "06/13/2018"});
#line 50
 testRunner.When("I add patient with below details.", ((string)(null)), table2, "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table3.AddRow(new string[] {
                        "01-PAT"});
#line 53
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T07_Select and enroll patient 01-PAT.")]
        public virtual void T07_SelectAndEnrollPatient01_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T07_Select and enroll patient 01-PAT.", null, ((string[])(null)));
#line 58
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 59
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 60
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 61
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table4.AddRow(new string[] {
                        "01",
                        "06/13/2018",
                        "Yes"});
#line 62
 testRunner.When("I enroll the patient \"01-PAT\" with below data.", ((string)(null)), table4, "When ");
#line 65
 testRunner.Then("I see patient \"01-PAT\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T08_Verify the XML Data evented out for the Enrolled Patient from Datalabs UI")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.3")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T08_VerifyTheXMLDataEventedOutForTheEnrolledPatientFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T08_Verify the XML Data evented out for the Enrolled Patient from Datalabs UI", null, new string[] {
                        "ReqID:3.1.2.3",
                        "ObjectiveEvidence"});
#line 68
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 69
 testRunner.Given(@"I save the Event XML data in ""EnrollPatientFromUIActual.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 3 and XmlMessage like '%ItemData ItemOID=""ENRLID"" TransactionType=""Insert"" Value=""01""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 70
 testRunner.And("I have the XML file \"EnrollPatientFromUIExpected.xml\" available in the project fo" +
                    "lder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
 testRunner.And("I have the XML file \"EnrollPatientFromUIActual.xml\" available in the Test XML Fil" +
                    "es folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table5.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table5.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table5.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table5.AddRow(new string[] {
                        "",
                        "FileOID"});
            table5.AddRow(new string[] {
                        "",
                        "SourceID"});
            table5.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 72
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T09_Discontinue the patient 01-PAT")]
        public virtual void T09_DiscontinueThePatient01_PAT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T09_Discontinue the patient 01-PAT", null, ((string[])(null)));
#line 82
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 83
 testRunner.When("I click ActionPalette Item \"Discontinue Patient\" in \"PatientPortalActions\" Action" +
                    "Palette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table6.AddRow(new string[] {
                        "Discontinued Date:",
                        "06/24/2018",
                        "TextBox"});
#line 84
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table6, "And ");
#line 87
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
 testRunner.And("I click on \"Save & Close\" button on \"\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T10_Verify the XML Data evented out for the Discontinued Patient from Datalabs UI" +
            "")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.3")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T10_VerifyTheXMLDataEventedOutForTheDiscontinuedPatientFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T10_Verify the XML Data evented out for the Discontinued Patient from Datalabs UI" +
                    "", null, new string[] {
                        "ReqID:3.1.2.3",
                        "ObjectiveEvidence"});
#line 92
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 93
 testRunner.Given(@"I save the Event XML data in ""DiscontinuePatientFromUIActual.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 3 and XmlMessage like '%ItemData ItemOID=""DISCDATE"" TransactionType=""Insert"" Value=""06/24/2018""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 94
 testRunner.And("I have the XML file \"DiscontinuePatientFromUIExpected.xml\" available in the proje" +
                    "ct folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 95
 testRunner.And("I have the XML file \"DiscontinuePatientFromUIActual.xml\" available in the Test XM" +
                    "L Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table7.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table7.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table7.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table7.AddRow(new string[] {
                        "",
                        "FileOID"});
            table7.AddRow(new string[] {
                        "",
                        "SourceID"});
            table7.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 96
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table7, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T11_Add patient 02-PAT from Datalabs UI")]
        public virtual void T11_AddPatient02_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T11_Add patient 02-PAT from Datalabs UI", null, ((string[])(null)));
#line 105
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 106
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 107
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table8.AddRow(new string[] {
                        "02",
                        "PAT",
                        "06/13/2018"});
#line 108
 testRunner.When("I add patient with below details.", ((string)(null)), table8, "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table9.AddRow(new string[] {
                        "02-PAT"});
#line 111
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T12_Select and enroll patient 02-PAT.")]
        public virtual void T12_SelectAndEnrollPatient02_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T12_Select and enroll patient 02-PAT.", null, ((string[])(null)));
#line 115
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 116
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 117
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 118
 testRunner.And("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table10.AddRow(new string[] {
                        "02",
                        "06/13/2018",
                        "Yes"});
#line 119
 testRunner.When("I enroll the patient \"02-PAT\" with below data.", ((string)(null)), table10, "When ");
#line 122
 testRunner.Then("I see patient \"02-PAT\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T13_Complete the patient 02-PAT")]
        public virtual void T13_CompleteThePatient02_PAT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T13_Complete the patient 02-PAT", null, ((string[])(null)));
#line 125
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 126
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 127
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.And("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.When("I click ActionPalette Item \"Complete Patient\" in \"PatientPortalActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table11.AddRow(new string[] {
                        "Completed Date:",
                        "06/25/2018",
                        "TextBox"});
#line 130
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table11, "And ");
#line 133
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 134
 testRunner.And("I click on \"Save & Close\" button on \"\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 135
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T14_Verify the XML Data evented out for the Completed Patient from Datalabs UI")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.3")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T14_VerifyTheXMLDataEventedOutForTheCompletedPatientFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T14_Verify the XML Data evented out for the Completed Patient from Datalabs UI", null, new string[] {
                        "ReqID:3.1.2.3",
                        "ObjectiveEvidence"});
#line 138
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 139
 testRunner.Given(@"I save the Event XML data in ""CompletePatientFromUIActual.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 3 and XmlMessage like '%ItemData ItemOID=""COMPDATE"" TransactionType=""Insert"" Value=""06/25/2018""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 140
 testRunner.And("I have the XML file \"CompletePatientFromUIExpected.xml\" available in the project " +
                    "folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 141
 testRunner.And("I have the XML file \"CompletePatientFromUIActual.xml\" available in the Test XML F" +
                    "iles folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table12.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table12.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table12.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table12.AddRow(new string[] {
                        "",
                        "FileOID"});
            table12.AddRow(new string[] {
                        "",
                        "SourceID"});
            table12.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 142
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T15_Add patient 03-PAT from Datalabs UI")]
        public virtual void T15_AddPatient03_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T15_Add patient 03-PAT from Datalabs UI", null, ((string[])(null)));
#line 151
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 152
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 153
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table13.AddRow(new string[] {
                        "03",
                        "PAT",
                        "06/13/2018"});
#line 154
 testRunner.When("I add patient with below details.", ((string)(null)), table13, "When ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table14.AddRow(new string[] {
                        "03-PAT"});
#line 157
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table14, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T16_Fail the patient 03-PAT")]
        public virtual void T16_FailThePatient03_PAT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T16_Fail the patient 03-PAT", null, ((string[])(null)));
#line 162
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 163
 testRunner.Given("I select the patient \"03-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 164
 testRunner.When("I click ActionPalette Item \"Fail Patient\" in \"PatientPortalActions\" ActionPalette" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table15.AddRow(new string[] {
                        "Failed Date:",
                        "06/26/2018",
                        "TextBox"});
#line 165
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table15, "And ");
#line 168
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
 testRunner.And("I click on \"Save & Close\" button on \"\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T17_Verify the XML Data evented out for the Failed Patient from Datalabs UI")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.3")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T17_VerifyTheXMLDataEventedOutForTheFailedPatientFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T17_Verify the XML Data evented out for the Failed Patient from Datalabs UI", null, new string[] {
                        "ReqID:3.1.2.3",
                        "ObjectiveEvidence"});
#line 173
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 174
 testRunner.Given(@"I save the Event XML data in ""FailPatientFromUIActual.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 3 and XmlMessage like '%ItemData ItemOID=""SCRNFAILDATE"" TransactionType=""Insert"" Value=""06/26/2018""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 175
 testRunner.And("I have the XML file \"FailPatientFromUIExpected.xml\" available in the project fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 176
 testRunner.And("I have the XML file \"FailPatientFromUIActual.xml\" available in the Test XML Files" +
                    " folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table16.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table16.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table16.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table16.AddRow(new string[] {
                        "",
                        "FileOID"});
            table16.AddRow(new string[] {
                        "",
                        "SourceID"});
            table16.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 177
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table16, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T18_Select 01-Site and a patient 01-PAT.")]
        public virtual void T18_Select01_SiteAndAPatient01_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T18_Select 01-Site and a patient 01-PAT.", null, ((string[])(null)));
#line 186
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 187
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 188
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 189
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 190
 testRunner.Then("I see Patient details page for \"01-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T19_Fill and save Discontinue Reason CRF from Discontinue event")]
        public virtual void T19_FillAndSaveDiscontinueReasonCRFFromDiscontinueEvent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T19_Fill and save Discontinue Reason CRF from Discontinue event", null, ((string[])(null)));
#line 192
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 193
 testRunner.Given("I expand \"Discontinue\" to select and open \"Discontinue Reason\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 194
 testRunner.When("I click \"Checkout\" button on \"Discontinue Reason\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table17.AddRow(new string[] {
                        "Discontinue Reason:",
                        "Safety",
                        "TextBox"});
#line 195
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table17, "And ");
#line 198
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 199
 testRunner.And("I click on \"Save & Close\" button on \"Discontinue Reason\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T20_Override the patient status from Discontinue to Enrolled for patient 01-PAT")]
        public virtual void T20_OverrideThePatientStatusFromDiscontinueToEnrolledForPatient01_PAT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T20_Override the patient status from Discontinue to Enrolled for patient 01-PAT", null, ((string[])(null)));
#line 203
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 204
testRunner.Given("I click ActionPalette Item \"Patient Status Override\" in \"PatientPortalActions\" Ac" +
                    "tionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 205
 testRunner.And("I select change to \"Enrolled\" in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 206
 testRunner.And("I enter reason \"Status override from Discontinued to Enrolled\" for patient status" +
                    " change in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 207
 testRunner.And("I Click save button in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 208
 testRunner.Then("I see success message \"Status Override Changed Successfully.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T21_Verify the XML Data evented out for the Enrolled status due to status overrid" +
            "e.")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.3,3.1.2.4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T21_VerifyTheXMLDataEventedOutForTheEnrolledStatusDueToStatusOverride_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T21_Verify the XML Data evented out for the Enrolled status due to status overrid" +
                    "e.", null, new string[] {
                        "ReqID:3.1.2.3,3.1.2.4",
                        "ObjectiveEvidence"});
#line 211
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 212
 testRunner.Given(@"I save the Event XML data in ""DiscontinuePatientOverrideActual.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 3 and XmlMessage like '%Status override from Discontinued to Enrolled%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 213
 testRunner.And("I have the XML file \"DiscontinuePatientOverrideExpected.xml\" available in the pro" +
                    "ject folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 214
 testRunner.And("I have the XML file \"DiscontinuePatientOverrideActual.xml\" available in the Test " +
                    "XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table18.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table18.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table18.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table18.AddRow(new string[] {
                        "",
                        "FileOID"});
            table18.AddRow(new string[] {
                        "",
                        "SourceID"});
            table18.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 215
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table18, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T22_Select 01-Site and a patient 02-PAT.")]
        public virtual void T22_Select01_SiteAndAPatient02_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T22_Select 01-Site and a patient 02-PAT.", null, ((string[])(null)));
#line 224
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 225
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 226
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 227
 testRunner.When("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 228
 testRunner.Then("I see Patient details page for \"02-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T23_Fill and save FollowUp CRF from Complete event")]
        public virtual void T23_FillAndSaveFollowUpCRFFromCompleteEvent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T23_Fill and save FollowUp CRF from Complete event", null, ((string[])(null)));
#line 230
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 231
 testRunner.Given("I expand \"Complete\" to select and open \"FollowUp\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 232
 testRunner.When("I click \"Checkout\" button on \"FollowUp\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table19.AddRow(new string[] {
                        "Follow up comments:",
                        "Completed",
                        "TextBox"});
#line 233
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table19, "And ");
#line 236
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 237
 testRunner.And("I click on \"Save & Close\" button on \"FollowUp\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 238
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T24_Override the patient status from Complete to Enrolled for patient 02-PAT")]
        public virtual void T24_OverrideThePatientStatusFromCompleteToEnrolledForPatient02_PAT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T24_Override the patient status from Complete to Enrolled for patient 02-PAT", null, ((string[])(null)));
#line 241
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 242
 testRunner.Given("I click ActionPalette Item \"Patient Status Override\" in \"PatientPortalActions\" Ac" +
                    "tionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 243
 testRunner.And("I select change to \"Enrolled\" in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 244
 testRunner.And("I enter reason \"Status override from Completed to Enrolled\" for patient status ch" +
                    "ange in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 245
 testRunner.And("I Click save button in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 246
 testRunner.Then("I see success message \"Status Override Changed Successfully.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T25_Verify the XML Data evented out for the Enrolled status due to status overrid" +
            "e.")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.3,3.1.2.4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T25_VerifyTheXMLDataEventedOutForTheEnrolledStatusDueToStatusOverride_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T25_Verify the XML Data evented out for the Enrolled status due to status overrid" +
                    "e.", null, new string[] {
                        "ReqID:3.1.2.3,3.1.2.4",
                        "ObjectiveEvidence"});
#line 249
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 250
 testRunner.Given(@"I save the Event XML data in ""CompletePatientOverrideActual.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 3 and XmlMessage like '%Status override from Completed to Enrolled%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 251
 testRunner.And("I have the XML file \"CompletePatientOverrideExpected.xml\" available in the projec" +
                    "t folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 252
 testRunner.And("I have the XML file \"CompletePatientOverrideActual.xml\" available in the Test XML" +
                    " Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table20.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table20.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table20.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table20.AddRow(new string[] {
                        "",
                        "FileOID"});
            table20.AddRow(new string[] {
                        "",
                        "SourceID"});
            table20.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 253
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table20, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T26_Override the patient status from Enrolled to Screened for patient 01-PAT")]
        public virtual void T26_OverrideThePatientStatusFromEnrolledToScreenedForPatient01_PAT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T26_Override the patient status from Enrolled to Screened for patient 01-PAT", null, ((string[])(null)));
#line 263
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 264
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 265
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 266
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 267
 testRunner.Given("I click ActionPalette Item \"Patient Status Override\" in \"PatientPortalActions\" Ac" +
                    "tionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 268
 testRunner.And("I select change to \"Screened\" in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 269
 testRunner.And("I enter reason \"Status override from Enrolled to Screened\" for patient status cha" +
                    "nge in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 270
 testRunner.And("I Click save button in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 271
 testRunner.Then("I see success message \"Status Override Changed Successfully.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T27_Verify the XML Data evented out for the Screened status due to status overrid" +
            "e.")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.3,3.1.2.4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T27_VerifyTheXMLDataEventedOutForTheScreenedStatusDueToStatusOverride_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T27_Verify the XML Data evented out for the Screened status due to status overrid" +
                    "e.", null, new string[] {
                        "ReqID:3.1.2.3,3.1.2.4",
                        "ObjectiveEvidence"});
#line 274
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 275
 testRunner.Given(@"I save the Event XML data in ""EnrollPatientOverride01PATActual.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 3 and XmlMessage like '%Status override from Enrolled to Screened%' and XmlMessage like '%' +(Select SubjectKey from Patient where PatientIdentity='01-PAT')+ '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 276
 testRunner.And("I have the XML file \"EnrollPatientOverride01PATExpected.xml\" available in the pro" +
                    "ject folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 277
 testRunner.And("I have the XML file \"EnrollPatientOverride01PATActual.xml\" available in the Test " +
                    "XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table21.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table21.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table21.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table21.AddRow(new string[] {
                        "",
                        "FileOID"});
            table21.AddRow(new string[] {
                        "",
                        "SourceID"});
            table21.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 278
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table21, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T28_Override the patient status from Enrolled to Screened for patient 02-PAT")]
        public virtual void T28_OverrideThePatientStatusFromEnrolledToScreenedForPatient02_PAT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T28_Override the patient status from Enrolled to Screened for patient 02-PAT", null, ((string[])(null)));
#line 287
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 288
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 289
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 290
 testRunner.When("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 291
 testRunner.Given("I click ActionPalette Item \"Patient Status Override\" in \"PatientPortalActions\" Ac" +
                    "tionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 292
 testRunner.And("I select change to \"Screened\" in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 293
 testRunner.And("I enter reason \"Status override from Enrolled to Screened\" for patient status cha" +
                    "nge in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 294
 testRunner.And("I Click save button in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 295
 testRunner.Then("I see success message \"Status Override Changed Successfully.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T29_Verify the XML Data evented out for the Screened status due to status overrid" +
            "e.")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.3,3.1.2.4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T29_VerifyTheXMLDataEventedOutForTheScreenedStatusDueToStatusOverride_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T29_Verify the XML Data evented out for the Screened status due to status overrid" +
                    "e.", null, new string[] {
                        "ReqID:3.1.2.3,3.1.2.4",
                        "ObjectiveEvidence"});
#line 298
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 299
 testRunner.Given(@"I save the Event XML data in ""EnrollPatientOverride02PATActual.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 3 and XmlMessage like '%Status override from Enrolled to Screened%' and XmlMessage like '%' +(Select SubjectKey from Patient where PatientIdentity='02-PAT')+ '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 300
 testRunner.And("I have the XML file \"EnrollPatientOverride02PATExpected.xml\" available in the pro" +
                    "ject folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 301
 testRunner.And("I have the XML file \"EnrollPatientOverride02PATActual.xml\" available in the Test " +
                    "XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table22.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table22.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table22.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table22.AddRow(new string[] {
                        "",
                        "FileOID"});
            table22.AddRow(new string[] {
                        "",
                        "SourceID"});
            table22.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 302
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table22, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T30_Select 01-Site and a patient 03-PAT.")]
        public virtual void T30_Select01_SiteAndAPatient03_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T30_Select 01-Site and a patient 03-PAT.", null, ((string[])(null)));
#line 311
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 312
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 313
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 314
 testRunner.When("I select the patient \"03-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 315
 testRunner.Then("I see Patient details page for \"03-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T31_Fill and save FollowUp CRF from Fail event")]
        public virtual void T31_FillAndSaveFollowUpCRFFromFailEvent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T31_Fill and save FollowUp CRF from Fail event", null, ((string[])(null)));
#line 317
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 318
 testRunner.Given("I expand \"Fail\" to select and open \"Fail Reason\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 319
 testRunner.When("I click \"Checkout\" button on \"Fail Reason\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table23.AddRow(new string[] {
                        "Reason for fail?",
                        "Illness",
                        "TextBox"});
#line 320
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table23, "And ");
#line 323
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 324
 testRunner.And("I click on \"Save & Close\" button on \"Fail Reason\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 325
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T32_Override the patient status from Failed to Screened for patient 03-PAT")]
        public virtual void T32_OverrideThePatientStatusFromFailedToScreenedForPatient03_PAT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T32_Override the patient status from Failed to Screened for patient 03-PAT", null, ((string[])(null)));
#line 328
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 329
 testRunner.Given("I click ActionPalette Item \"Patient Status Override\" in \"PatientPortalActions\" Ac" +
                    "tionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 330
 testRunner.And("I select change to \"Screened\" in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 331
 testRunner.And("I enter reason \"Status override from Failed to Screened\" for patient status chang" +
                    "e in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 332
 testRunner.And("I Click save button in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 333
 testRunner.Then("I see success message \"Status Override Changed Successfully.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T33_Verify the XML Data evented out for the Screened status due to status overrid" +
            "e.")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.3,3.1.2.4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T33_VerifyTheXMLDataEventedOutForTheScreenedStatusDueToStatusOverride_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T33_Verify the XML Data evented out for the Screened status due to status overrid" +
                    "e.", null, new string[] {
                        "ReqID:3.1.2.3,3.1.2.4",
                        "ObjectiveEvidence"});
#line 336
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 337
 testRunner.Given(@"I save the Event XML data in ""FailPatientOverrideActual.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 3 and XmlMessage like '%Status override from Failed to Screened%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 338
 testRunner.And("I have the XML file \"FailPatientOverrideExpected.xml\" available in the project fo" +
                    "lder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 339
 testRunner.And("I have the XML file \"FailPatientOverrideActual.xml\" available in the Test XML Fil" +
                    "es folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table24.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table24.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table24.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table24.AddRow(new string[] {
                        "",
                        "FileOID"});
            table24.AddRow(new string[] {
                        "",
                        "SourceID"});
            table24.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 340
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table24, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T34_Add patient 04-PAT from Datalabs UI")]
        public virtual void T34_AddPatient04_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T34_Add patient 04-PAT from Datalabs UI", null, ((string[])(null)));
#line 349
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 350
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 351
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table25.AddRow(new string[] {
                        "04",
                        "PAT",
                        "06/13/2018"});
#line 352
 testRunner.When("I add patient with below details.", ((string)(null)), table25, "When ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table26.AddRow(new string[] {
                        "04-PAT"});
#line 355
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table26, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T35_Select and enroll patient 04-PAT.")]
        public virtual void T35_SelectAndEnrollPatient04_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T35_Select and enroll patient 04-PAT.", null, ((string[])(null)));
#line 359
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 360
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 361
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 362
 testRunner.And("I select the patient \"04-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table27.AddRow(new string[] {
                        "04",
                        "06/13/2018",
                        "Yes"});
#line 363
 testRunner.When("I enroll the patient \"04-PAT\" with below data.", ((string)(null)), table27, "When ");
#line 366
 testRunner.Then("I see patient \"04-PAT\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T36_Select Form1 from Visit (Week 2) event and enter data in CRF.")]
        public virtual void T36_SelectForm1FromVisitWeek2EventAndEnterDataInCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T36_Select Form1 from Visit (Week 2) event and enter data in CRF.", null, ((string[])(null)));
#line 368
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 369
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 370
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table28.AddRow(new string[] {
                        "Sample text question:",
                        "Text",
                        "TextBox"});
            table28.AddRow(new string[] {
                        "Sample radio question:",
                        "No",
                        "Radio"});
#line 371
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table28, "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table29.AddRow(new string[] {
                        "Yes",
                        "1",
                        "Drug Name:",
                        "Test Drug",
                        "TextBox",
                        ""});
            table29.AddRow(new string[] {
                        "No",
                        "1",
                        "Condition:",
                        "Initial",
                        "TextBox",
                        ""});
            table29.AddRow(new string[] {
                        "No",
                        "1",
                        "Start Date:",
                        "01/01/2000",
                        "TextBox",
                        "Save & Close Row"});
            table29.AddRow(new string[] {
                        "Yes",
                        "2",
                        "Drug Name:",
                        "Test Drug 2",
                        "TextBox",
                        ""});
            table29.AddRow(new string[] {
                        "N0",
                        "2",
                        "Start Date:",
                        "01/01/2010",
                        "TextBox",
                        "Save & Close Row"});
#line 375
 testRunner.And("I enter below \"Sample Table:\" table questions data in the CRF.", ((string)(null)), table29, "And ");
#line 382
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 383
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 384
 testRunner.And("I click Continue button of Modal \"Queries Result\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 385
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T37_Select Autobuild Fixed 1 from Visit (Week 20) event and enter data in CRF.")]
        public virtual void T37_SelectAutobuildFixed1FromVisitWeek20EventAndEnterDataInCRF_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T37_Select Autobuild Fixed 1 from Visit (Week 20) event and enter data in CRF.", null, ((string[])(null)));
#line 387
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 388
 testRunner.Given("I expand \"Visit (Week 20)\" to select and open \"Autobuild Fixed 1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 389
 testRunner.When("I click \"Checkout\" button on \"Autobuild Fixed 1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table30.AddRow(new string[] {
                        "No",
                        "1",
                        "Gender question (male or female):",
                        "Male",
                        "ListBox",
                        ""});
            table30.AddRow(new string[] {
                        "No",
                        "1",
                        "Non-key sequence code list (inches or centimeters):",
                        "cm",
                        "Radio",
                        ""});
            table30.AddRow(new string[] {
                        "No",
                        "1",
                        "Float value: (Maxlength: 5 {Sent}, DataType {Sent}, MaxPrecision: 3 {Draft}",
                        "166.12",
                        "TextBox",
                        "Save & Close Row"});
            table30.AddRow(new string[] {
                        "No",
                        "3",
                        "Float value: (Maxlength: 5 {Sent}, DataType {Sent}, MaxPrecision: 3 {Draft}",
                        "166.12",
                        "TextBox",
                        "Save & Close Row"});
#line 390
 testRunner.And("I enter below \"First auto build table (max rows: 6, structure: fixed):\" autobuild" +
                    " table questions data in the CRF.", ((string)(null)), table30, "And ");
#line 396
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 397
 testRunner.And("I click on \"Save & Close\" button on \"Autobuild Fixed 1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 398
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T38_Override the patient status from Enrolled to Screened for patient 04-PAT")]
        public virtual void T38_OverrideThePatientStatusFromEnrolledToScreenedForPatient04_PAT()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T38_Override the patient status from Enrolled to Screened for patient 04-PAT", null, ((string[])(null)));
#line 401
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 402
 testRunner.Given("I click ActionPalette Item \"Patient Status Override\" in \"PatientPortalActions\" Ac" +
                    "tionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 403
 testRunner.And("I select change to \"Screened\" in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 404
 testRunner.And("I enter reason \"Status override from Enrolled to Screened\" for patient status cha" +
                    "nge in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 405
 testRunner.And("I Click save button in PatientStatusOverridePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 406
 testRunner.Then("I see success message \"Status Override Changed Successfully.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T39_Verify the XML Data evented out for the Screened status due to status overrid" +
            "e.")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.3,3.1.2.4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T39_VerifyTheXMLDataEventedOutForTheScreenedStatusDueToStatusOverride_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T39_Verify the XML Data evented out for the Screened status due to status overrid" +
                    "e.", null, new string[] {
                        "ReqID:3.1.2.3,3.1.2.4",
                        "ObjectiveEvidence"});
#line 409
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 410
 testRunner.Given(@"I save the Event XML data in ""EnrollPatientOverride04PATActual.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 3 and XmlMessage like '%Status override from Enrolled to Screened%' and XmlMessage like '%' +(Select SubjectKey from Patient where PatientIdentity='04-PAT')+ '%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 411
 testRunner.And("I have the XML file \"EnrollPatientOverride04PATExpected.xml\" available in the pro" +
                    "ject folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 412
 testRunner.And("I have the XML file \"EnrollPatientOverride04PATActual.xml\" available in the Test " +
                    "XML Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table31.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table31.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table31.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table31.AddRow(new string[] {
                        "",
                        "FileOID"});
            table31.AddRow(new string[] {
                        "",
                        "SourceID"});
            table31.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 413
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table31, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T40_Delete the current study")]
        public virtual void T40_DeleteTheCurrentStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T40_Delete the current study", null, ((string[])(null)));
#line 422
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 423
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 424
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T41_Publish the study")]
        public virtual void T41_PublishTheStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T41_Publish the study", null, ((string[])(null)));
#line 426
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 427
 testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 428
 testRunner.And("I upload a study \"Test4500_ODM_Eventing_DeriveEnrollID.Zip\" with study label \"Tes" +
                    "t4500\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 429
 testRunner.Then("I see study label \"Test4500\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T42_Add patient 04-PAT from Datalabs UI")]
        public virtual void T42_AddPatient04_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T42_Add patient 04-PAT from Datalabs UI", null, ((string[])(null)));
#line 431
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 432
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 433
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table32.AddRow(new string[] {
                        "05",
                        "PAT",
                        "06/13/2018"});
#line 434
 testRunner.When("I add patient with below details.", ((string)(null)), table32, "When ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table33.AddRow(new string[] {
                        "05-PAT"});
#line 437
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table33, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T43_Select and enroll patient 05-PAT.")]
        public virtual void T43_SelectAndEnrollPatient05_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T43_Select and enroll patient 05-PAT.", null, ((string[])(null)));
#line 442
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 443
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 444
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 445
 testRunner.And("I select the patient \"05-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table34.AddRow(new string[] {
                        "",
                        "06/13/2018",
                        "Yes"});
#line 446
 testRunner.When("I enroll the patient \"05-PAT\" with below data.", ((string)(null)), table34, "When ");
#line 449
 testRunner.Then("I see patient \"05-PAT\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T44_Verify the XML Data evented out for the Enrolled Patient from Datalabs UI")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.2.3")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T44_VerifyTheXMLDataEventedOutForTheEnrolledPatientFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T44_Verify the XML Data evented out for the Enrolled Patient from Datalabs UI", null, new string[] {
                        "ReqID:3.1.2.3",
                        "ObjectiveEvidence"});
#line 452
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 453
 testRunner.Given(@"I save the Event XML data in ""EnrollPatientFromUIActual2.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 3 and XmlMessage like '%ItemData ItemOID=""ENRLID"" TransactionType=""Insert"" Value=""05""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 454
 testRunner.And("I have the XML file \"EnrollPatientFromUIExpected2.xml\" available in the project f" +
                    "older.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 455
 testRunner.And("I have the XML file \"EnrollPatientFromUIActual2.xml\" available in the Test XML Fi" +
                    "les folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table35.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table35.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table35.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table35.AddRow(new string[] {
                        "",
                        "FileOID"});
            table35.AddRow(new string[] {
                        "",
                        "SourceID"});
            table35.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 456
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table35, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T45_Logout from Datalabs")]
        public virtual void T45_LogoutFromDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T45_Logout from Datalabs", null, ((string[])(null)));
#line 465
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 466
 testRunner.When("I clik logout of Datalabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 467
 testRunner.Then("I see login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

