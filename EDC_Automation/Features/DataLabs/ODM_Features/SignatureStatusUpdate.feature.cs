// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.ODM_Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DataLabs_V5.7.0_ODM Eventing for SignatureStatusUpdate")]
    public partial class DataLabs_V5_7_0_ODMEventingForSignatureStatusUpdateFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "SignatureStatusUpdate.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DataLabs_V5.7.0_ODM Eventing for SignatureStatusUpdate", @"Test Summary:
	1. Verification of ODM eventing for request signature.
	2. Verification of ODM eventing for cancel signature.
	3. Verification of ODM eventing for Signn signature.
	4. Verification of ODM eventing for Reject signature.
	5. Verification of ODM eventing for Off signature.
	6. Verification of ODM eventing for change signature.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T01_Login to Datalabs")]
        public virtual void T01_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T01_Login to Datalabs", null, ((string[])(null)));
#line 11
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 12
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 13
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T02_Delete the current study")]
        public virtual void T02_DeleteTheCurrentStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T02_Delete the current study", null, ((string[])(null)));
#line 15
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 16
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T03_Publish the study")]
        public virtual void T03_PublishTheStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T03_Publish the study", null, ((string[])(null)));
#line 19
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 20
 testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 21
 testRunner.And("I upload a study \"Test4500_QUER_Base study V1.zip\" with study label \"V1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 22
 testRunner.Then("I see study label \"Test4500\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T04_Add Site 01-Site")]
        public virtual void T04_AddSite01_Site()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T04_Add Site 01-Site", null, ((string[])(null)));
#line 24
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 25
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 26
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteId",
                        "SiteName",
                        "Address1",
                        "Address2",
                        "Address3",
                        "Address4",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "SiteStatus",
                        "DCFWorkflow",
                        "ExternalSource",
                        "ExternalId"});
            table1.AddRow(new string[] {
                        "01",
                        "Site",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        "-"});
#line 27
 testRunner.And("I enter sites details and Save", ((string)(null)), table1, "And ");
#line 30
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.And("I click breadcrumb \"Site Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T05_Navigate to the Edit Preferences page and set the CRF Default save to Complet" +
            "e and update the Endpoint URL")]
        public virtual void T05_NavigateToTheEditPreferencesPageAndSetTheCRFDefaultSaveToCompleteAndUpdateTheEndpointURL()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T05_Navigate to the Edit Preferences page and set the CRF Default save to Complet" +
                    "e and update the Endpoint URL", null, ((string[])(null)));
#line 35
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 36
 testRunner.When("I click breadcrumb \"Study Administration\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 37
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 38
 testRunner.And("I click ActionPalette Item \"Edit Preferences\" in \"StudyResetAction\" ActionPalette" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And("I open tab \"Forms\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.And("I select the \"Partial\" for Default Save: in StudyEditPreferencesFormsPage.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 41
 testRunner.And("I open tab \"patient data eventing\" in StudyEditPreferencesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 42
 testRunner.And("I update the endpoint URL under Patient Data Eventing tab.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 43
 testRunner.And("I click \"Save\" button on the Edit Preferences page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 44
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T06_Add patient 01-PAT from Datalabs UI")]
        public virtual void T06_AddPatient01_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T06_Add patient 01-PAT from Datalabs UI", null, ((string[])(null)));
#line 46
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 47
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 48
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table2.AddRow(new string[] {
                        "01",
                        "PAT",
                        "06/13/2018"});
#line 49
 testRunner.When("I add patient with below details.", ((string)(null)), table2, "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table3.AddRow(new string[] {
                        "01-PAT"});
#line 52
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T07_Select and enroll patient 01-PAT.")]
        public virtual void T07_SelectAndEnrollPatient01_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T07_Select and enroll patient 01-PAT.", null, ((string[])(null)));
#line 56
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 57
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 58
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 59
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table4.AddRow(new string[] {
                        "01",
                        "06/13/2018",
                        "Yes"});
#line 60
 testRunner.When("I enroll the patient \"01-PAT\" with below data.", ((string)(null)), table4, "When ");
#line 63
 testRunner.Then("I see patient \"01-PAT\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T08_Select a site and a patient.")]
        public virtual void T08_SelectASiteAndAPatient_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T08_Select a site and a patient.", null, ((string[])(null)));
#line 65
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 66
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 67
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 68
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 69
 testRunner.Then("I see Patient details page for \"01-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T09_Navigate to Patient and submit the form Form1 in visit (Week2)")]
        public virtual void T09_NavigateToPatientAndSubmitTheFormForm1InVisitWeek2()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T09_Navigate to Patient and submit the form Form1 in visit (Week2)", null, ((string[])(null)));
#line 71
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 72
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 73
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table5.AddRow(new string[] {
                        "Sample text question:",
                        "Text",
                        "TextBox"});
            table5.AddRow(new string[] {
                        "Sample select question:",
                        "No",
                        "ListBox"});
            table5.AddRow(new string[] {
                        "Sample radio question:",
                        "Yes",
                        "Radio"});
            table5.AddRow(new string[] {
                        "Sample integer question:",
                        "12",
                        "TextBox"});
            table5.AddRow(new string[] {
                        "Sample float question:",
                        "12.35",
                        "TextBox"});
#line 74
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table5, "And ");
#line 81
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T10_Request signature for form1 in visit Week2 event.")]
        public virtual void T10_RequestSignatureForForm1InVisitWeek2Event_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T10_Request signature for form1 in visit Week2 event.", null, ((string[])(null)));
#line 84
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 85
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 86
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 87
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 88
 testRunner.And("I click ActionPalette Item \"Request Signature\" in \"PatientPortalActions\" ActionPa" +
                    "lette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName"});
            table6.AddRow(new string[] {
                        "Visit (Week 2)",
                        "Form1"});
#line 89
 testRunner.And("I select Request checkbox for below forms in RequestSignaturePage", ((string)(null)), table6, "And ");
#line 92
 testRunner.And("I click on Submit button in RequestSignaturePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 93
 testRunner.Then("I see success message \"CRF for Signature Saved Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T11_Verify the XML file for request signature form in week2.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.3.5,3.1.3.6")]
        public virtual void T11_VerifyTheXMLFileForRequestSignatureFormInWeek2_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T11_Verify the XML file for request signature form in week2.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.3.5,3.1.3.6"});
#line 96
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 97
 testRunner.Given(@"I save the Event XML data in ""SignatureStatusUpdateActual1.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 10 and XmlMessage like '%StudyEventData StudyEventOID=""Visit02""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 98
 testRunner.And("I have the XML file \"SignatureStatusUpdateExpected1.xml\" available in the project" +
                    " folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 99
 testRunner.And("I have the XML file \"SignatureStatusUpdateActual1.xml\" available in the Test XML " +
                    "Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table7.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table7.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table7.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table7.AddRow(new string[] {
                        "",
                        "FileOID"});
            table7.AddRow(new string[] {
                        "",
                        "SourceID"});
            table7.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 100
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table7, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T12_Request signature for multiple forms in the same event.")]
        public virtual void T12_RequestSignatureForMultipleFormsInTheSameEvent_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T12_Request signature for multiple forms in the same event.", null, ((string[])(null)));
#line 109
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 110
 testRunner.When("I click ActionPalette Item \"Request Signature\" in \"PatientPortalActions\" ActionPa" +
                    "lette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName"});
            table8.AddRow(new string[] {
                        "Visit (Week 2)",
                        "Form 2"});
#line 111
 testRunner.And("I select Request checkbox for below forms in RequestSignaturePage", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName"});
            table9.AddRow(new string[] {
                        "Visit (Week 2)",
                        "Form 3"});
#line 114
 testRunner.And("I select Request checkbox for below forms in RequestSignaturePage", ((string)(null)), table9, "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName"});
            table10.AddRow(new string[] {
                        "Visit (Week 2)",
                        "Form 4"});
#line 117
 testRunner.And("I select Request checkbox for below forms in RequestSignaturePage", ((string)(null)), table10, "And ");
#line 120
 testRunner.And("I click on Submit button in RequestSignaturePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 121
 testRunner.Then("I see success message \"CRF for Signature Saved Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T13_Verify the XMl file for request signature for multipple forms in single event" +
            ".")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.3.5,3.1.3.6")]
        public virtual void T13_VerifyTheXMlFileForRequestSignatureForMultippleFormsInSingleEvent_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T13_Verify the XMl file for request signature for multipple forms in single event" +
                    ".", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.3.5,3.1.3.6"});
#line 124
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 125
 testRunner.Given(@"I save the Event XML data in ""SignatureStatusUpdateActual2.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 10 and XmlMessage like '%StudyEventData StudyEventOID=""Visit02""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 126
 testRunner.And("I have the XML file \"SignatureStatusUpdateExpected2.xml\" available in the project" +
                    " folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 127
 testRunner.And("I have the XML file \"SignatureStatusUpdateActual2.xml\" available in the Test XML " +
                    "Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table11.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table11.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table11.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table11.AddRow(new string[] {
                        "",
                        "FileOID"});
            table11.AddRow(new string[] {
                        "",
                        "SourceID"});
            table11.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 128
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table11, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T14_Request Signature for multiple forms in multiple events.")]
        public virtual void T14_RequestSignatureForMultipleFormsInMultipleEvents_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T14_Request Signature for multiple forms in multiple events.", null, ((string[])(null)));
#line 137
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 138
 testRunner.When("I click ActionPalette Item \"Request Signature\" in \"PatientPortalActions\" ActionPa" +
                    "lette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName"});
            table12.AddRow(new string[] {
                        "Visit (Week 2)",
                        "Form 5"});
#line 139
 testRunner.And("I select Request checkbox for below forms in RequestSignaturePage", ((string)(null)), table12, "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName"});
            table13.AddRow(new string[] {
                        "Visit (Week 2)",
                        "Form 6"});
#line 142
    testRunner.And("I select Request checkbox for below forms in RequestSignaturePage", ((string)(null)), table13, "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName"});
            table14.AddRow(new string[] {
                        "Visit (Week 3)",
                        "Demographics"});
#line 145
    testRunner.And("I select Request checkbox for below forms in RequestSignaturePage", ((string)(null)), table14, "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName"});
            table15.AddRow(new string[] {
                        "Visit (Week 3)",
                        "Vital Signs"});
#line 148
    testRunner.And("I select Request checkbox for below forms in RequestSignaturePage", ((string)(null)), table15, "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName"});
            table16.AddRow(new string[] {
                        "Visit (Week 4)",
                        "Form1"});
#line 151
    testRunner.And("I select Request checkbox for below forms in RequestSignaturePage", ((string)(null)), table16, "And ");
#line 154
 testRunner.And("I click on Submit button in RequestSignaturePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 155
 testRunner.Then("I see success message \"CRF for Signature Saved Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T15_Verify the XML file for request signature for multiple forms in multiple even" +
            "ts.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.3.5,3.1.3.6")]
        public virtual void T15_VerifyTheXMLFileForRequestSignatureForMultipleFormsInMultipleEvents_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T15_Verify the XML file for request signature for multiple forms in multiple even" +
                    "ts.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.3.5,3.1.3.6"});
#line 158
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 159
 testRunner.Given("I save the Event XML data in \"SignatureStatusUpdateActual3.xml\" file by executing" +
                    " the query \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey" +
                    " = 10 and XmlMessage like \'%FormData FormOID=\"Form6\"%\' order by OdmSubscriberDet" +
                    "ailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 160
 testRunner.And("I have the XML file \"SignatureStatusUpdateExpected3.xml\" available in the project" +
                    " folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 161
 testRunner.And("I have the XML file \"SignatureStatusUpdateActual3.xml\" available in the Test XML " +
                    "Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table17.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table17.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table17.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table17.AddRow(new string[] {
                        "",
                        "FileOID"});
            table17.AddRow(new string[] {
                        "",
                        "SourceID"});
            table17.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 162
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table17, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T16_Sign the Requested case book for single form in week 2 event.")]
        public virtual void T16_SignTheRequestedCaseBookForSingleFormInWeek2Event_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T16_Sign the Requested case book for single form in week 2 event.", null, ((string[])(null)));
#line 171
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 172
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 173
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 174
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 175
 testRunner.And("I click ActionPalette Item \"Sign Casebook\" in \"PatientPortalActions\" ActionPalett" +
                    "e", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName",
                        "RadioButton"});
            table18.AddRow(new string[] {
                        "Visit (Week 2)",
                        "Form1",
                        "Accept"});
#line 176
 testRunner.And("I select radio button for below forms in SignCasebookPage", ((string)(null)), table18, "And ");
#line 179
 testRunner.And("I given username as \"testadmin\" in SignCasebookPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 180
 testRunner.And("I given password as \"Datalabs1234\" in SignCasebookPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 181
 testRunner.And("I click on Submit button in SignCasebbokPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 182
 testRunner.Then("I see success message \"CRFs for Casebook Saved Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T17_Verify the XML file for signed case book form.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.3.5,3.1.3.6")]
        public virtual void T17_VerifyTheXMLFileForSignedCaseBookForm_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T17_Verify the XML file for signed case book form.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.3.5,3.1.3.6"});
#line 185
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 186
 testRunner.Given(@"I save the Event XML data in ""SignatureStatusUpdateActual4.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 10 and XmlMessage like '%ItemData ItemOID=""Text"" Value=""Text""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 187
 testRunner.And("I have the XML file \"SignatureStatusUpdateExpected4.xml\" available in the project" +
                    " folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 188
 testRunner.And("I have the XML file \"SignatureStatusUpdateActual4.xml\" available in the Test XML " +
                    "Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table19.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table19.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table19.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table19.AddRow(new string[] {
                        "",
                        "FileOID"});
            table19.AddRow(new string[] {
                        "",
                        "SourceID"});
            table19.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 189
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table19, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T18_Update the data in the form1 week2 and verify the updated signature value.")]
        public virtual void T18_UpdateTheDataInTheForm1Week2AndVerifyTheUpdatedSignatureValue_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T18_Update the data in the form1 week2 and verify the updated signature value.", null, ((string[])(null)));
#line 198
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 199
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 200
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 201
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 202
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 203
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes"});
            table20.AddRow(new string[] {
                        "Sample integer question:",
                        "12",
                        "TextBox",
                        "1050",
                        "DCF",
                        "Updated Value"});
#line 204
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table20, "And ");
#line 207
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 208
 testRunner.And("I click Continue button of Modal \"Queries Result\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 209
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T19_Verify the generated XML file for updated signature and raised query on integ" +
            "er question.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.3.5,3.1.3.6")]
        public virtual void T19_VerifyTheGeneratedXMLFileForUpdatedSignatureAndRaisedQueryOnIntegerQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T19_Verify the generated XML file for updated signature and raised query on integ" +
                    "er question.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.3.5,3.1.3.6"});
#line 212
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 213
 testRunner.Given(@"I save the Event XML data in ""SignatureStatusUpdateActual5.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%ItemData ItemOID=""Integer"" TransactionType=""Update"" Value=""1050""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 214
 testRunner.And("I have the XML file \"SignatureStatusUpdateExpected5.xml\" available in the project" +
                    " folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 215
 testRunner.And("I have the XML file \"SignatureStatusUpdateActual5.xml\" available in the Test XML " +
                    "Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table21.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table21.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table21.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table21.AddRow(new string[] {
                        "",
                        "FileOID"});
            table21.AddRow(new string[] {
                        "",
                        "SourceID"});
            table21.AddRow(new string[] {
                        "",
                        "QueryOID"});
            table21.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 216
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table21, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T20_Navigate to form3 in visit week2 and update the data.")]
        public virtual void T20_NavigateToForm3InVisitWeek2AndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T20_Navigate to form3 in visit week2 and update the data.", null, ((string[])(null)));
#line 226
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 227
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"Form 3\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 228
 testRunner.When("I click \"Checkout\" button on \"Form 3\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table22.AddRow(new string[] {
                        "Date question: (Edit Check: Not Answered {Draft})",
                        "12/17/2018",
                        "TextBox"});
            table22.AddRow(new string[] {
                        "Integer question (Edit Check: DataType {Draft})",
                        "19",
                        "TextBox"});
            table22.AddRow(new string[] {
                        "Float question: (MaxP: 3)(Edit Check: MaxP {Sent})",
                        "12.32",
                        "TextBox"});
#line 229
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table22, "And ");
#line 234
 testRunner.And("I click on \"Save & Close\" button on \"Form 3\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 235
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T21_Navigate to Patient and submit the form Form1 in visit (Week 4)")]
        public virtual void T21_NavigateToPatientAndSubmitTheFormForm1InVisitWeek4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T21_Navigate to Patient and submit the form Form1 in visit (Week 4)", null, ((string[])(null)));
#line 237
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 238
 testRunner.And("I expand \"Visit (Week 4)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 239
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table23.AddRow(new string[] {
                        "Sample text question:",
                        "Sample Text",
                        "TextBox"});
            table23.AddRow(new string[] {
                        "Sample integer question:",
                        "19",
                        "TextBox"});
            table23.AddRow(new string[] {
                        "Sample float question:",
                        "12.32",
                        "TextBox"});
#line 240
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table23, "And ");
#line 245
 testRunner.And("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 246
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T22_Sign the requested case book and reject the form.")]
        public virtual void T22_SignTheRequestedCaseBookAndRejectTheForm_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T22_Sign the requested case book and reject the form.", null, ((string[])(null)));
#line 248
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 249
    testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 250
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 251
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 252
 testRunner.And("I click ActionPalette Item \"Sign Casebook\" in \"PatientPortalActions\" ActionPalett" +
                    "e", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName",
                        "RadioButton"});
            table24.AddRow(new string[] {
                        "Visit (Week 4)",
                        "Form1",
                        "Accept"});
#line 253
 testRunner.And("I select radio button for below forms in SignCasebookPage", ((string)(null)), table24, "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName",
                        "RadioButton",
                        "AddReason"});
            table25.AddRow(new string[] {
                        "Visit (Week 2)",
                        "Form 3",
                        "Reject",
                        "Invalid data"});
#line 256
 testRunner.And("I select radio button for below forms in SignCasebookPage", ((string)(null)), table25, "And ");
#line 259
 testRunner.And("I given username as \"testadmin\" in SignCasebookPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 260
 testRunner.And("I given password as \"Datalabs1234\" in SignCasebookPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 261
 testRunner.And("I click on Submit button in SignCasebbokPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 262
 testRunner.Then("I see success message \"CRFs for Casebook Saved Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T23_Verify the generated XML file for updated signature and rejected signature ch" +
            "anges.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.3.5,3.1.3.6")]
        public virtual void T23_VerifyTheGeneratedXMLFileForUpdatedSignatureAndRejectedSignatureChanges_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T23_Verify the generated XML file for updated signature and rejected signature ch" +
                    "anges.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.3.5,3.1.3.6"});
#line 265
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 266
 testRunner.Given("I save the Event XML data in \"SignatureStatusUpdateActual6.xml\" file by executing" +
                    " the query \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey" +
                    " = 10 and XmlMessage like \'%FormData FormOID=\"Form3\"%\' order by OdmSubscriberDet" +
                    "ailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 267
 testRunner.And("I have the XML file \"SignatureStatusUpdateExpected6.xml\" available in the project" +
                    " folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 268
 testRunner.And("I have the XML file \"SignatureStatusUpdateActual6.xml\" available in the Test XML " +
                    "Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table26.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table26.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table26.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table26.AddRow(new string[] {
                        "",
                        "FileOID"});
            table26.AddRow(new string[] {
                        "",
                        "SourceID"});
            table26.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 269
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table26, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T24_Drop the signature on request signature form.")]
        public virtual void T24_DropTheSignatureOnRequestSignatureForm_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T24_Drop the signature on request signature form.", null, ((string[])(null)));
#line 278
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 279
 testRunner.When("I click ActionPalette Item \"Request Signature\" in \"PatientPortalActions\" ActionPa" +
                    "lette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName"});
            table27.AddRow(new string[] {
                        "Visit (Week 2)",
                        "Form 2"});
#line 280
 testRunner.And("I Unselect Request checkbox for below forms in RequestSignaturePage", ((string)(null)), table27, "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName"});
            table28.AddRow(new string[] {
                        "Visit (Week 3)",
                        "Demographics"});
#line 283
 testRunner.And("I Unselect Request checkbox for below forms in RequestSignaturePage", ((string)(null)), table28, "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName"});
            table29.AddRow(new string[] {
                        "Visit (Week 3)",
                        "Vital Signs"});
#line 286
 testRunner.And("I Unselect Request checkbox for below forms in RequestSignaturePage", ((string)(null)), table29, "And ");
#line 289
 testRunner.And("I click on Submit button in RequestSignaturePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 290
 testRunner.Then("I see success message \"CRF for Signature Saved Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T25_Verify the generated XML file for updated signature cancellled.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.3.5,3.1.3.6")]
        public virtual void T25_VerifyTheGeneratedXMLFileForUpdatedSignatureCancellled_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T25_Verify the generated XML file for updated signature cancellled.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.3.5,3.1.3.6"});
#line 293
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 294
 testRunner.Given(@"I save the Event XML data in ""SignatureStatusUpdateActual7.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 10 and XmlMessage like '%StudyEventData StudyEventOID=""Visit02""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 295
 testRunner.And("I have the XML file \"SignatureStatusUpdateExpected7.xml\" available in the project" +
                    " folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 296
 testRunner.And("I have the XML file \"SignatureStatusUpdateActual7.xml\" available in the Test XML " +
                    "Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table30.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table30.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table30.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table30.AddRow(new string[] {
                        "",
                        "FileOID"});
            table30.AddRow(new string[] {
                        "",
                        "SourceID"});
            table30.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 297
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table30, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T26_Request signature for Form1 in week 4 event")]
        public virtual void T26_RequestSignatureForForm1InWeek4Event()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T26_Request signature for Form1 in week 4 event", null, ((string[])(null)));
#line 306
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 307
    testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 308
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 309
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 310
    testRunner.And("I click ActionPalette Item \"Request Signature\" in \"PatientPortalActions\" ActionPa" +
                    "lette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "EventName",
                        "FormName"});
            table31.AddRow(new string[] {
                        "Visit (Week 4)",
                        "Form1"});
#line 311
 testRunner.And("I select Request checkbox for below forms in RequestSignaturePage", ((string)(null)), table31, "And ");
#line 314
 testRunner.And("I click on Submit button in RequestSignaturePage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 315
 testRunner.Then("I see success message \"CRF for Signature Saved Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T27_Reset CRf and verify for signature off forms.")]
        public virtual void T27_ResetCRfAndVerifyForSignatureOffForms_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T27_Reset CRf and verify for signature off forms.", null, ((string[])(null)));
#line 317
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 318
 testRunner.Given("I expand \"Visit (Week 4)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 319
 testRunner.When("I click ActionPalette Item \"Reset CRF\" in \"CRFAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 320
 testRunner.And("I click Yes button in ResetCRFModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 321
 testRunner.And("I enter reason \"Reset CRF Testing\" in ResetCRFModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 322
    testRunner.And("I click Continue button in ResetCRFModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 323
    testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table32.AddRow(new string[] {
                        "CRF Reset - Visit (Week 4)/Form1 for patient 01-PAT - COMPLETE. View Summary."});
#line 324
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table32, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T28_Verify the generated XML file for signature off on form.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:3.1.3.5,3.1.3.6")]
        public virtual void T28_VerifyTheGeneratedXMLFileForSignatureOffOnForm_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T28_Verify the generated XML file for signature off on form.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:3.1.3.5,3.1.3.6"});
#line 329
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 330
 testRunner.Given(@"I save the Event XML data in ""SignatureStatusUpdateActual8.xml"" file by executing the query ""select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 and XmlMessage like '%ItemData ItemOID=""Text"" TransactionType=""Update"" Value=""""%' order by OdmSubscriberDetailKey desc""", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 331
 testRunner.And("I have the XML file \"SignatureStatusUpdateExpected8.xml\" available in the project" +
                    " folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 332
 testRunner.And("I have the XML file \"SignatureStatusUpdateActual8.xml\" available in the Test XML " +
                    "Files folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table33.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table33.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table33.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table33.AddRow(new string[] {
                        "",
                        "FileOID"});
            table33.AddRow(new string[] {
                        "",
                        "SourceID"});
            table33.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 333
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table33, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T29_Logout from Datalabs application.")]
        public virtual void T29_LogoutFromDatalabsApplication_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T29_Logout from Datalabs application.", null, ((string[])(null)));
#line 342
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 343
 testRunner.When("I clik logout of Datalabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 344
 testRunner.Then("I see login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

