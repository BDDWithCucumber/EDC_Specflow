// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.ODM_Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("ODM_Patient Migration for multiple study updates to Labs setting")]
    public partial class ODM_PatientMigrationForMultipleStudyUpdatesToLabsSettingFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "ODM_Patient Migration for multiple study updates to Labs setting.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "ODM_Patient Migration for multiple study updates to Labs setting", "\tTest Summary:\r\n\t1. US66270_Verify the Study update functionality in DL when the " +
                    "Designer study Labs settings changed multiple times Yes->No->Yes", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01_Login to Datalabs")]
        public virtual void _01_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_Login to Datalabs", null, ((string[])(null)));
#line 5
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 6
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 7
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02_Delete a study")]
        public virtual void _02_DeleteAStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02_Delete a study", null, ((string[])(null)));
#line 9
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 10
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 11
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("03_Upload and publish the study.")]
        public virtual void _03_UploadAndPublishTheStudy_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03_Upload and publish the study.", null, ((string[])(null)));
#line 13
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 14
    testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 15
    testRunner.And("I upload a study \"StudyPublish.zip\" with study label \"AllmappedforD1_1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 16
    testRunner.Then("I see study label \"AllmappedforD1_1\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("04_Add site in Site Management and associate testadmin testadmin user to 01-Site")]
        public virtual void _04_AddSiteInSiteManagementAndAssociateTestadminTestadminUserTo01_Site()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04_Add site in Site Management and associate testadmin testadmin user to 01-Site", null, ((string[])(null)));
#line 18
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 19
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 20
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 25
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 26
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 27
 testRunner.Then("I see Site details page for \"01-Site\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T07_Add a new lab test reference range record under Lab02 under WBC")]
        public virtual void T07_AddANewLabTestReferenceRangeRecordUnderLab02UnderWBC()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T07_Add a new lab test reference range record under Lab02 under WBC", null, ((string[])(null)));
#line 51
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 52
 testRunner.Given("I navigate to \"Local Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 53
    testRunner.When("I open lab with labid \"L02\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 54
 testRunner.And("I open labtest with labname \"MRRTEST1\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate",
                        "Gender",
                        "FromAgeSelect",
                        "FromAgeSet",
                        "ToAgeSelect",
                        "ToAgeSet",
                        "NormalRangeLowSelect",
                        "NormalRangeLowSet",
                        "NormalRangeHighSelect",
                        "NormalRangeHighSet",
                        "ClinicalRangeLowSelect",
                        "ClinicalRangeLowSet",
                        "ClinicalRangeHighSelect",
                        "ClinicalRangeHighSet",
                        "Unit",
                        "NA"});
            table1.AddRow(new string[] {
                        "02/03/2019",
                        "03/03/2040",
                        "Male",
                        ">",
                        "0",
                        "<",
                        "35",
                        ">",
                        "10",
                        "<",
                        "15",
                        ">",
                        "5",
                        "<",
                        "20",
                        "3Unit",
                        "False"});
#line 55
 testRunner.And("I click add and enter reference ranges of a lab test and Save and can see \"LabTes" +
                    "t Reference Range Added Successfully\" message upon each record save in Reference" +
                    "RangesPage including NA", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReferenceRangeID"});
            table2.AddRow(new string[] {
                        "{ReferenceRangeID1}"});
#line 58
 testRunner.Then("I see the reference range ids in the Reference Range Table.", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T08_Add a new lab test reference range record under Lab02 under WBC")]
        public virtual void T08_AddANewLabTestReferenceRangeRecordUnderLab02UnderWBC()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T08_Add a new lab test reference range record under Lab02 under WBC", null, ((string[])(null)));
#line 62
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 63
 testRunner.Given("I navigate to \"Local Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 64
    testRunner.When("I open lab with labid \"L02\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
 testRunner.And("I open labtest with labname \"MRRTEST2\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate",
                        "Gender",
                        "FromAgeSelect",
                        "FromAgeSet",
                        "ToAgeSelect",
                        "ToAgeSet",
                        "NormalRangeLowSelect",
                        "NormalRangeLowSet",
                        "NormalRangeHighSelect",
                        "NormalRangeHighSet",
                        "ClinicalRangeLowSelect",
                        "ClinicalRangeLowSet",
                        "ClinicalRangeHighSelect",
                        "ClinicalRangeHighSet",
                        "Unit",
                        "NA"});
            table3.AddRow(new string[] {
                        "02/03/2019",
                        "03/03/2040",
                        "Female",
                        ">",
                        "0",
                        "<",
                        "25",
                        ">",
                        "10",
                        "<",
                        "15",
                        ">",
                        "5",
                        "<",
                        "30",
                        "4Unit",
                        "False"});
#line 66
 testRunner.And("I click add and enter reference ranges of a lab test and Save and can see \"LabTes" +
                    "t Reference Range Added Successfully\" message upon each record save in Reference" +
                    "RangesPage including NA", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReferenceRangeID"});
            table4.AddRow(new string[] {
                        "{ReferenceRangeID2}"});
#line 69
 testRunner.Then("I see the reference range ids in the Reference Range Table.", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T09_Add patient 01-PAT from Datalabs UI")]
        public virtual void T09_AddPatient01_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T09_Add patient 01-PAT from Datalabs UI", null, ((string[])(null)));
#line 73
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 74
      testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 75
      testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table5.AddRow(new string[] {
                        "02",
                        "PAT",
                        "06/14/2019"});
#line 76
      testRunner.When("I add patient with below details.", ((string)(null)), table5, "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table6.AddRow(new string[] {
                        "02-PAT"});
#line 79
  testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table6, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T10_Add patient 01-PAT from Datalabs UI")]
        public virtual void T10_AddPatient01_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T10_Add patient 01-PAT from Datalabs UI", null, ((string[])(null)));
#line 83
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 84
      testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 85
      testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table7.AddRow(new string[] {
                        "01",
                        "PAT",
                        "06/14/2019"});
#line 86
      testRunner.When("I add patient with below details.", ((string)(null)), table7, "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table8.AddRow(new string[] {
                        "01-PAT"});
#line 89
  testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table8, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T11_Select Site1 and patient 01-PAT.")]
        public virtual void T11_SelectSite1AndPatient01_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T11_Select Site1 and patient 01-PAT.", null, ((string[])(null)));
#line 93
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 94
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 95
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 96
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 97
 testRunner.Then("I see Patient details page for \"01-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T12_Expand the Visit (Screening) and open the demographics form to update the dat" +
            "a")]
        public virtual void T12_ExpandTheVisitScreeningAndOpenTheDemographicsFormToUpdateTheData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T12_Expand the Visit (Screening) and open the demographics form to update the dat" +
                    "a", null, ((string[])(null)));
#line 99
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 100
 testRunner.When("I expand \"Event 1\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 101
    testRunner.And("I click \"Checkout\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table9.AddRow(new string[] {
                        "What is your age",
                        "31",
                        "TextBox"});
            table9.AddRow(new string[] {
                        "Age Unit",
                        "Year",
                        "ListBox"});
            table9.AddRow(new string[] {
                        "What is your gender",
                        "Male",
                        "ListBox"});
#line 102
    testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table9, "And ");
#line 107
 testRunner.And("I click on \"Save & Close\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T13_Expand the Visit (week2) event and open the FormD1 form and update the data.")]
        public virtual void T13_ExpandTheVisitWeek2EventAndOpenTheFormD1FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T13_Expand the Visit (week2) event and open the FormD1 form and update the data.", null, ((string[])(null)));
#line 110
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 111
 testRunner.When("I expand \"Visit (week2)\" to select and open \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 112
 testRunner.And("I click \"Checkout\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table10.AddRow(new string[] {
                        "Lab ID Q1 For D1",
                        "Lab02 (L02)",
                        "ListBox"});
            table10.AddRow(new string[] {
                        "CRF Collection Date Q1 For D1",
                        "06/10/2019",
                        "TextBox"});
#line 113
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table10, "And ");
#line 117
    testRunner.And("I expand row \"1\" of table \"AutoBuildQuestionsForD1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table11.AddRow(new string[] {
                        "No",
                        "1",
                        "CRF Lab Value For D1",
                        "20",
                        "TextBox",
                        ""});
            table11.AddRow(new string[] {
                        "No",
                        "1",
                        "CRF Lab (Original) Unit for D1",
                        "Unit 3",
                        "ListBox",
                        "Save & Close Row"});
#line 118
 testRunner.And("I enter below \"AutoBuildQuestionsForD1:\" autobuild table questions data in the CR" +
                    "F.", ((string)(null)), table11, "And ");
#line 122
 testRunner.And("I click on \"Save & Close\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 123
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T14_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T14_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T14_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 126
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 127
 testRunner.Given("I save the Event XML data in \"StudyPublishActual.xml\" file by executing the query" +
                    " \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 order" +
                    " by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 128
 testRunner.And("I have the XML file \"StudyPublishExpected.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.And("I have the XML file \"StudyPublishActual.xml\" available in the Test XML Files fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table12.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table12.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table12.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table12.AddRow(new string[] {
                        "",
                        "FileOID"});
            table12.AddRow(new string[] {
                        "",
                        "SourceID"});
            table12.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 130
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table12, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T15_Select Site1 and patient 01-PAT.")]
        public virtual void T15_SelectSite1AndPatient01_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T15_Select Site1 and patient 01-PAT.", null, ((string[])(null)));
#line 139
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 140
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 141
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
 testRunner.When("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 143
 testRunner.Then("I see Patient details page for \"02-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T16_Expand the Visit (Screening) and open the demographics form to update the dat" +
            "a")]
        public virtual void T16_ExpandTheVisitScreeningAndOpenTheDemographicsFormToUpdateTheData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T16_Expand the Visit (Screening) and open the demographics form to update the dat" +
                    "a", null, ((string[])(null)));
#line 145
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 146
 testRunner.When("I expand \"Event 1\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 147
    testRunner.And("I click \"Checkout\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table13.AddRow(new string[] {
                        "What is your age",
                        "20",
                        "TextBox"});
            table13.AddRow(new string[] {
                        "Age Unit",
                        "Year",
                        "ListBox"});
            table13.AddRow(new string[] {
                        "What is your gender",
                        "Female",
                        "ListBox"});
#line 148
    testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table13, "And ");
#line 153
 testRunner.And("I click on \"Save & Close\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 154
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T17_Expand the Visit (week2) event and open the FormD1 form and update the data.")]
        public virtual void T17_ExpandTheVisitWeek2EventAndOpenTheFormD1FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T17_Expand the Visit (week2) event and open the FormD1 form and update the data.", null, ((string[])(null)));
#line 156
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 157
 testRunner.When("I expand \"Visit (week2)\" to select and open \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 158
 testRunner.And("I click \"Checkout\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table14.AddRow(new string[] {
                        "Lab ID Q1 For D1",
                        "Lab02 (L02)",
                        "ListBox"});
            table14.AddRow(new string[] {
                        "CRF Collection Date Q1 For D1",
                        "06/10/2019",
                        "TextBox"});
#line 159
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table14, "And ");
#line 163
    testRunner.And("I expand row \"2\" of table \"AutoBuildQuestionsForD1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table15.AddRow(new string[] {
                        "No",
                        "2",
                        "CRF Lab Value For D1",
                        "30",
                        "TextBox",
                        ""});
            table15.AddRow(new string[] {
                        "No",
                        "2",
                        "CRF Lab (Original) Unit for D1",
                        "Unit 4",
                        "ListBox",
                        "Save & Close Row"});
#line 164
 testRunner.And("I enter below \"AutoBuildQuestionsForD1:\" autobuild table questions data in the CR" +
                    "F.", ((string)(null)), table15, "And ");
#line 168
 testRunner.And("I click on \"Save & Close\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T18_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T18_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T18_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 172
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 173
 testRunner.Given("I save the Event XML data in \"StudyPublishActual.xml\" file by executing the query" +
                    " \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 order" +
                    " by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 174
 testRunner.And("I have the XML file \"StudyPublishExpected.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 175
 testRunner.And("I have the XML file \"StudyPublishActual.xml\" available in the Test XML Files fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table16.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table16.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table16.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table16.AddRow(new string[] {
                        "",
                        "FileOID"});
            table16.AddRow(new string[] {
                        "",
                        "SourceID"});
            table16.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 176
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table16, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T19_Upload and Stage a Study which has major study changes")]
        public virtual void T19_UploadAndStageAStudyWhichHasMajorStudyChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T19_Upload and Stage a Study which has major study changes", null, ((string[])(null)));
#line 187
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 188
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 189
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 192
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 193
 testRunner.And("I upload study \"StudyPublish_Yes_No.zip\" with Label \"Major1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 194
 testRunner.And("I click continue in modal dialog having title \"Confirm\" and partial message \"Uplo" +
                    "aded study version has Local Labs as Not Enabled which is different from earlier" +
                    " study version.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 195
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 196
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 197
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
 testRunner.Then("I see notes \"Note: Major changes have been detected to the study design. Patient " +
                    "migration will be required.\" in StudyVersionPropertiesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T20_Publish the study file that has Major changes")]
        public virtual void T20_PublishTheStudyFileThatHasMajorChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T20_Publish the study file that has Major changes", null, ((string[])(null)));
#line 200
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 201
 testRunner.When("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 202
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 203
 testRunner.And("I select patient migration option \"Do not migrate\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 204
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 205
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table17.AddRow(new string[] {
                        "Publishing of Study file (Major1) - complete."});
#line 206
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table17, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T21_MigragePatients")]
        public virtual void T21_MigragePatients()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T21_MigragePatients", null, ((string[])(null)));
#line 210
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 211
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 212
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 213
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 214
 testRunner.And("I click ActionPalette Item \"Migrate Patients\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table18.AddRow(new string[] {
                        "01-PAT"});
#line 215
 testRunner.And("I select patients in MigratePatientsPage", ((string)(null)), table18, "And ");
#line 218
 testRunner.And("I click save button in MigratePatientsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 219
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table19.AddRow(new string[] {
                        "Migration of Site 01 for Study file (Major1) - complete. 1 out of 1 patients migr" +
                            "ated successfully. To review see migration report."});
#line 220
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table19, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T22_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T22_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T22_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 225
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 226
 testRunner.Given("I save the Event XML data in \"StudyPublishActual.xml\" file by executing the query" +
                    " \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 order" +
                    " by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 227
 testRunner.And("I have the XML file \"StudyPublishExpected.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 228
 testRunner.And("I have the XML file \"StudyPublishActual.xml\" available in the Test XML Files fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table20.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table20.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table20.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table20.AddRow(new string[] {
                        "",
                        "FileOID"});
            table20.AddRow(new string[] {
                        "",
                        "SourceID"});
            table20.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 229
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table20, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T23_Expand the Visit (week2) event and open the FormD1 form and update the data.")]
        public virtual void T23_ExpandTheVisitWeek2EventAndOpenTheFormD1FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T23_Expand the Visit (week2) event and open the FormD1 form and update the data.", null, ((string[])(null)));
#line 238
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 239
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 240
    testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 241
    testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 242
 testRunner.And("I expand \"Visit (week2)\" to select and open \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 243
 testRunner.When("I click \"Checkout\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 244
    testRunner.And("I expand row \"1\" of table \"AutoBuildQuestionsForD1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table21.AddRow(new string[] {
                        "No",
                        "1",
                        "CRF Lab (Original) Unit for D1",
                        "Unit 3",
                        "Unit 4",
                        "SEC",
                        "ListBox",
                        "Save & Close Row"});
#line 245
    testRunner.And("I enter below \"AutoBuildQuestionsForD1:\" table questions data in the CRF.", ((string)(null)), table21, "And ");
#line 248
 testRunner.And("I click on \"Save & Close\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 249
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T24_Expand the Visit (week2) event and open the FormD1 form and update the data.")]
        public virtual void T24_ExpandTheVisitWeek2EventAndOpenTheFormD1FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T24_Expand the Visit (week2) event and open the FormD1 form and update the data.", null, ((string[])(null)));
#line 251
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 252
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 253
    testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 254
    testRunner.And("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 255
 testRunner.And("I expand \"Visit (week2)\" to select and open \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 256
 testRunner.When("I click \"Checkout\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 257
    testRunner.And("I expand row \"2\" of table \"AutoBuildQuestionsForD1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table22.AddRow(new string[] {
                        "No",
                        "2",
                        "CRF Lab (Original) Unit for D1",
                        "Unit 4",
                        "Unit 5",
                        "SEC",
                        "ListBox",
                        "Save & Close Row"});
#line 258
    testRunner.And("I enter below \"AutoBuildQuestionsForD1:\" table questions data in the CRF.", ((string)(null)), table22, "And ");
#line 261
 testRunner.And("I click on \"Save & Close\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 262
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T25_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T25_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T25_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 265
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 266
 testRunner.Given("I save the Event XML data in \"StudyPublishActual.xml\" file by executing the query" +
                    " \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 order" +
                    " by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 267
 testRunner.And("I have the XML file \"StudyPublishExpected.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 268
 testRunner.And("I have the XML file \"StudyPublishActual.xml\" available in the Test XML Files fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table23.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table23.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table23.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table23.AddRow(new string[] {
                        "",
                        "FileOID"});
            table23.AddRow(new string[] {
                        "",
                        "SourceID"});
            table23.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 269
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table23, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T26_MigragePatients")]
        public virtual void T26_MigragePatients()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T26_MigragePatients", null, ((string[])(null)));
#line 278
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 279
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 280
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 281
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 282
 testRunner.And("I click ActionPalette Item \"Migrate Patients\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table24.AddRow(new string[] {
                        "02-PAT"});
#line 283
 testRunner.And("I select patients in MigratePatientsPage", ((string)(null)), table24, "And ");
#line 286
 testRunner.And("I click save button in MigratePatientsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 287
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table25.AddRow(new string[] {
                        "Migration of Site 01 for Study file (Major1) - complete. 1 out of 1 patients migr" +
                            "ated successfully. To review see migration report."});
#line 288
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table25, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T27_Upload and Stage a Study which has major study changes")]
        public virtual void T27_UploadAndStageAStudyWhichHasMajorStudyChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T27_Upload and Stage a Study which has major study changes", null, ((string[])(null)));
#line 294
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 295
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 296
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 297
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 298
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 299
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 300
 testRunner.And("I upload study \"Import_Study1_AllDictionaryChanges.zip\" with Label \"Major1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 301
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 302
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 303
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 304
 testRunner.Then("I see notes \"Note: Major changes have been detected to the study design. Patient " +
                    "migration will be required.\" in StudyVersionPropertiesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T28_Publish the study file that has Major changes")]
        public virtual void T28_PublishTheStudyFileThatHasMajorChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T28_Publish the study file that has Major changes", null, ((string[])(null)));
#line 306
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 307
 testRunner.When("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 308
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 309
 testRunner.And("I select patient migration option \"Do not migrate\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 310
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 311
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table26.AddRow(new string[] {
                        "Publishing of Study file (Major1) - complete."});
#line 312
 testRunner.And("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table26, "And ");
#line 315
 testRunner.Then("I do not see the Tab \"Local Labs\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T29_MigragePatients")]
        public virtual void T29_MigragePatients()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T29_MigragePatients", null, ((string[])(null)));
#line 317
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 318
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 319
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 320
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 321
 testRunner.And("I click ActionPalette Item \"Migrate Patients\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table27.AddRow(new string[] {
                        "01-PAT"});
#line 322
 testRunner.And("I select patients in MigratePatientsPage", ((string)(null)), table27, "And ");
#line 325
 testRunner.And("I click save button in MigratePatientsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 326
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table28.AddRow(new string[] {
                        "Migration of Site 01 for Study file (Major1) - complete. 1 out of 1 patients migr" +
                            "ated successfully. To review see migration report."});
#line 327
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table28, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T30_Expand the Visit (week2) event and open the FormD1 form and update the data.")]
        public virtual void T30_ExpandTheVisitWeek2EventAndOpenTheFormD1FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T30_Expand the Visit (week2) event and open the FormD1 form and update the data.", null, ((string[])(null)));
#line 345
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 346
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 347
    testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 348
    testRunner.And("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 349
 testRunner.And("I expand \"Visit (week2)\" to select and open \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 350
 testRunner.When("I click \"Checkout\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 351
    testRunner.And("I expand row \"1\" of table \"AutoBuildQuestionsForD1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table29.AddRow(new string[] {
                        "No",
                        "1",
                        "CRF Lab (Original) Unit for D1",
                        "Unit 4",
                        "Unit 3",
                        "SEC",
                        "ListBox",
                        "Save & Close Row"});
#line 352
    testRunner.And("I enter below \"AutoBuildQuestionsForD1:\" table questions data in the CRF.", ((string)(null)), table29, "And ");
#line 355
 testRunner.And("I click on \"Save & Close\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 356
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T31_Expand the Visit (week2) event and open the FormD1 form and update the data.")]
        public virtual void T31_ExpandTheVisitWeek2EventAndOpenTheFormD1FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T31_Expand the Visit (week2) event and open the FormD1 form and update the data.", null, ((string[])(null)));
#line 358
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 359
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 360
    testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 361
    testRunner.And("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 362
 testRunner.And("I expand \"Visit (week2)\" to select and open \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 363
 testRunner.When("I click \"Checkout\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 364
    testRunner.And("I expand row \"2\" of table \"AutoBuildQuestionsForD1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table30.AddRow(new string[] {
                        "No",
                        "2",
                        "CRF Lab (Original) Unit for D1",
                        "Unit 5",
                        "Unit 4",
                        "SEC",
                        "ListBox",
                        "Save & Close Row"});
#line 365
    testRunner.And("I enter below \"AutoBuildQuestionsForD1:\" table questions data in the CRF.", ((string)(null)), table30, "And ");
#line 368
 testRunner.And("I click on \"Save & Close\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 369
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T32_MigragePatients")]
        public virtual void T32_MigragePatients()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T32_MigragePatients", null, ((string[])(null)));
#line 371
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 372
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 373
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 374
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 375
 testRunner.And("I click ActionPalette Item \"Migrate Patients\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table31.AddRow(new string[] {
                        "02-PAT"});
#line 376
 testRunner.And("I select patients in MigratePatientsPage", ((string)(null)), table31, "And ");
#line 379
 testRunner.And("I click save button in MigratePatientsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 380
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table32.AddRow(new string[] {
                        "Migration of Site 01 for Study file (Major1) - complete. 1 out of 1 patients migr" +
                            "ated successfully. To review see migration report."});
#line 381
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table32, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T33_Upload and Stage a Study which has major study changes")]
        public virtual void T33_UploadAndStageAStudyWhichHasMajorStudyChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T33_Upload and Stage a Study which has major study changes", null, ((string[])(null)));
#line 387
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 388
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 389
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 390
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 391
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 392
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 393
 testRunner.And("I upload study \"Study Publish_No_Yes.zip\" with Label \"Major1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 394
 testRunner.And("I click continue in modal dialog having title \"Confirm\" and partial message \"Uplo" +
                    "aded study version has Local Labs as Enabled which is different from earlier stu" +
                    "dy version.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 395
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 396
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 397
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 398
 testRunner.Then("I see notes \"Note: Major changes have been detected to the study design. Patient " +
                    "migration will be required.\" in StudyVersionPropertiesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T34_Publish the study file that has Major changes")]
        public virtual void T34_PublishTheStudyFileThatHasMajorChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T34_Publish the study file that has Major changes", null, ((string[])(null)));
#line 400
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 401
 testRunner.When("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 402
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 403
 testRunner.And("I select patient migration option \"Do not migrate\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 404
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 405
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table33.AddRow(new string[] {
                        "Publishing of Study file (Major1) - complete."});
#line 406
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table33, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T35_MigragePatients")]
        public virtual void T35_MigragePatients()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T35_MigragePatients", null, ((string[])(null)));
#line 410
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 411
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 412
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 413
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 414
 testRunner.And("I click ActionPalette Item \"Migrate Patients\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table34.AddRow(new string[] {
                        "01-PAT"});
#line 415
 testRunner.And("I select patients in MigratePatientsPage", ((string)(null)), table34, "And ");
#line 418
 testRunner.And("I click save button in MigratePatientsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 419
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table35.AddRow(new string[] {
                        "Migration of Site 01 for Study file (Major1) - complete. 1 out of 1 patients migr" +
                            "ated successfully. To review see migration report."});
#line 420
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table35, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T36_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T36_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T36_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 425
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 426
 testRunner.Given("I save the Event XML data in \"StudyPublishActual.xml\" file by executing the query" +
                    " \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 order" +
                    " by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 427
 testRunner.And("I have the XML file \"StudyPublishExpected.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 428
 testRunner.And("I have the XML file \"StudyPublishActual.xml\" available in the Test XML Files fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table36.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table36.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table36.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table36.AddRow(new string[] {
                        "",
                        "FileOID"});
            table36.AddRow(new string[] {
                        "",
                        "SourceID"});
            table36.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 429
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table36, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T37_Add a new lab test reference range record under Lab02 under WBC")]
        public virtual void T37_AddANewLabTestReferenceRangeRecordUnderLab02UnderWBC()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T37_Add a new lab test reference range record under Lab02 under WBC", null, ((string[])(null)));
#line 438
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 439
 testRunner.Given("I navigate to \"Local Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 440
    testRunner.When("I open lab with labid \"L02\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 441
 testRunner.And("I open labtest with labname \"MRRTEST1\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate",
                        "Gender",
                        "FromAgeSelect",
                        "FromAgeSet",
                        "ToAgeSelect",
                        "ToAgeSet",
                        "NormalRangeLowSelect",
                        "NormalRangeLowSet",
                        "NormalRangeHighSelect",
                        "NormalRangeHighSet",
                        "ClinicalRangeLowSelect",
                        "ClinicalRangeLowSet",
                        "ClinicalRangeHighSelect",
                        "ClinicalRangeHighSet",
                        "Unit",
                        "NA"});
            table37.AddRow(new string[] {
                        "02/03/2019",
                        "03/03/2040",
                        "Male",
                        ">",
                        "0",
                        "<",
                        "35",
                        ">",
                        "10",
                        "<",
                        "15",
                        ">",
                        "5",
                        "<",
                        "20",
                        "3Unit",
                        "False"});
#line 442
 testRunner.And("I click add and enter reference ranges of a lab test and Save and can see \"LabTes" +
                    "t Reference Range Added Successfully\" message upon each record save in Reference" +
                    "RangesPage including NA", ((string)(null)), table37, "And ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReferenceRangeID"});
            table38.AddRow(new string[] {
                        "{ReferenceRangeID1}"});
#line 445
 testRunner.Then("I see the reference range ids in the Reference Range Table.", ((string)(null)), table38, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T38_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T38_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T38_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 450
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 451
 testRunner.Given("I save the Event XML data in \"StudyPublishActual.xml\" file by executing the query" +
                    " \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 order" +
                    " by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 452
 testRunner.And("I have the XML file \"StudyPublishExpected.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 453
 testRunner.And("I have the XML file \"StudyPublishActual.xml\" available in the Test XML Files fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table39.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table39.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table39.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table39.AddRow(new string[] {
                        "",
                        "FileOID"});
            table39.AddRow(new string[] {
                        "",
                        "SourceID"});
            table39.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 454
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table39, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T39_Add a new lab test reference range record under Lab02 under WBC")]
        public virtual void T39_AddANewLabTestReferenceRangeRecordUnderLab02UnderWBC()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T39_Add a new lab test reference range record under Lab02 under WBC", null, ((string[])(null)));
#line 463
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 464
 testRunner.Given("I navigate to \"Local Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 465
    testRunner.When("I open lab with labid \"L02\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 466
 testRunner.And("I open labtest with labname \"MRRTEST2\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate",
                        "Gender",
                        "FromAgeSelect",
                        "FromAgeSet",
                        "ToAgeSelect",
                        "ToAgeSet",
                        "NormalRangeLowSelect",
                        "NormalRangeLowSet",
                        "NormalRangeHighSelect",
                        "NormalRangeHighSet",
                        "ClinicalRangeLowSelect",
                        "ClinicalRangeLowSet",
                        "ClinicalRangeHighSelect",
                        "ClinicalRangeHighSet",
                        "Unit",
                        "NA"});
            table40.AddRow(new string[] {
                        "02/03/2019",
                        "03/03/2040",
                        "Female",
                        ">",
                        "0",
                        "<",
                        "25",
                        ">",
                        "10",
                        "<",
                        "15",
                        ">",
                        "5",
                        "<",
                        "30",
                        "4Unit",
                        "False"});
#line 467
 testRunner.And("I click add and enter reference ranges of a lab test and Save and can see \"LabTes" +
                    "t Reference Range Added Successfully\" message upon each record save in Reference" +
                    "RangesPage including NA", ((string)(null)), table40, "And ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReferenceRangeID"});
            table41.AddRow(new string[] {
                        "{ReferenceRangeID2}"});
#line 470
 testRunner.Then("I see the reference range ids in the Reference Range Table.", ((string)(null)), table41, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T40_MigragePatients")]
        public virtual void T40_MigragePatients()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T40_MigragePatients", null, ((string[])(null)));
#line 474
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 475
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 476
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 477
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 478
 testRunner.And("I click ActionPalette Item \"Migrate Patients\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table42.AddRow(new string[] {
                        "02-PAT"});
#line 479
 testRunner.And("I select patients in MigratePatientsPage", ((string)(null)), table42, "And ");
#line 482
 testRunner.And("I click save button in MigratePatientsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 483
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table43.AddRow(new string[] {
                        "Migration of Site 01 for Study file (Major1) - complete. 1 out of 1 patients migr" +
                            "ated successfully. To review see migration report."});
#line 484
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table43, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T41_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T41_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T41_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 489
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 490
 testRunner.Given("I save the Event XML data in \"StudyPublishActual.xml\" file by executing the query" +
                    " \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 order" +
                    " by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 491
 testRunner.And("I have the XML file \"StudyPublishExpected.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 492
 testRunner.And("I have the XML file \"StudyPublishActual.xml\" available in the Test XML Files fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table44.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table44.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table44.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table44.AddRow(new string[] {
                        "",
                        "FileOID"});
            table44.AddRow(new string[] {
                        "",
                        "SourceID"});
            table44.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 493
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table44, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T42_Delete a study")]
        public virtual void T42_DeleteAStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T42_Delete a study", null, ((string[])(null)));
#line 503
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 504
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 505
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T43_Upload and publish the study.")]
        public virtual void T43_UploadAndPublishTheStudy_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T43_Upload and publish the study.", null, ((string[])(null)));
#line 507
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 508
    testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 509
    testRunner.And("I upload a study \"StudyPublish.zip\" with study label \"AllmappedforD1_1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 510
    testRunner.Then("I see study label \"AllmappedforD1_1\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T44_Add a new lab test reference range record under Lab02 under WBC")]
        public virtual void T44_AddANewLabTestReferenceRangeRecordUnderLab02UnderWBC()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T44_Add a new lab test reference range record under Lab02 under WBC", null, ((string[])(null)));
#line 512
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 513
 testRunner.Given("I navigate to \"Local Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 514
    testRunner.When("I open lab with labid \"L02\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 515
 testRunner.And("I open labtest with labname \"MRRTEST1\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate",
                        "Gender",
                        "FromAgeSelect",
                        "FromAgeSet",
                        "ToAgeSelect",
                        "ToAgeSet",
                        "NormalRangeLowSelect",
                        "NormalRangeLowSet",
                        "NormalRangeHighSelect",
                        "NormalRangeHighSet",
                        "ClinicalRangeLowSelect",
                        "ClinicalRangeLowSet",
                        "ClinicalRangeHighSelect",
                        "ClinicalRangeHighSet",
                        "Unit",
                        "NA"});
            table45.AddRow(new string[] {
                        "02/03/2019",
                        "03/03/2040",
                        "Male",
                        ">",
                        "0",
                        "<",
                        "35",
                        ">",
                        "10",
                        "<",
                        "15",
                        ">",
                        "5",
                        "<",
                        "20",
                        "3Unit",
                        "False"});
#line 516
 testRunner.And("I click add and enter reference ranges of a lab test and Save and can see \"LabTes" +
                    "t Reference Range Added Successfully\" message upon each record save in Reference" +
                    "RangesPage including NA", ((string)(null)), table45, "And ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReferenceRangeID"});
            table46.AddRow(new string[] {
                        "{ReferenceRangeID1}"});
#line 519
 testRunner.Then("I see the reference range ids in the Reference Range Table.", ((string)(null)), table46, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T45_Add patient 01-PAT from Datalabs UI")]
        public virtual void T45_AddPatient01_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T45_Add patient 01-PAT from Datalabs UI", null, ((string[])(null)));
#line 523
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 524
      testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 525
      testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table47.AddRow(new string[] {
                        "01",
                        "PAT",
                        "06/14/2019"});
#line 526
      testRunner.When("I add patient with below details.", ((string)(null)), table47, "When ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table48.AddRow(new string[] {
                        "01-PAT"});
#line 529
  testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table48, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T46_Select Site1 and patient 01-PAT.")]
        public virtual void T46_SelectSite1AndPatient01_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T46_Select Site1 and patient 01-PAT.", null, ((string[])(null)));
#line 533
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 534
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 535
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 536
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 537
 testRunner.Then("I see Patient details page for \"01-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T47_Expand the Visit (Screening) and open the demographics form to update the dat" +
            "a")]
        public virtual void T47_ExpandTheVisitScreeningAndOpenTheDemographicsFormToUpdateTheData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T47_Expand the Visit (Screening) and open the demographics form to update the dat" +
                    "a", null, ((string[])(null)));
#line 539
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 540
 testRunner.When("I expand \"Event 1\" to select and open \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 541
    testRunner.And("I click \"Checkout\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table49.AddRow(new string[] {
                        "What is your age",
                        "31",
                        "TextBox"});
            table49.AddRow(new string[] {
                        "Age Unit",
                        "Year",
                        "ListBox"});
            table49.AddRow(new string[] {
                        "What is your gender",
                        "Male",
                        "ListBox"});
#line 542
    testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table49, "And ");
#line 547
 testRunner.And("I click on \"Save & Close\" button on \"Demographics\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 548
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T48_Expand the Visit (week2) event and open the FormD1 form and update the data.")]
        public virtual void T48_ExpandTheVisitWeek2EventAndOpenTheFormD1FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T48_Expand the Visit (week2) event and open the FormD1 form and update the data.", null, ((string[])(null)));
#line 550
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 551
 testRunner.When("I expand \"Visit (week2)\" to select and open \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 552
 testRunner.And("I click \"Checkout\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table50.AddRow(new string[] {
                        "Lab ID Q1 For D1",
                        "Lab02 (L02)",
                        "ListBox"});
            table50.AddRow(new string[] {
                        "CRF Collection Date Q1 For D1",
                        "06/10/2019",
                        "TextBox"});
#line 553
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table50, "And ");
#line 557
    testRunner.And("I expand row \"1\" of table \"AutoBuildQuestionsForD1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table51.AddRow(new string[] {
                        "No",
                        "1",
                        "CRF Lab Value For D1",
                        "20",
                        "TextBox",
                        ""});
            table51.AddRow(new string[] {
                        "No",
                        "1",
                        "CRF Lab (Original) Unit for D1",
                        "Unit 3",
                        "ListBox",
                        "Save & Close Row"});
#line 558
 testRunner.And("I enter below \"AutoBuildQuestionsForD1:\" autobuild table questions data in the CR" +
                    "F.", ((string)(null)), table51, "And ");
#line 562
 testRunner.And("I click on \"Save & Close\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 563
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T49_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T49_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T49_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 566
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 567
 testRunner.Given("I save the Event XML data in \"StudyPublishActual.xml\" file by executing the query" +
                    " \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 order" +
                    " by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 568
 testRunner.And("I have the XML file \"StudyPublishExpected.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 569
 testRunner.And("I have the XML file \"StudyPublishActual.xml\" available in the Test XML Files fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table52.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table52.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table52.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table52.AddRow(new string[] {
                        "",
                        "FileOID"});
            table52.AddRow(new string[] {
                        "",
                        "SourceID"});
            table52.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 570
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table52, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T50_Upload and Stage a Study which has major study changes")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US32215.1,")]
        [NUnit.Framework.CategoryAttribute("US32215.2,")]
        [NUnit.Framework.CategoryAttribute("US32215.3,")]
        [NUnit.Framework.CategoryAttribute("US32215.4,")]
        [NUnit.Framework.CategoryAttribute("US32215.5")]
        public virtual void T50_UploadAndStageAStudyWhichHasMajorStudyChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T50_Upload and Stage a Study which has major study changes", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US32215.1,",
                        "US32215.2,",
                        "US32215.3,",
                        "US32215.4,",
                        "US32215.5"});
#line 582
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 583
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 584
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 585
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 586
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 587
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 588
 testRunner.And("I upload study \"StudyPublish_Yes_No.zip\" with Label \"Major1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 589
 testRunner.And("I click continue in modal dialog having title \"Confirm\" and partial message \"Uplo" +
                    "aded study version has Local Labs as Not Enabled which is different from earlier" +
                    " study version.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 590
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 591
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 592
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 593
 testRunner.Then("I see notes \"Note: Major changes have been detected to the study design. Patient " +
                    "migration will be required.\" in StudyVersionPropertiesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T51_Publish the study file that has Major changes")]
        public virtual void T51_PublishTheStudyFileThatHasMajorChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T51_Publish the study file that has Major changes", null, ((string[])(null)));
#line 595
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 596
 testRunner.When("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 597
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 598
 testRunner.And("I select patient migration option \"Migrate all patients\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 599
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 600
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table53.AddRow(new string[] {
                        "Migration of Site 01 for Study file (Major1) - complete. 1 out of 1 patients migr" +
                            "ated successfully. To review see migration report."});
            table53.AddRow(new string[] {
                        "Publishing of Study file (Major1) - complete."});
#line 601
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table53, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T52_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T52_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T52_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 607
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 608
 testRunner.Given("I save the Event XML data in \"StudyPublishActual09.xml\" file by executing the que" +
                    "ry \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 ord" +
                    "er by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 609
 testRunner.And("I have the XML file \"StudyPublishExpected09.xml\" available in the project folder." +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 610
 testRunner.And("I have the XML file \"StudyPublishActual09.xml\" available in the Test XML Files fo" +
                    "lder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table54.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table54.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table54.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table54.AddRow(new string[] {
                        "",
                        "FileOID"});
            table54.AddRow(new string[] {
                        "",
                        "SourceID"});
            table54.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 611
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table54, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T53_Expand the Visit (week2) event and open the FormD1 form and update the data.")]
        public virtual void T53_ExpandTheVisitWeek2EventAndOpenTheFormD1FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T53_Expand the Visit (week2) event and open the FormD1 form and update the data.", null, ((string[])(null)));
#line 620
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 621
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 622
    testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 623
    testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 624
 testRunner.And("I expand \"Visit (week2)\" to select and open \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 625
 testRunner.When("I click \"Checkout\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 626
    testRunner.And("I expand row \"1\" of table \"AutoBuildQuestionsForD1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table55.AddRow(new string[] {
                        "No",
                        "1",
                        "CRF Lab (Original) Unit for D1",
                        "Unit 3",
                        "Unit 4",
                        "SEC",
                        "ListBox",
                        "Save & Close Row"});
#line 627
    testRunner.And("I enter below \"AutoBuildQuestionsForD1:\" table questions data in the CRF.", ((string)(null)), table55, "And ");
#line 630
 testRunner.And("I click on \"Save & Close\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 631
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T54_Upload and Stage a Study which has major study changes")]
        public virtual void T54_UploadAndStageAStudyWhichHasMajorStudyChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T54_Upload and Stage a Study which has major study changes", null, ((string[])(null)));
#line 634
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 635
 testRunner.When("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 636
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 637
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 638
 testRunner.And("I upload study \"Import_Study1_AllDictionaryChanges.zip\" with Label \"Major1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 639
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 640
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 641
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 642
 testRunner.Then("I see notes \"Note: Major changes have been detected to the study design. Patient " +
                    "migration will be required.\" in StudyVersionPropertiesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T55_Publish the study file that has Major changes")]
        public virtual void T55_PublishTheStudyFileThatHasMajorChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T55_Publish the study file that has Major changes", null, ((string[])(null)));
#line 644
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 645
 testRunner.When("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 646
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 647
 testRunner.And("I select patient migration option \"Migrate all patients\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 648
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 649
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table56.AddRow(new string[] {
                        "Migration of Site 01 for Study file (Major1) - complete. 1 out of 1 patients migr" +
                            "ated successfully. To review see migration report."});
            table56.AddRow(new string[] {
                        "Publishing of Study file (Major1) - complete."});
#line 650
 testRunner.And("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table56, "And ");
#line 654
 testRunner.Then("I do not see the Tab \"Local Labs\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T56_Expand the Visit (week2) event and open the FormD1 form and update the data.")]
        public virtual void T56_ExpandTheVisitWeek2EventAndOpenTheFormD1FormAndUpdateTheData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T56_Expand the Visit (week2) event and open the FormD1 form and update the data.", null, ((string[])(null)));
#line 656
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 657
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 658
    testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 659
    testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 660
 testRunner.And("I expand \"Visit (week2)\" to select and open \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 661
 testRunner.When("I click \"Checkout\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 662
    testRunner.And("I expand row \"1\" of table \"AutoBuildQuestionsForD1:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table57.AddRow(new string[] {
                        "No",
                        "1",
                        "CRF Lab (Original) Unit for D1",
                        "Unit 4",
                        "Unit 3",
                        "SEC",
                        "ListBox",
                        "Save & Close Row"});
#line 663
    testRunner.And("I enter below \"AutoBuildQuestionsForD1:\" table questions data in the CRF.", ((string)(null)), table57, "And ");
#line 666
 testRunner.And("I click on \"Save & Close\" button on \"FormD1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 667
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T57_Upload and Stage a Study which has major study changes")]
        public virtual void T57_UploadAndStageAStudyWhichHasMajorStudyChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T57_Upload and Stage a Study which has major study changes", null, ((string[])(null)));
#line 671
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 672
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 673
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 674
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 675
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 676
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 677
 testRunner.And("I upload study \"Study Publish_No_Yes.zip\" with Label \"Major1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 678
 testRunner.And("I click continue in modal dialog having title \"Confirm\" and partial message \"Uplo" +
                    "aded study version has Local Labs as Enabled which is different from earlier stu" +
                    "dy version.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 679
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 680
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 681
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 682
 testRunner.Then("I see notes \"Note: Major changes have been detected to the study design. Patient " +
                    "migration will be required.\" in StudyVersionPropertiesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T58_Publish the study file that has Major changes")]
        public virtual void T58_PublishTheStudyFileThatHasMajorChanges()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T58_Publish the study file that has Major changes", null, ((string[])(null)));
#line 684
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 685
 testRunner.When("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 686
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 687
 testRunner.And("I select patient migration option \"Migrate all patients\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 688
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 689
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table58.AddRow(new string[] {
                        "Migration of Site 01 for Study file (Major1) - complete. 1 out of 1 patients migr" +
                            "ated successfully. To review see migration report."});
            table58.AddRow(new string[] {
                        "Publishing of Study file (Major1) - complete."});
#line 690
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table58, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T59_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 696
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 697
 testRunner.Given("I save the Event XML data in \"StudyPublishActual.xml\" file by executing the query" +
                    " \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 order" +
                    " by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 698
 testRunner.And("I have the XML file \"StudyPublishExpected.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 699
 testRunner.And("I have the XML file \"StudyPublishActual.xml\" available in the Test XML Files fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table59.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table59.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table59.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table59.AddRow(new string[] {
                        "",
                        "FileOID"});
            table59.AddRow(new string[] {
                        "",
                        "SourceID"});
            table59.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 700
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table59, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T60_Add a new lab test reference range record under Lab02 under WBC")]
        public virtual void T60_AddANewLabTestReferenceRangeRecordUnderLab02UnderWBC()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T60_Add a new lab test reference range record under Lab02 under WBC", null, ((string[])(null)));
#line 709
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 710
 testRunner.Given("I navigate to \"Local Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 711
    testRunner.When("I open lab with labid \"L02\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 712
 testRunner.And("I open labtest with labname \"MRRTEST1\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate",
                        "Gender",
                        "FromAgeSelect",
                        "FromAgeSet",
                        "ToAgeSelect",
                        "ToAgeSet",
                        "NormalRangeLowSelect",
                        "NormalRangeLowSet",
                        "NormalRangeHighSelect",
                        "NormalRangeHighSet",
                        "ClinicalRangeLowSelect",
                        "ClinicalRangeLowSet",
                        "ClinicalRangeHighSelect",
                        "ClinicalRangeHighSet",
                        "Unit",
                        "NA"});
            table60.AddRow(new string[] {
                        "02/03/2019",
                        "03/03/2040",
                        "Male",
                        ">",
                        "0",
                        "<",
                        "35",
                        ">",
                        "10",
                        "<",
                        "15",
                        ">",
                        "5",
                        "<",
                        "20",
                        "3Unit",
                        "False"});
#line 713
 testRunner.And("I click add and enter reference ranges of a lab test and Save and can see \"LabTes" +
                    "t Reference Range Added Successfully\" message upon each record save in Reference" +
                    "RangesPage including NA", ((string)(null)), table60, "And ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReferenceRangeID"});
            table61.AddRow(new string[] {
                        "{ReferenceRangeID1}"});
#line 716
 testRunner.Then("I see the reference range ids in the Reference Range Table.", ((string)(null)), table61, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T61_Verify the XML Data evented out for the Item Data is entered via Flag Update")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US67434.1")]
        public virtual void T61_VerifyTheXMLDataEventedOutForTheItemDataIsEnteredViaFlagUpdate()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T61_Verify the XML Data evented out for the Item Data is entered via Flag Update", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US67434.1"});
#line 721
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 722
 testRunner.Given("I save the Event XML data in \"StudyPublishActual.xml\" file by executing the query" +
                    " \"select TOP 1 XmlMessage from OdmSubscriberDetail where StudyEventKey = 8 order" +
                    " by OdmSubscriberDetailKey desc\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 723
 testRunner.And("I have the XML file \"StudyPublishExpected.xml\" available in the project folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 724
 testRunner.And("I have the XML file \"StudyPublishActual.xml\" available in the Test XML Files fold" +
                    "er.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table62.AddRow(new string[] {
                        "",
                        "CreationDateTime"});
            table62.AddRow(new string[] {
                        "",
                        "DateTimeStamp"});
            table62.AddRow(new string[] {
                        "",
                        "SubjectKey"});
            table62.AddRow(new string[] {
                        "",
                        "FileOID"});
            table62.AddRow(new string[] {
                        "",
                        "SourceID"});
            table62.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
#line 725
 testRunner.Then("I verify that the data in both XML files is same except for below tags and fields" +
                    ".", ((string)(null)), table62, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

