// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.CodelistLinkages
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Linkages_ViewSaveUpdateOnCRF")]
    public partial class Linkages_ViewSaveUpdateOnCRFFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "Linkages_ViewSaveUpdateOnCRF.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Linkages_ViewSaveUpdateOnCRF", "\tVerify Codelist Linkages on CRF Page.\r\n\tSelect Value for Primary question item a" +
                    "nd verify code items display on secondary question.", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T01_Login to DataLabs application as administrator user.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void T01_LoginToDataLabsApplicationAsAdministratorUser_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T01_Login to DataLabs application as administrator user.", null, new string[] {
                        "ObjectiveEvidence"});
#line 6
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 7
 testRunner.Given("I have logged into DataLabs application as an Administrator user.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T02_Delete a study")]
        public virtual void T02_DeleteAStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T02_Delete a study", null, ((string[])(null)));
#line 10
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 11
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 12
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T03_01_Publish a study.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US40539.1,US40539.2,US40539.3")]
        public virtual void T03_01_PublishAStudy_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T03_01_Publish a study.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US40539.1,US40539.2,US40539.3"});
#line 15
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 16
 testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.And("I upload a study \"Test4500_CodelistLinkages_Base.Zip\" with study label \"L1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.Then("I see study label \"Test4500_GM\" in header.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T03_02_Select Complete Change History")]
        public virtual void T03_02_SelectCompleteChangeHistory()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T03_02_Select Complete Change History", null, ((string[])(null)));
#line 20
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 21
 testRunner.When("I select DataManagerPortal item \"User Preferences\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
 testRunner.When("I select Complete Change History radio button on User Preferences page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
 testRunner.And("I click Save button on User Preferences page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
 testRunner.Then("I see Save Success message on User Preferences page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T04_Add Site.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US37916.1")]
        public virtual void T04_AddSite_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T04_Add Site.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US37916.1"});
#line 28
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 29
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteId",
                        "SiteName",
                        "Address1",
                        "Address2",
                        "Address3",
                        "Address4",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "SiteStatus",
                        "DCFWorkflow",
                        "ExternalSource",
                        "ExternalId"});
            table1.AddRow(new string[] {
                        "S11",
                        "Site1",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        ""});
#line 31
 testRunner.And("I enter sites details and Save", ((string)(null)), table1, "And ");
#line 34
 testRunner.And("I open site with siteid \"S11\" and site name \"Site1\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 35
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 36
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 37
 testRunner.Then("I see Site details page for \"S11-Site1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T05_Navigate to Patients tab and select a site and add patient(s).")]
        public virtual void T05_NavigateToPatientsTabAndSelectASiteAndAddPatientS_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T05_Navigate to Patients tab and select a site and add patient(s).", null, ((string[])(null)));
#line 39
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 40
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 41
 testRunner.And("I select the site \"S11-Site1\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table2.AddRow(new string[] {
                        "01",
                        "PAT",
                        "06/12/2017"});
            table2.AddRow(new string[] {
                        "02",
                        "PAT",
                        "06/13/2017"});
            table2.AddRow(new string[] {
                        "03",
                        "PAT",
                        "06/14/2017"});
            table2.AddRow(new string[] {
                        "04",
                        "PAT",
                        "06/15/2017"});
            table2.AddRow(new string[] {
                        "05",
                        "PAT",
                        "06/16/2017"});
            table2.AddRow(new string[] {
                        "06",
                        "PAT",
                        "06/17/2017"});
#line 42
 testRunner.When("I add patient with below details.", ((string)(null)), table2, "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table3.AddRow(new string[] {
                        "01-PAT"});
            table3.AddRow(new string[] {
                        "02-PAT"});
            table3.AddRow(new string[] {
                        "03-PAT"});
            table3.AddRow(new string[] {
                        "04-PAT"});
            table3.AddRow(new string[] {
                        "05-PAT"});
            table3.AddRow(new string[] {
                        "06-PAT"});
#line 50
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T06_Select a form, enter value for primary question to verify relation items on s" +
            "econdary question")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.1,US41971.3")]
        public virtual void T06_SelectAFormEnterValueForPrimaryQuestionToVerifyRelationItemsOnSecondaryQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T06_Select a form, enter value for primary question to verify relation items on s" +
                    "econdary question", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.1,US41971.3"});
#line 61
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 62
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 63
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
 testRunner.And("I click \"Checkout\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table4.AddRow(new string[] {
                        "Continent",
                        "Asia",
                        "ListBox"});
#line 65
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table5.AddRow(new string[] {
                        "[Blank]"});
            table5.AddRow(new string[] {
                        "AS_India"});
            table5.AddRow(new string[] {
                        "AS_China"});
            table5.AddRow(new string[] {
                        "AS_Japan"});
#line 68
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"Country\" on the CRF.", ((string)(null)), table5, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T07_Select a form, enter value for primary question to verify relation items on s" +
            "econdary question")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.1,US41971.1")]
        public virtual void T07_SelectAFormEnterValueForPrimaryQuestionToVerifyRelationItemsOnSecondaryQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T07_Select a form, enter value for primary question to verify relation items on s" +
                    "econdary question", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.1,US41971.1"});
#line 75
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 76
 testRunner.When("I click on \"Cancel\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 77
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
 testRunner.And("I click \"Checkout\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table6.AddRow(new string[] {
                        "Continent",
                        "Africa",
                        "ListBox"});
#line 79
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table6, "And ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table7.AddRow(new string[] {
                        "[Blank]"});
            table7.AddRow(new string[] {
                        "AF_Kenya"});
            table7.AddRow(new string[] {
                        "AF_SouthAfrica"});
            table7.AddRow(new string[] {
                        "AF_Egypt"});
#line 82
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"Country\" on the CRF.", ((string)(null)), table7, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T08_Select a form, enter value for primary question to verify relation items on s" +
            "econdary question")]
        public virtual void T08_SelectAFormEnterValueForPrimaryQuestionToVerifyRelationItemsOnSecondaryQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T08_Select a form, enter value for primary question to verify relation items on s" +
                    "econdary question", null, ((string[])(null)));
#line 89
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 90
 testRunner.When("I click on \"Cancel\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 91
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.And("I click \"Checkout\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table8.AddRow(new string[] {
                        "Continent",
                        "Europe",
                        "ListBox"});
#line 93
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table8, "And ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table9.AddRow(new string[] {
                        "[Blank]"});
            table9.AddRow(new string[] {
                        "EU_France"});
            table9.AddRow(new string[] {
                        "EU_Germany"});
            table9.AddRow(new string[] {
                        "EU_Italy"});
#line 96
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"Country\" on the CRF.", ((string)(null)), table9, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T09_Select a form, enter value for primary question to verify relation items on s" +
            "econdary question")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.2")]
        public virtual void T09_SelectAFormEnterValueForPrimaryQuestionToVerifyRelationItemsOnSecondaryQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T09_Select a form, enter value for primary question to verify relation items on s" +
                    "econdary question", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.2"});
#line 105
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 106
 testRunner.When("I click on \"Cancel\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 107
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 108
 testRunner.And("I click \"Checkout\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table10.AddRow(new string[] {
                        "Continent",
                        "[Blank]",
                        "ListBox"});
#line 109
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table10, "And ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table11.AddRow(new string[] {
                        "[Blank]"});
            table11.AddRow(new string[] {
                        "AS_India"});
            table11.AddRow(new string[] {
                        "AS_China"});
            table11.AddRow(new string[] {
                        "AS_Japan"});
            table11.AddRow(new string[] {
                        "AF_Kenya"});
            table11.AddRow(new string[] {
                        "AF_SouthAfrica"});
            table11.AddRow(new string[] {
                        "AF_Egypt"});
            table11.AddRow(new string[] {
                        "EU_France"});
            table11.AddRow(new string[] {
                        "EU_Germany"});
            table11.AddRow(new string[] {
                        "EU_Italy"});
#line 112
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"Country\" on the CRF.", ((string)(null)), table11, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T10_01_Select a form, enter value for primary and secondary question and verify d" +
            "ata on CRF view page.")]
        public virtual void T10_01_SelectAFormEnterValueForPrimaryAndSecondaryQuestionAndVerifyDataOnCRFViewPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T10_01_Select a form, enter value for primary and secondary question and verify d" +
                    "ata on CRF view page.", null, ((string[])(null)));
#line 125
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 126
 testRunner.When("I click on \"Cancel\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 127
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.And("I click \"Checkout\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table12.AddRow(new string[] {
                        "Continent",
                        "Asia",
                        "ListBox"});
            table12.AddRow(new string[] {
                        "Country",
                        "AS_India",
                        "ListBox"});
#line 129
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table12, "And ");
#line 133
 testRunner.And("I click \"Save\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table13.AddRow(new string[] {
                        "Continent",
                        "Asia",
                        "Text"});
            table13.AddRow(new string[] {
                        "Country",
                        "AS_India",
                        "Text"});
#line 134
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table13, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T10_02_Select Change History icon for Q1.Response displays as \"Asia\" and Reason a" +
            "s \"Initial Entry\" and Notes as \"Submitted\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T10_02_SelectChangeHistoryIconForQ1_ResponseDisplaysAsAsiaAndReasonAsInitialEntryAndNotesAsSubmitted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T10_02_Select Change History icon for Q1.Response displays as \"Asia\" and Reason a" +
                    "s \"Initial Entry\" and Notes as \"Submitted\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 141
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 142
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Continent\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table14.AddRow(new string[] {
                        "",
                        "Asia",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 143
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table14, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T10_03_Select Change History icon for Q2. Response display as \"AS_India\" and Reas" +
            "on as \"Initial Entry\" and Notes as \"Submitted\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T10_03_SelectChangeHistoryIconForQ2_ResponseDisplayAsAS_IndiaAndReasonAsInitialEntryAndNotesAsSubmitted()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T10_03_Select Change History icon for Q2. Response display as \"AS_India\" and Reas" +
                    "on as \"Initial Entry\" and Notes as \"Submitted\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 147
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 148
 testRunner.When("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 149
 testRunner.And("I click icon \"changeHistory.gif\" for the flat question \"Country\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table15.AddRow(new string[] {
                        "",
                        "AS_India",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 150
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table15, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T11_Select a form, Verify listbox items on un-submitted CRF without checkout.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US42987.1,US42987.1,US42987.2,US42987.4")]
        public virtual void T11_SelectAFormVerifyListboxItemsOnUn_SubmittedCRFWithoutCheckout_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T11_Select a form, Verify listbox items on un-submitted CRF without checkout.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US42987.1,US42987.1,US42987.2,US42987.4"});
#line 156
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 157
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 158
 testRunner.And("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 159
 testRunner.When("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 160
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table16.AddRow(new string[] {
                        "[Blank]"});
            table16.AddRow(new string[] {
                        "Asia"});
            table16.AddRow(new string[] {
                        "Africa"});
            table16.AddRow(new string[] {
                        "Europe"});
#line 161
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"Continent\" on the CRF.", ((string)(null)), table16, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table17.AddRow(new string[] {
                        "[Blank]"});
            table17.AddRow(new string[] {
                        "AS_India"});
            table17.AddRow(new string[] {
                        "AS_China"});
            table17.AddRow(new string[] {
                        "AS_Japan"});
            table17.AddRow(new string[] {
                        "AF_Kenya"});
            table17.AddRow(new string[] {
                        "AF_SouthAfrica"});
            table17.AddRow(new string[] {
                        "AF_Egypt"});
            table17.AddRow(new string[] {
                        "EU_France"});
            table17.AddRow(new string[] {
                        "EU_Germany"});
            table17.AddRow(new string[] {
                        "EU_Italy"});
#line 167
 testRunner.And("I Verify below \"ListBox\" items are displayed in \"Country\" on the CRF.", ((string)(null)), table17, "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table18.AddRow(new string[] {
                        "MultiLanguage"});
            table18.AddRow(new string[] {
                        "Chinese"});
            table18.AddRow(new string[] {
                        "Japanese"});
#line 179
 testRunner.And("I Verify below \"ListBox\" items are displayed in \"CountryLanguage\" on the CRF.", ((string)(null)), table18, "And ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table19.AddRow(new string[] {
                        "Constitutional Monarchy"});
            table19.AddRow(new string[] {
                        "Communist Monarchy"});
            table19.AddRow(new string[] {
                        "Democratic Monarchy"});
#line 184
 testRunner.And("I Verify below \"ListBox\" items are displayed in \"Country Government\" on the CRF.", ((string)(null)), table19, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T12_Select a form, verify data on un-submitted CRF after checkout.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.5,US42987.1,US42987.2,US42987.4")]
        public virtual void T12_SelectAFormVerifyDataOnUn_SubmittedCRFAfterCheckout_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T12_Select a form, verify data on un-submitted CRF after checkout.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.5,US42987.1,US42987.2,US42987.4"});
#line 190
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 191
 testRunner.When("I click \"Checkout\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table20.AddRow(new string[] {
                        "Continent",
                        "[Blank]",
                        "ListBox"});
            table20.AddRow(new string[] {
                        "Country",
                        "[Blank]",
                        "ListBox"});
            table20.AddRow(new string[] {
                        "CountryLanguage",
                        "[Blank]",
                        "ListBox"});
            table20.AddRow(new string[] {
                        "Country Government",
                        "[Blank]",
                        "ListBox"});
#line 192
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table20, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T13_Select a form, enter value for primary question to verify relation items on s" +
            "econdary question.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US42987.1,US42987.2,US42987.4")]
        public virtual void T13_SelectAFormEnterValueForPrimaryQuestionToVerifyRelationItemsOnSecondaryQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T13_Select a form, enter value for primary question to verify relation items on s" +
                    "econdary question.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US42987.1,US42987.2,US42987.4"});
#line 199
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table21.AddRow(new string[] {
                        "Continent",
                        "Asia",
                        "ListBox"});
            table21.AddRow(new string[] {
                        "Country",
                        "AS_India",
                        "ListBox"});
#line 200
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table21, "When ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table22.AddRow(new string[] {
                        "[Blank]"});
            table22.AddRow(new string[] {
                        "MultiLanguage"});
#line 204
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"CountryLanguage\" on the CRF.", ((string)(null)), table22, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table23.AddRow(new string[] {
                        "[Blank]"});
            table23.AddRow(new string[] {
                        "Democratic Monarchy"});
#line 208
 testRunner.And("I Verify below \"ListBox\" items are displayed in \"Country Government\" on the CRF.", ((string)(null)), table23, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T14_Select a form, enter value for primary question to verify relation items on s" +
            "econdary question.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US42987.1,US42987.2,US42987.4")]
        public virtual void T14_SelectAFormEnterValueForPrimaryQuestionToVerifyRelationItemsOnSecondaryQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T14_Select a form, enter value for primary question to verify relation items on s" +
                    "econdary question.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US42987.1,US42987.2,US42987.4"});
#line 213
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table24.AddRow(new string[] {
                        "Continent",
                        "Asia",
                        "ListBox"});
            table24.AddRow(new string[] {
                        "Country",
                        "AS_China",
                        "ListBox"});
#line 214
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table24, "When ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table25.AddRow(new string[] {
                        "[Blank]"});
            table25.AddRow(new string[] {
                        "Chinese"});
#line 218
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"CountryLanguage\" on the CRF.", ((string)(null)), table25, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table26.AddRow(new string[] {
                        "[Blank]"});
            table26.AddRow(new string[] {
                        "Communist Monarchy"});
#line 222
 testRunner.And("I Verify below \"ListBox\" items are displayed in \"Country Government\" on the CRF.", ((string)(null)), table26, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T15_Select a form, enter value for primary question to verify relation items on s" +
            "econdary question.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US42987.1,US42987.2,US42987.4")]
        public virtual void T15_SelectAFormEnterValueForPrimaryQuestionToVerifyRelationItemsOnSecondaryQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T15_Select a form, enter value for primary question to verify relation items on s" +
                    "econdary question.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US42987.1,US42987.2,US42987.4"});
#line 227
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table27.AddRow(new string[] {
                        "Continent",
                        "Asia",
                        "ListBox"});
            table27.AddRow(new string[] {
                        "Country",
                        "AS_Japan",
                        "ListBox"});
#line 228
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table27, "When ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table28.AddRow(new string[] {
                        "[Blank]"});
            table28.AddRow(new string[] {
                        "Japanese"});
#line 232
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"CountryLanguage\" on the CRF.", ((string)(null)), table28, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table29.AddRow(new string[] {
                        "[Blank]"});
            table29.AddRow(new string[] {
                        "Constitutional Monarchy"});
#line 236
 testRunner.And("I Verify below \"ListBox\" items are displayed in \"Country Government\" on the CRF.", ((string)(null)), table29, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T16_Select a form, enter value for primary question to verify relation items on s" +
            "econdary question.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US42987.1,US42987.2,US42987.4")]
        public virtual void T16_SelectAFormEnterValueForPrimaryQuestionToVerifyRelationItemsOnSecondaryQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T16_Select a form, enter value for primary question to verify relation items on s" +
                    "econdary question.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US42987.1,US42987.2,US42987.4"});
#line 241
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table30.AddRow(new string[] {
                        "Continent",
                        "Africa",
                        "ListBox"});
            table30.AddRow(new string[] {
                        "Country",
                        "[Blank]",
                        "ListBox"});
#line 242
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table30, "When ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table31.AddRow(new string[] {
                        "[Blank]"});
            table31.AddRow(new string[] {
                        "MultiLanguage"});
            table31.AddRow(new string[] {
                        "Chinese"});
            table31.AddRow(new string[] {
                        "Japanese"});
#line 246
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"CountryLanguage\" on the CRF.", ((string)(null)), table31, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table32.AddRow(new string[] {
                        "[Blank]"});
            table32.AddRow(new string[] {
                        "Constitutional Monarchy"});
            table32.AddRow(new string[] {
                        "Communist Monarchy"});
            table32.AddRow(new string[] {
                        "Democratic Monarchy"});
#line 252
 testRunner.And("I Verify below \"ListBox\" items are displayed in \"Country Government\" on the CRF.", ((string)(null)), table32, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T17_Select a form, enter value for primary question to verify relation items on s" +
            "econdary question.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US42987.1,US42987.2,US42987.4")]
        public virtual void T17_SelectAFormEnterValueForPrimaryQuestionToVerifyRelationItemsOnSecondaryQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T17_Select a form, enter value for primary question to verify relation items on s" +
                    "econdary question.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US42987.1,US42987.2,US42987.4"});
#line 262
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table33.AddRow(new string[] {
                        "Continent",
                        "Africa",
                        "ListBox"});
            table33.AddRow(new string[] {
                        "Country",
                        "AF_Kenya",
                        "ListBox"});
#line 263
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table33, "When ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table34.AddRow(new string[] {
                        "MultiLanguage"});
            table34.AddRow(new string[] {
                        "Chinese"});
            table34.AddRow(new string[] {
                        "Japanese"});
#line 267
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"CountryLanguage\" on the CRF.", ((string)(null)), table34, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table35.AddRow(new string[] {
                        "[Blank]"});
#line 272
 testRunner.And("I Verify below \"ListBox\" items are displayed in \"Country Government\" on the CRF.", ((string)(null)), table35, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T18_01_Select a form, enter value for primary and secondary question and verify d" +
            "ata on CRF view page.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US42987.1,US42987.2,US42987.4")]
        public virtual void T18_01_SelectAFormEnterValueForPrimaryAndSecondaryQuestionAndVerifyDataOnCRFViewPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T18_01_Select a form, enter value for primary and secondary question and verify d" +
                    "ata on CRF view page.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US42987.1,US42987.2,US42987.4"});
#line 276
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table36.AddRow(new string[] {
                        "Continent",
                        "Asia",
                        "ListBox"});
            table36.AddRow(new string[] {
                        "Country",
                        "AS_India",
                        "ListBox"});
            table36.AddRow(new string[] {
                        "CountryLanguage",
                        "MultiLanguage",
                        "ListBox"});
            table36.AddRow(new string[] {
                        "Country Government",
                        "Democratic Monarchy",
                        "ListBox"});
#line 277
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table36, "When ");
#line 283
 testRunner.And("I click \"Save\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table37.AddRow(new string[] {
                        "Continent",
                        "Asia",
                        "Text"});
            table37.AddRow(new string[] {
                        "Country",
                        "AS_India",
                        "Text"});
            table37.AddRow(new string[] {
                        "CountryLanguage",
                        "MultiLanguage",
                        "Text"});
            table37.AddRow(new string[] {
                        "Country Government",
                        "Democratic Monarchy",
                        "Text"});
#line 284
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table37, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T18_02_Select Change History icon for Q1")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T18_02_SelectChangeHistoryIconForQ1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T18_02_Select Change History icon for Q1", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 292
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 293
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Continent\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table38.AddRow(new string[] {
                        "",
                        "Asia",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 294
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table38, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T18_03_Select Change History icon for Q1")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T18_03_SelectChangeHistoryIconForQ1()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T18_03_Select Change History icon for Q1", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 298
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 299
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 300
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Country\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table39.AddRow(new string[] {
                        "",
                        "AS_India",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 301
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table39, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T18_04_Select Change History for Q3")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T18_04_SelectChangeHistoryForQ3()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T18_04_Select Change History for Q3", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 305
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 306
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 307
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"CountryLanguage\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table40.AddRow(new string[] {
                        "",
                        "MultiLanguage",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 308
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table40, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T18_05_Select Change History for Q4")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T18_05_SelectChangeHistoryForQ4()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T18_05_Select Change History for Q4", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 312
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 313
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 314
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Country Government\" in CR" +
                    "F", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table41.AddRow(new string[] {
                        "",
                        "Democratic Monarchy",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 315
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table41, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T19_Select a form, Verify radio items on un-submitted CRF without checkout.")]
        public virtual void T19_SelectAFormVerifyRadioItemsOnUn_SubmittedCRFWithoutCheckout_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T19_Select a form, Verify radio items on un-submitted CRF without checkout.", null, ((string[])(null)));
#line 321
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 322
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 323
 testRunner.And("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 324
 testRunner.When("I select the patient \"03-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 325
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table42.AddRow(new string[] {
                        "[Blank]"});
            table42.AddRow(new string[] {
                        "Length"});
            table42.AddRow(new string[] {
                        "Width"});
            table42.AddRow(new string[] {
                        "Speed"});
            table42.AddRow(new string[] {
                        "Weight"});
#line 326
 testRunner.Then("I Verify below \"RadioGroup\" items are displayed in \"TypeOfMeasurement\" on the CRF" +
                    ".", ((string)(null)), table42, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table43.AddRow(new string[] {
                        "[Blank]"});
            table43.AddRow(new string[] {
                        "Feets"});
            table43.AddRow(new string[] {
                        "Meters"});
            table43.AddRow(new string[] {
                        "Kgs"});
            table43.AddRow(new string[] {
                        "Grams"});
            table43.AddRow(new string[] {
                        "MilliGrams"});
            table43.AddRow(new string[] {
                        "KMPH"});
#line 333
 testRunner.And("I Verify below \"RadioGroup\" items are displayed in \"Measurement\" on the CRF.", ((string)(null)), table43, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T20_Select a form, verify data on un-submitted CRF after checkout.")]
        public virtual void T20_SelectAFormVerifyDataOnUn_SubmittedCRFAfterCheckout_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T20_Select a form, verify data on un-submitted CRF after checkout.", null, ((string[])(null)));
#line 343
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 344
 testRunner.When("I click \"Checkout\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table44.AddRow(new string[] {
                        "TypeOfMeasurement",
                        "[Blank]",
                        "Radio"});
            table44.AddRow(new string[] {
                        "Measurement",
                        "[Blank]",
                        "Radio"});
#line 345
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table44, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T21_Select a form, enter value for primary question to verify relation items on s" +
            "econdary question.")]
        public virtual void T21_SelectAFormEnterValueForPrimaryQuestionToVerifyRelationItemsOnSecondaryQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T21_Select a form, enter value for primary question to verify relation items on s" +
                    "econdary question.", null, ((string[])(null)));
#line 351
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table45.AddRow(new string[] {
                        "TypeOfMeasurement",
                        "Length",
                        "Radio"});
#line 352
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table45, "When ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table46.AddRow(new string[] {
                        "[Blank]"});
            table46.AddRow(new string[] {
                        "Feets"});
            table46.AddRow(new string[] {
                        "Meters"});
#line 355
 testRunner.Then("I Verify below \"RadioGroup\" items are displayed in \"Measurement\" on the CRF.", ((string)(null)), table46, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T22_Select a form, enter value for primary question to verify relation items on s" +
            "econdary question.")]
        public virtual void T22_SelectAFormEnterValueForPrimaryQuestionToVerifyRelationItemsOnSecondaryQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T22_Select a form, enter value for primary question to verify relation items on s" +
                    "econdary question.", null, ((string[])(null)));
#line 361
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table47.AddRow(new string[] {
                        "TypeOfMeasurement",
                        "Width",
                        "Radio"});
#line 362
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table47, "When ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table48.AddRow(new string[] {
                        "[Blank]"});
            table48.AddRow(new string[] {
                        "Feets"});
            table48.AddRow(new string[] {
                        "Meters"});
#line 365
 testRunner.Then("I Verify below \"RadioGroup\" items are displayed in \"Measurement\" on the CRF.", ((string)(null)), table48, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T23_Select a form, enter value for primary question to verify relation items on s" +
            "econdary question.")]
        public virtual void T23_SelectAFormEnterValueForPrimaryQuestionToVerifyRelationItemsOnSecondaryQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T23_Select a form, enter value for primary question to verify relation items on s" +
                    "econdary question.", null, ((string[])(null)));
#line 371
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table49.AddRow(new string[] {
                        "TypeOfMeasurement",
                        "Speed",
                        "Radio"});
#line 372
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table49, "When ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table50.AddRow(new string[] {
                        "KMPH"});
#line 375
 testRunner.Then("I Verify below \"RadioGroup\" items are displayed in \"Measurement\" on the CRF.", ((string)(null)), table50, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T24_Select a form, enter value for primary question to verify relation items on s" +
            "econdary question.")]
        public virtual void T24_SelectAFormEnterValueForPrimaryQuestionToVerifyRelationItemsOnSecondaryQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T24_Select a form, enter value for primary question to verify relation items on s" +
                    "econdary question.", null, ((string[])(null)));
#line 379
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table51.AddRow(new string[] {
                        "TypeOfMeasurement",
                        "Weight",
                        "Radio"});
#line 380
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table51, "When ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table52.AddRow(new string[] {
                        "Kgs"});
            table52.AddRow(new string[] {
                        "Grams"});
            table52.AddRow(new string[] {
                        "MilliGrams"});
#line 383
 testRunner.Then("I Verify below \"RadioGroup\" items are displayed in \"Measurement\" on the CRF.", ((string)(null)), table52, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T25_01_Select a form, enter value for primary and secondary question and verify d" +
            "ata on CRF view page.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.6")]
        public virtual void T25_01_SelectAFormEnterValueForPrimaryAndSecondaryQuestionAndVerifyDataOnCRFViewPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T25_01_Select a form, enter value for primary and secondary question and verify d" +
                    "ata on CRF view page.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.6"});
#line 389
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table53.AddRow(new string[] {
                        "TypeOfMeasurement",
                        "Length",
                        "Radio"});
            table53.AddRow(new string[] {
                        "Measurement",
                        "Feets",
                        "Radio"});
#line 390
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table53, "When ");
#line 394
 testRunner.And("I click \"Save\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table54.AddRow(new string[] {
                        "TypeOfMeasurement",
                        "Length",
                        "Text"});
            table54.AddRow(new string[] {
                        "Measurement",
                        "Feets",
                        "Text"});
#line 395
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table54, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T25_02_Select the Change history icon for the question \"TypeOfMeasurement\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T25_02_SelectTheChangeHistoryIconForTheQuestionTypeOfMeasurement()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T25_02_Select the Change history icon for the question \"TypeOfMeasurement\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 401
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 402
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"TypeOfMeasurement\" in CRF" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table55.AddRow(new string[] {
                        "",
                        "Length",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 403
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table55, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T25_03_Select Change history icon for the question \"Measurement\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T25_03_SelectChangeHistoryIconForTheQuestionMeasurement()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T25_03_Select Change history icon for the question \"Measurement\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 407
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 408
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 409
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Measurement\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table56.AddRow(new string[] {
                        "",
                        "Feets",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 410
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table56, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T26_Select a form, Verify radio and listbox items on un-submitted CRF without che" +
            "ckout.")]
        public virtual void T26_SelectAFormVerifyRadioAndListboxItemsOnUn_SubmittedCRFWithoutCheckout_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T26_Select a form, Verify radio and listbox items on un-submitted CRF without che" +
                    "ckout.", null, ((string[])(null)));
#line 416
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 417
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 418
 testRunner.When("I select the patient \"04-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 419
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table57.AddRow(new string[] {
                        "[Blank]"});
            table57.AddRow(new string[] {
                        "PrimaryColors"});
            table57.AddRow(new string[] {
                        "SecondaryColors"});
#line 420
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"ColorType\" on the CRF.", ((string)(null)), table57, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table58.AddRow(new string[] {
                        "[Blank]"});
            table58.AddRow(new string[] {
                        "Red"});
            table58.AddRow(new string[] {
                        "Yellow"});
            table58.AddRow(new string[] {
                        "Blue"});
            table58.AddRow(new string[] {
                        "Green"});
            table58.AddRow(new string[] {
                        "Brown"});
            table58.AddRow(new string[] {
                        "White"});
            table58.AddRow(new string[] {
                        "Black"});
#line 425
 testRunner.And("I Verify below \"RadioGroup\" items are displayed in \"Color\" on the CRF.", ((string)(null)), table58, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T27_Select a form, verify data on un-submitted CRF after checkout.")]
        public virtual void T27_SelectAFormVerifyDataOnUn_SubmittedCRFAfterCheckout_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T27_Select a form, verify data on un-submitted CRF after checkout.", null, ((string[])(null)));
#line 436
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 437
 testRunner.When("I click \"Checkout\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table59.AddRow(new string[] {
                        "ColorType",
                        "[Blank]",
                        "ListBox"});
            table59.AddRow(new string[] {
                        "Color",
                        "[Blank]",
                        "Radio"});
#line 438
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table59, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T28_Select a form, enter value for primary question to verify relation items on s" +
            "econdary question.")]
        public virtual void T28_SelectAFormEnterValueForPrimaryQuestionToVerifyRelationItemsOnSecondaryQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T28_Select a form, enter value for primary question to verify relation items on s" +
                    "econdary question.", null, ((string[])(null)));
#line 444
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table60.AddRow(new string[] {
                        "ColorType",
                        "[Blank]",
                        "ListBox"});
#line 445
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table60, "When ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table61.AddRow(new string[] {
                        "[Blank]"});
            table61.AddRow(new string[] {
                        "Red"});
            table61.AddRow(new string[] {
                        "Yellow"});
            table61.AddRow(new string[] {
                        "Blue"});
            table61.AddRow(new string[] {
                        "Green"});
            table61.AddRow(new string[] {
                        "Brown"});
            table61.AddRow(new string[] {
                        "White"});
            table61.AddRow(new string[] {
                        "Black"});
#line 448
 testRunner.Then("I Verify below \"RadioGroup\" items are displayed in \"Color\" on the CRF.", ((string)(null)), table61, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T29_Select a form, enter value for primary question to verify relation items on s" +
            "econdary question.")]
        public virtual void T29_SelectAFormEnterValueForPrimaryQuestionToVerifyRelationItemsOnSecondaryQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T29_Select a form, enter value for primary question to verify relation items on s" +
                    "econdary question.", null, ((string[])(null)));
#line 459
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table62 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table62.AddRow(new string[] {
                        "ColorType",
                        "PrimaryColors",
                        "ListBox"});
#line 460
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table62, "When ");
#line hidden
            TechTalk.SpecFlow.Table table63 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table63.AddRow(new string[] {
                        "[Blank]"});
            table63.AddRow(new string[] {
                        "Red"});
            table63.AddRow(new string[] {
                        "Yellow"});
            table63.AddRow(new string[] {
                        "Blue"});
#line 463
 testRunner.Then("I Verify below \"RadioGroup\" items are displayed in \"Color\" on the CRF.", ((string)(null)), table63, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T30_Select a form, enter value for primary question to verify relation items on s" +
            "econdary question.")]
        public virtual void T30_SelectAFormEnterValueForPrimaryQuestionToVerifyRelationItemsOnSecondaryQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T30_Select a form, enter value for primary question to verify relation items on s" +
                    "econdary question.", null, ((string[])(null)));
#line 470
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table64 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table64.AddRow(new string[] {
                        "ColorType",
                        "SecondaryColors",
                        "ListBox"});
#line 471
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table64, "When ");
#line hidden
            TechTalk.SpecFlow.Table table65 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table65.AddRow(new string[] {
                        "[Blank]"});
            table65.AddRow(new string[] {
                        "Green"});
            table65.AddRow(new string[] {
                        "Brown"});
            table65.AddRow(new string[] {
                        "White"});
            table65.AddRow(new string[] {
                        "Black"});
#line 474
 testRunner.Then("I Verify below \"RadioGroup\" items are displayed in \"Color\" on the CRF.", ((string)(null)), table65, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T31_01_Select a form, enter value for primary and secondary question and verify d" +
            "ata on CRF view page.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.6")]
        public virtual void T31_01_SelectAFormEnterValueForPrimaryAndSecondaryQuestionAndVerifyDataOnCRFViewPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T31_01_Select a form, enter value for primary and secondary question and verify d" +
                    "ata on CRF view page.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.6"});
#line 482
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table66 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table66.AddRow(new string[] {
                        "ColorType",
                        "SecondaryColors",
                        "ListBox"});
            table66.AddRow(new string[] {
                        "Color",
                        "White",
                        "Radio"});
#line 483
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table66, "When ");
#line 487
 testRunner.And("I click \"Save\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table67 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table67.AddRow(new string[] {
                        "ColorType",
                        "SecondaryColors",
                        "Text"});
            table67.AddRow(new string[] {
                        "Color",
                        "White",
                        "Text"});
#line 488
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table67, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T31_02_Select Change history icon for the question \"ColorType\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T31_02_SelectChangeHistoryIconForTheQuestionColorType()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T31_02_Select Change history icon for the question \"ColorType\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 494
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 495
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"ColorType\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table68 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table68.AddRow(new string[] {
                        "",
                        "SecondaryColors",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 496
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table68, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T31_03_Select Change history icon for the question \"Color\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T31_03_SelectChangeHistoryIconForTheQuestionColor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T31_03_Select Change history icon for the question \"Color\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 500
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 501
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 502
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Color\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table69 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table69.AddRow(new string[] {
                        "",
                        "White",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 503
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table69, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T32_Select a form, Verify radio and listbox items on un-submitted CRF without che" +
            "ckout.")]
        public virtual void T32_SelectAFormVerifyRadioAndListboxItemsOnUn_SubmittedCRFWithoutCheckout_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T32_Select a form, Verify radio and listbox items on un-submitted CRF without che" +
                    "ckout.", null, ((string[])(null)));
#line 509
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 510
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 511
 testRunner.When("I select the patient \"05-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 512
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table70 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table70.AddRow(new string[] {
                        "[Blank]"});
            table70.AddRow(new string[] {
                        "Cricket"});
            table70.AddRow(new string[] {
                        "kabaddi"});
            table70.AddRow(new string[] {
                        "VolleyBall"});
#line 513
 testRunner.Then("I Verify below \"RadioGroup\" items are displayed in \"Game\" on the CRF.", ((string)(null)), table70, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table71 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table71.AddRow(new string[] {
                        "6"});
            table71.AddRow(new string[] {
                        "11"});
            table71.AddRow(new string[] {
                        "7"});
#line 519
 testRunner.And("I Verify below \"ListBox\" items are displayed in \"NoOfPlayes\" on the CRF.", ((string)(null)), table71, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T33_Select a form, verify data on un-submitted CRF after checkout.")]
        public virtual void T33_SelectAFormVerifyDataOnUn_SubmittedCRFAfterCheckout_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T33_Select a form, verify data on un-submitted CRF after checkout.", null, ((string[])(null)));
#line 525
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 526
 testRunner.When("I click \"Checkout\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table72 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table72.AddRow(new string[] {
                        "Game",
                        "[Blank]",
                        "Radio"});
            table72.AddRow(new string[] {
                        "NoOfPlayes",
                        "[Blank]",
                        "ListBox"});
#line 527
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table72, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T34_Select a form, enter value for primary question to verify relation items on s" +
            "econdary question.")]
        public virtual void T34_SelectAFormEnterValueForPrimaryQuestionToVerifyRelationItemsOnSecondaryQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T34_Select a form, enter value for primary question to verify relation items on s" +
                    "econdary question.", null, ((string[])(null)));
#line 533
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table73 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table73.AddRow(new string[] {
                        "Game",
                        "Cricket",
                        "Radio"});
#line 534
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table73, "When ");
#line hidden
            TechTalk.SpecFlow.Table table74 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table74.AddRow(new string[] {
                        "11"});
#line 537
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"NoOfPlayes\" on the CRF.", ((string)(null)), table74, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T35_Select a form, enter value for primary question to verify relation items on s" +
            "econdary question.")]
        public virtual void T35_SelectAFormEnterValueForPrimaryQuestionToVerifyRelationItemsOnSecondaryQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T35_Select a form, enter value for primary question to verify relation items on s" +
                    "econdary question.", null, ((string[])(null)));
#line 542
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table75 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table75.AddRow(new string[] {
                        "Game",
                        "[Blank]",
                        "Radio"});
#line 543
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table75, "When ");
#line hidden
            TechTalk.SpecFlow.Table table76 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table76.AddRow(new string[] {
                        "6"});
            table76.AddRow(new string[] {
                        "11"});
            table76.AddRow(new string[] {
                        "7"});
#line 546
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"NoOfPlayes\" on the CRF.", ((string)(null)), table76, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T36_Select a form, enter value for primary question to verify relation items on s" +
            "econdary question.")]
        public virtual void T36_SelectAFormEnterValueForPrimaryQuestionToVerifyRelationItemsOnSecondaryQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T36_Select a form, enter value for primary question to verify relation items on s" +
                    "econdary question.", null, ((string[])(null)));
#line 552
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table77 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table77.AddRow(new string[] {
                        "Game",
                        "kabaddi",
                        "Radio"});
#line 553
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table77, "When ");
#line hidden
            TechTalk.SpecFlow.Table table78 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table78.AddRow(new string[] {
                        "7"});
#line 556
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"NoOfPlayes\" on the CRF.", ((string)(null)), table78, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T37_Select a form, enter value for primary and secondary question and verify data" +
            " on CRF view page.")]
        public virtual void T37_SelectAFormEnterValueForPrimaryAndSecondaryQuestionAndVerifyDataOnCRFViewPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T37_Select a form, enter value for primary and secondary question and verify data" +
                    " on CRF view page.", null, ((string[])(null)));
#line 560
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table79 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table79.AddRow(new string[] {
                        "Game",
                        "VolleyBall",
                        "Radio"});
#line 561
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table79, "When ");
#line hidden
            TechTalk.SpecFlow.Table table80 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table80.AddRow(new string[] {
                        "6"});
#line 564
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"NoOfPlayes\" on the CRF.", ((string)(null)), table80, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T38_01_Select a form, enter value for primary and secondary question and verify d" +
            "ata on CRF view page.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.6")]
        public virtual void T38_01_SelectAFormEnterValueForPrimaryAndSecondaryQuestionAndVerifyDataOnCRFViewPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T38_01_Select a form, enter value for primary and secondary question and verify d" +
                    "ata on CRF view page.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.6"});
#line 568
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 569
 testRunner.When("I click \"Save\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table81 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table81.AddRow(new string[] {
                        "Game",
                        "VolleyBall",
                        "Text"});
            table81.AddRow(new string[] {
                        "NoOfPlayes",
                        "6",
                        "ListBox"});
#line 570
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table81, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T38_02_Select the change history icon for the question \"Game\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T38_02_SelectTheChangeHistoryIconForTheQuestionGame()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T38_02_Select the change history icon for the question \"Game\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 576
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 577
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Game\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table82 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table82.AddRow(new string[] {
                        "",
                        "VolleyBall",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 578
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table82, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T38_03_Close the Change history pop up")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T38_03_CloseTheChangeHistoryPopUp()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T38_03_Close the Change history pop up", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 582
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 583
 testRunner.When("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 584
 testRunner.Then("I dont see icon \"changeHistory.gif\" for the flat question \"NoOfPlayes\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T39_Select a form, verify primary and secondary data on submitted CRF after check" +
            "out.")]
        public virtual void T39_SelectAFormVerifyPrimaryAndSecondaryDataOnSubmittedCRFAfterCheckout_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T39_Select a form, verify primary and secondary data on submitted CRF after check" +
                    "out.", null, ((string[])(null)));
#line 586
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 588
 testRunner.When("I click \"Checkout\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table83 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table83.AddRow(new string[] {
                        "Game",
                        "VolleyBall",
                        "Link"});
            table83.AddRow(new string[] {
                        "NoOfPlayes",
                        "6",
                        "ListBox"});
#line 589
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table83, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T40_Select a form, Update value for primary question and verify secondary data on" +
            " submitted CRF after checkout.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.4")]
        public virtual void T40_SelectAFormUpdateValueForPrimaryQuestionAndVerifySecondaryDataOnSubmittedCRFAfterCheckout_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T40_Select a form, Update value for primary question and verify secondary data on" +
                    " submitted CRF after checkout.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.4"});
#line 594
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table84 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes"});
            table84.AddRow(new string[] {
                        "Game",
                        "VolleyBall",
                        "Radio",
                        "Cricket",
                        "SOR",
                        "Updated"});
#line 595
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table84, "When ");
#line hidden
            TechTalk.SpecFlow.Table table85 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table85.AddRow(new string[] {
                        "11"});
#line 598
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"NoOfPlayes\" on the CRF.", ((string)(null)), table85, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T41_01_Select a form, Update value for secondary question and verify data on subm" +
            "itted CRF view page.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.6")]
        public virtual void T41_01_SelectAFormUpdateValueForSecondaryQuestionAndVerifyDataOnSubmittedCRFViewPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T41_01_Select a form, Update value for secondary question and verify data on subm" +
                    "itted CRF view page.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.6"});
#line 602
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table86 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table86.AddRow(new string[] {
                        "NoOfPlayes",
                        "11",
                        "ListBox"});
#line 603
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table86, "When ");
#line 606
 testRunner.And("I click \"Save\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table87 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table87.AddRow(new string[] {
                        "Game",
                        "Cricket",
                        "Text"});
            table87.AddRow(new string[] {
                        "NoOfPlayes",
                        "11",
                        "ListBox"});
#line 607
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table87, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T41_02_Select Change history icon for the question \"Game\" and I cannot see change" +
            " history icon for the question \"NoOfPlayers\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T41_02_SelectChangeHistoryIconForTheQuestionGameAndICannotSeeChangeHistoryIconForTheQuestionNoOfPlayers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T41_02_Select Change history icon for the question \"Game\" and I cannot see change" +
                    " history icon for the question \"NoOfPlayers\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 614
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 615
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Game\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table88 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table88.AddRow(new string[] {
                        "",
                        "Cricket",
                        "Reason: SOR\\r\nNotes: Updated"});
#line 616
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table88, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T41_03_Close the Change History pop up")]
        public virtual void T41_03_CloseTheChangeHistoryPopUp()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T41_03_Close the Change History pop up", null, ((string[])(null)));
#line 619
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 620
 testRunner.When("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 621
 testRunner.Then("I dont see icon \"changeHistory.gif\" for the flat question \"NoOfPlayes\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T42_Select a form, Verify radio and listbox items on un-submitted CRF without che" +
            "ckout.")]
        public virtual void T42_SelectAFormVerifyRadioAndListboxItemsOnUn_SubmittedCRFWithoutCheckout_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T42_Select a form, Verify radio and listbox items on un-submitted CRF without che" +
                    "ckout.", null, ((string[])(null)));
#line 624
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 625
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 626
 testRunner.When("I select the patient \"06-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 627
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table89 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table89.AddRow(new string[] {
                        "[Blank]"});
            table89.AddRow(new string[] {
                        "MPC"});
            table89.AddRow(new string[] {
                        "BiPC"});
            table89.AddRow(new string[] {
                        "CEC"});
#line 628
 testRunner.Then("I Verify below \"RadioGroup\" items are displayed in \"IntermediateCourses\" on the C" +
                    "RF.", ((string)(null)), table89, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table90 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table90.AddRow(new string[] {
                        "Maths"});
            table90.AddRow(new string[] {
                        "Physics"});
            table90.AddRow(new string[] {
                        "Chemistry"});
            table90.AddRow(new string[] {
                        "Botony"});
            table90.AddRow(new string[] {
                        "Zoology"});
            table90.AddRow(new string[] {
                        "Civics"});
            table90.AddRow(new string[] {
                        "Economics"});
            table90.AddRow(new string[] {
                        "Commerce"});
            table90.AddRow(new string[] {
                        "C"});
            table90.AddRow(new string[] {
                        "C++"});
            table90.AddRow(new string[] {
                        "ComputerArchitecture"});
            table90.AddRow(new string[] {
                        "DataStructures"});
            table90.AddRow(new string[] {
                        "DigitalElectronics"});
            table90.AddRow(new string[] {
                        "MicroProcessor"});
            table90.AddRow(new string[] {
                        "MicroController"});
#line 634
 testRunner.And("I Verify below \"ListBox\" items are displayed in \"MPC Subjects\" on the CRF.", ((string)(null)), table90, "And ");
#line hidden
            TechTalk.SpecFlow.Table table91 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table91.AddRow(new string[] {
                        "Maths"});
            table91.AddRow(new string[] {
                        "Physics"});
            table91.AddRow(new string[] {
                        "Chemistry"});
            table91.AddRow(new string[] {
                        "Botony"});
            table91.AddRow(new string[] {
                        "Zoology"});
            table91.AddRow(new string[] {
                        "Civics"});
            table91.AddRow(new string[] {
                        "Economics"});
            table91.AddRow(new string[] {
                        "Commerce"});
            table91.AddRow(new string[] {
                        "C"});
            table91.AddRow(new string[] {
                        "C++"});
            table91.AddRow(new string[] {
                        "ComputerArchitecture"});
            table91.AddRow(new string[] {
                        "DataStructures"});
            table91.AddRow(new string[] {
                        "DigitalElectronics"});
            table91.AddRow(new string[] {
                        "MicroProcessor"});
            table91.AddRow(new string[] {
                        "MicroController"});
#line 651
 testRunner.And("I Verify below \"ListBox\" items are displayed in \"BiPC Subjects\" on the CRF.", ((string)(null)), table91, "And ");
#line hidden
            TechTalk.SpecFlow.Table table92 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table92.AddRow(new string[] {
                        "Maths"});
            table92.AddRow(new string[] {
                        "Physics"});
            table92.AddRow(new string[] {
                        "Chemistry"});
            table92.AddRow(new string[] {
                        "Botony"});
            table92.AddRow(new string[] {
                        "Zoology"});
            table92.AddRow(new string[] {
                        "Civics"});
            table92.AddRow(new string[] {
                        "Economics"});
            table92.AddRow(new string[] {
                        "Commerce"});
            table92.AddRow(new string[] {
                        "C"});
            table92.AddRow(new string[] {
                        "C++"});
            table92.AddRow(new string[] {
                        "ComputerArchitecture"});
            table92.AddRow(new string[] {
                        "DataStructures"});
            table92.AddRow(new string[] {
                        "DigitalElectronics"});
            table92.AddRow(new string[] {
                        "MicroProcessor"});
            table92.AddRow(new string[] {
                        "MicroController"});
#line 668
 testRunner.And("I Verify below \"ListBox\" items are displayed in \"CEC Subjects\" on the CRF.", ((string)(null)), table92, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T43_Select a form, verify data on un-submitted CRF after checkout.")]
        public virtual void T43_SelectAFormVerifyDataOnUn_SubmittedCRFAfterCheckout_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T43_Select a form, verify data on un-submitted CRF after checkout.", null, ((string[])(null)));
#line 686
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 687
 testRunner.When("I click \"Checkout\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table93 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table93.AddRow(new string[] {
                        "IntermediateCourses",
                        "[Blank]",
                        "Radio"});
            table93.AddRow(new string[] {
                        "MPC Subjects",
                        "Maths",
                        "ListBox"});
            table93.AddRow(new string[] {
                        "BiPC Subjects",
                        "Maths",
                        "ListBox"});
            table93.AddRow(new string[] {
                        "CEC Subjects",
                        "Maths",
                        "ListBox"});
#line 688
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table93, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T44_Select a form, enter value for primary question to verify relation items on s" +
            "econdary question.")]
        public virtual void T44_SelectAFormEnterValueForPrimaryQuestionToVerifyRelationItemsOnSecondaryQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T44_Select a form, enter value for primary question to verify relation items on s" +
                    "econdary question.", null, ((string[])(null)));
#line 696
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table94 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table94.AddRow(new string[] {
                        "IntermediateCourses",
                        "MPC",
                        "Radio"});
#line 697
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table94, "When ");
#line hidden
            TechTalk.SpecFlow.Table table95 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table95.AddRow(new string[] {
                        "Maths"});
            table95.AddRow(new string[] {
                        "Physics"});
            table95.AddRow(new string[] {
                        "Chemistry"});
#line 700
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"MPC Subjects\" on the CRF.", ((string)(null)), table95, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table96 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table96.AddRow(new string[] {
                        "Maths"});
            table96.AddRow(new string[] {
                        "Physics"});
            table96.AddRow(new string[] {
                        "Chemistry"});
#line 705
 testRunner.And("I Verify below \"ListBox\" items are displayed in \"BiPC Subjects\" on the CRF.", ((string)(null)), table96, "And ");
#line hidden
            TechTalk.SpecFlow.Table table97 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table97.AddRow(new string[] {
                        "Maths"});
            table97.AddRow(new string[] {
                        "Physics"});
            table97.AddRow(new string[] {
                        "Chemistry"});
#line 710
 testRunner.And("I Verify below \"ListBox\" items are displayed in \"CEC Subjects\" on the CRF.", ((string)(null)), table97, "And ");
#line hidden
            TechTalk.SpecFlow.Table table98 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table98.AddRow(new string[] {
                        "Botony"});
            table98.AddRow(new string[] {
                        "Zoology"});
            table98.AddRow(new string[] {
                        "Civics"});
            table98.AddRow(new string[] {
                        "Economics"});
            table98.AddRow(new string[] {
                        "Commerce"});
            table98.AddRow(new string[] {
                        "C"});
            table98.AddRow(new string[] {
                        "C++"});
            table98.AddRow(new string[] {
                        "ComputerArchitecture"});
            table98.AddRow(new string[] {
                        "DataStructures"});
            table98.AddRow(new string[] {
                        "DigitalElectronics"});
            table98.AddRow(new string[] {
                        "MicroProcessor"});
            table98.AddRow(new string[] {
                        "MicroController"});
#line 715
 testRunner.And("I Verify below \"ListBox\" items are not displayed in \"CEC Subjects\" on the CRF.", ((string)(null)), table98, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T45_Select a form, enter value for primary question to verify relation items on s" +
            "econdary question.")]
        public virtual void T45_SelectAFormEnterValueForPrimaryQuestionToVerifyRelationItemsOnSecondaryQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T45_Select a form, enter value for primary question to verify relation items on s" +
                    "econdary question.", null, ((string[])(null)));
#line 730
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table99 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table99.AddRow(new string[] {
                        "IntermediateCourses",
                        "[Blank]",
                        "Radio"});
#line 731
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table99, "When ");
#line hidden
            TechTalk.SpecFlow.Table table100 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table100.AddRow(new string[] {
                        "Maths"});
            table100.AddRow(new string[] {
                        "Physics"});
            table100.AddRow(new string[] {
                        "Chemistry"});
            table100.AddRow(new string[] {
                        "Botony"});
            table100.AddRow(new string[] {
                        "Zoology"});
            table100.AddRow(new string[] {
                        "Civics"});
            table100.AddRow(new string[] {
                        "Economics"});
            table100.AddRow(new string[] {
                        "Commerce"});
            table100.AddRow(new string[] {
                        "C"});
            table100.AddRow(new string[] {
                        "C++"});
            table100.AddRow(new string[] {
                        "ComputerArchitecture"});
            table100.AddRow(new string[] {
                        "DataStructures"});
            table100.AddRow(new string[] {
                        "DigitalElectronics"});
            table100.AddRow(new string[] {
                        "MicroProcessor"});
            table100.AddRow(new string[] {
                        "MicroController"});
#line 734
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"MPC Subjects\" on the CRF.", ((string)(null)), table100, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table101 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table101.AddRow(new string[] {
                        "Maths"});
            table101.AddRow(new string[] {
                        "Physics"});
            table101.AddRow(new string[] {
                        "Chemistry"});
            table101.AddRow(new string[] {
                        "Botony"});
            table101.AddRow(new string[] {
                        "Zoology"});
            table101.AddRow(new string[] {
                        "Civics"});
            table101.AddRow(new string[] {
                        "Economics"});
            table101.AddRow(new string[] {
                        "Commerce"});
            table101.AddRow(new string[] {
                        "C"});
            table101.AddRow(new string[] {
                        "C++"});
            table101.AddRow(new string[] {
                        "ComputerArchitecture"});
            table101.AddRow(new string[] {
                        "DataStructures"});
            table101.AddRow(new string[] {
                        "DigitalElectronics"});
            table101.AddRow(new string[] {
                        "MicroProcessor"});
            table101.AddRow(new string[] {
                        "MicroController"});
#line 751
 testRunner.And("I Verify below \"ListBox\" items are displayed in \"BiPC Subjects\" on the CRF.", ((string)(null)), table101, "And ");
#line hidden
            TechTalk.SpecFlow.Table table102 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table102.AddRow(new string[] {
                        "Maths"});
            table102.AddRow(new string[] {
                        "Physics"});
            table102.AddRow(new string[] {
                        "Chemistry"});
            table102.AddRow(new string[] {
                        "Botony"});
            table102.AddRow(new string[] {
                        "Zoology"});
            table102.AddRow(new string[] {
                        "Civics"});
            table102.AddRow(new string[] {
                        "Economics"});
            table102.AddRow(new string[] {
                        "Commerce"});
            table102.AddRow(new string[] {
                        "C"});
            table102.AddRow(new string[] {
                        "C++"});
            table102.AddRow(new string[] {
                        "ComputerArchitecture"});
            table102.AddRow(new string[] {
                        "DataStructures"});
            table102.AddRow(new string[] {
                        "DigitalElectronics"});
            table102.AddRow(new string[] {
                        "MicroProcessor"});
            table102.AddRow(new string[] {
                        "MicroController"});
#line 768
 testRunner.And("I Verify below \"ListBox\" items are displayed in \"CEC Subjects\" on the CRF.", ((string)(null)), table102, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T46_01_Select a form, enter value for primary and secondary questions and verify " +
            "data on CRF view page.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.6")]
        public virtual void T46_01_SelectAFormEnterValueForPrimaryAndSecondaryQuestionsAndVerifyDataOnCRFViewPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T46_01_Select a form, enter value for primary and secondary questions and verify " +
                    "data on CRF view page.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.6"});
#line 786
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table103 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table103.AddRow(new string[] {
                        "IntermediateCourses",
                        "BiPC",
                        "Radio"});
            table103.AddRow(new string[] {
                        "MPC Subjects",
                        "Chemistry",
                        "ListBox"});
            table103.AddRow(new string[] {
                        "BiPC Subjects",
                        "Botony",
                        "ListBox"});
            table103.AddRow(new string[] {
                        "CEC Subjects",
                        "Physics",
                        "ListBox"});
#line 787
 testRunner.When("I enter below flat questions data in the CRF.", ((string)(null)), table103, "When ");
#line 793
 testRunner.And("I click \"Save\" button on \"LinkagesForm_FlatQuestions\" CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table104 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table104.AddRow(new string[] {
                        "IntermediateCourses",
                        "BiPC",
                        "Text"});
            table104.AddRow(new string[] {
                        "MPC Subjects",
                        "Chemistry",
                        "Text"});
            table104.AddRow(new string[] {
                        "BiPC Subjects",
                        "Botony",
                        "Text"});
#line 794
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table104, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table105 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table105.AddRow(new string[] {
                        "Physics"});
            table105.AddRow(new string[] {
                        "Chemistry"});
            table105.AddRow(new string[] {
                        "Botony"});
            table105.AddRow(new string[] {
                        "Zoology"});
#line 799
 testRunner.And("I Verify below \"ListBox\" items are displayed in \"CEC Subjects\" on the CRF.", ((string)(null)), table105, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T46_02_Select the Change history icon for the Question \"IntermediateCourses\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T46_02_SelectTheChangeHistoryIconForTheQuestionIntermediateCourses()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T46_02_Select the Change history icon for the Question \"IntermediateCourses\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 808
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 809
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"IntermediateCourses\" in C" +
                    "RF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table106 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table106.AddRow(new string[] {
                        "",
                        "BiPC",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 810
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table106, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T46_03_Select the Change history icon for the Question \"MPC Subjects\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T46_03_SelectTheChangeHistoryIconForTheQuestionMPCSubjects()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T46_03_Select the Change history icon for the Question \"MPC Subjects\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 814
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 815
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 816
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"MPC Subjects\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table107 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table107.AddRow(new string[] {
                        "",
                        "Chemistry",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 817
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table107, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T46_04_Select the Change history icon for the Question \"MPC Subjects\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T46_04_SelectTheChangeHistoryIconForTheQuestionMPCSubjects()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T46_04_Select the Change history icon for the Question \"MPC Subjects\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 821
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 822
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 823
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"BiPC Subjects\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table108 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table108.AddRow(new string[] {
                        "",
                        "Botony",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 824
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table108, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T46_05_I cannot see change history icon for the question \"CEC Subjects\" in CRF")]
        public virtual void T46_05_ICannotSeeChangeHistoryIconForTheQuestionCECSubjectsInCRF()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T46_05_I cannot see change history icon for the question \"CEC Subjects\" in CRF", null, ((string[])(null)));
#line 828
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 829
 testRunner.When("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 830
 testRunner.Then("I dont see icon \"changeHistory.gif\" for the flat question \"CEC Subjects\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T47_01_Select a form, Update value for primary question and verify secondary ques" +
            "tion data on submitted CRF view page.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.6")]
        public virtual void T47_01_SelectAFormUpdateValueForPrimaryQuestionAndVerifySecondaryQuestionDataOnSubmittedCRFViewPage_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T47_01_Select a form, Update value for primary question and verify secondary ques" +
                    "tion data on submitted CRF view page.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.6"});
#line 834
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 835
 testRunner.When("I click \"Checkout\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table109 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table109.AddRow(new string[] {
                        "CountryLanguage",
                        "MultiLanguage",
                        "ListBox"});
#line 836
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table109, "And ");
#line hidden
            TechTalk.SpecFlow.Table table110 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes"});
            table110.AddRow(new string[] {
                        "IntermediateCourses",
                        "BiPC",
                        "Radio",
                        "CEC",
                        "DCF",
                        "Updated"});
#line 839
 testRunner.And("I enter below flat questions data in the CRF.", ((string)(null)), table110, "And ");
#line 842
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 843
 testRunner.And("I click \"Save\" button on \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 844
 testRunner.And("I click Continue button of Modal \"Queries Result\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table111 = new TechTalk.SpecFlow.Table(new string[] {
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType"});
            table111.AddRow(new string[] {
                        "IntermediateCourses",
                        "CEC",
                        "Text"});
            table111.AddRow(new string[] {
                        "MPC Subjects",
                        "Civics",
                        "Text"});
            table111.AddRow(new string[] {
                        "BiPC Subjects",
                        "Civics",
                        "Text"});
            table111.AddRow(new string[] {
                        "CEC Subjects",
                        "Civics",
                        "Text"});
#line 845
 testRunner.Then("I verify below flat questions data in the CRF.", ((string)(null)), table111, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T47_02_Select Change history icon for the question \"IntermediateCourses\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T47_02_SelectChangeHistoryIconForTheQuestionIntermediateCourses()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T47_02_Select Change history icon for the question \"IntermediateCourses\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 854
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 855
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"IntermediateCourses\" in C" +
                    "RF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table112 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table112.AddRow(new string[] {
                        "",
                        "CEC",
                        "Reason: DCF\\r\nNotes: Updated"});
#line 856
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table112, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T47_03_Select Change history icon for the question \"MPC Subjects\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T47_03_SelectChangeHistoryIconForTheQuestionMPCSubjects()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T47_03_Select Change history icon for the question \"MPC Subjects\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 860
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 861
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 862
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"MPC Subjects\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table113 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table113.AddRow(new string[] {
                        "",
                        "Civics",
                        "Reason: Linkage\\r\nNotes: Due to response change in the linked field."});
#line 863
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table113, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T47_04_Select Change history icon for the question \"BiPC Subjects\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T47_04_SelectChangeHistoryIconForTheQuestionBiPCSubjects()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T47_04_Select Change history icon for the question \"BiPC Subjects\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 867
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 868
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 869
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"BiPC Subjects\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table114 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table114.AddRow(new string[] {
                        "",
                        "Civics",
                        "Reason: Linkage\\r\nNotes: Due to response change in the linked field."});
#line 870
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table114, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T47_05_Select Change history icon for the question \"CEC Subjects\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T47_05_SelectChangeHistoryIconForTheQuestionCECSubjects()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T47_05_Select Change history icon for the question \"CEC Subjects\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 874
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 875
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 876
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"CEC Subjects\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table115 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table115.AddRow(new string[] {
                        "",
                        "Civics",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 877
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table115, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T48_Verify listbox and radio items of unsubmitted CRF on Non-Autobuild Table form" +
            "")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US42987.1,US42987.2,US42987.4")]
        public virtual void T48_VerifyListboxAndRadioItemsOfUnsubmittedCRFOnNon_AutobuildTableForm()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T48_Verify listbox and radio items of unsubmitted CRF on Non-Autobuild Table form" +
                    "", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US42987.1,US42987.2,US42987.4"});
#line 886
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 887
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 888
 testRunner.When("I click breadcrumb \"06-PAT\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 889
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LinkagesForm_NonAutobuildTable\" CRF" +
                    ".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 890
 testRunner.And("I click \"Checkout\" button on \"LinkagesForm_NonAutobuildTable\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 891
 testRunner.And("I click on \"Add New Row\" button in \"CodeListLinkages table:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table116 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table116.AddRow(new string[] {
                        "[Blank]"});
            table116.AddRow(new string[] {
                        "AS_India"});
            table116.AddRow(new string[] {
                        "AS_China"});
            table116.AddRow(new string[] {
                        "AS_Japan"});
            table116.AddRow(new string[] {
                        "AF_Kenya"});
            table116.AddRow(new string[] {
                        "AF_SouthAfrica"});
            table116.AddRow(new string[] {
                        "AF_Egypt"});
            table116.AddRow(new string[] {
                        "EU_France"});
            table116.AddRow(new string[] {
                        "EU_Germany"});
            table116.AddRow(new string[] {
                        "EU_Italy"});
#line 892
 testRunner.Then("I verify below \"ListBox\" items are displayed for \"Country\" question in row \"1\" of" +
                    " \"CodeListLinkages table:\" table.", ((string)(null)), table116, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table117 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table117.AddRow(new string[] {
                        "[Blank]"});
            table117.AddRow(new string[] {
                        "Feets"});
            table117.AddRow(new string[] {
                        "Meters"});
            table117.AddRow(new string[] {
                        "Kgs"});
            table117.AddRow(new string[] {
                        "Grams"});
            table117.AddRow(new string[] {
                        "MilliGrams"});
            table117.AddRow(new string[] {
                        "KMPH"});
#line 904
 testRunner.And("I verify below \"RadioGroup\" items are displayed for \"Measurement\" question in row" +
                    " \"1\" of \"CodeListLinkages table:\" table.", ((string)(null)), table117, "And ");
#line hidden
            TechTalk.SpecFlow.Table table118 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table118.AddRow(new string[] {
                        "Maths"});
            table118.AddRow(new string[] {
                        "Physics"});
            table118.AddRow(new string[] {
                        "Chemistry"});
            table118.AddRow(new string[] {
                        "Botony"});
            table118.AddRow(new string[] {
                        "Zoology"});
            table118.AddRow(new string[] {
                        "Civics"});
            table118.AddRow(new string[] {
                        "Economics"});
            table118.AddRow(new string[] {
                        "Commerce"});
            table118.AddRow(new string[] {
                        "C"});
            table118.AddRow(new string[] {
                        "C++"});
            table118.AddRow(new string[] {
                        "ComputerArchitecture"});
            table118.AddRow(new string[] {
                        "DataStructures"});
            table118.AddRow(new string[] {
                        "DigitalElectronics"});
            table118.AddRow(new string[] {
                        "MicroProcessor"});
            table118.AddRow(new string[] {
                        "MicroController"});
#line 913
 testRunner.And("I verify below \"CheckBox\" items are displayed for \"CEC Subjects\" question in row " +
                    "\"1\" of \"CodeListLinkages table:\" table.", ((string)(null)), table118, "And ");
#line 930
 testRunner.And("I click table row button \"Cancel Row\" of table \"CodeListLinkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T49_For a table questions, enter value for primary question and verify secondary " +
            "question data")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US42987.1,US42987.2,US42987.4")]
        public virtual void T49_ForATableQuestionsEnterValueForPrimaryQuestionAndVerifySecondaryQuestionData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T49_For a table questions, enter value for primary question and verify secondary " +
                    "question data", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US42987.1,US42987.2,US42987.4"});
#line 935
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table119 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table119.AddRow(new string[] {
                        "Yes",
                        "1",
                        "Continent",
                        "Asia",
                        "ListBox",
                        ""});
            table119.AddRow(new string[] {
                        "No",
                        "1",
                        "TypeOfMeasurement",
                        "Length",
                        "Radio",
                        ""});
            table119.AddRow(new string[] {
                        "No",
                        "1",
                        "ColorType",
                        "SecondaryColors",
                        "ListBox",
                        ""});
            table119.AddRow(new string[] {
                        "No",
                        "1",
                        "Color",
                        "White",
                        "Radio",
                        ""});
            table119.AddRow(new string[] {
                        "No",
                        "1",
                        "Game",
                        "[Blank]",
                        "Radio",
                        ""});
            table119.AddRow(new string[] {
                        "N0",
                        "1",
                        "IntermediateCourses",
                        "MPC",
                        "CheckBox",
                        ""});
#line 936
 testRunner.When("I enter below \"CodeListLinkages table:\" table questions data in the CRF.", ((string)(null)), table119, "When ");
#line hidden
            TechTalk.SpecFlow.Table table120 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table120.AddRow(new string[] {
                        "AS_India"});
            table120.AddRow(new string[] {
                        "AS_China"});
            table120.AddRow(new string[] {
                        "AS_Japan"});
#line 944
 testRunner.Then("I verify below \"ListBox\" items are displayed for \"Country\" question in row \"1\" of" +
                    " \"CodeListLinkages table:\" table.", ((string)(null)), table120, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table121 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table121.AddRow(new string[] {
                        "[Blank]"});
            table121.AddRow(new string[] {
                        "Feets"});
            table121.AddRow(new string[] {
                        "Meters"});
#line 949
 testRunner.And("I verify below \"RadioGroup\" items are displayed for \"Measurement\" question in row" +
                    " \"1\" of \"CodeListLinkages table:\" table.", ((string)(null)), table121, "And ");
#line hidden
            TechTalk.SpecFlow.Table table122 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table122.AddRow(new string[] {
                        "[Blank]"});
            table122.AddRow(new string[] {
                        "Green"});
            table122.AddRow(new string[] {
                        "Brown"});
            table122.AddRow(new string[] {
                        "White"});
            table122.AddRow(new string[] {
                        "Black"});
#line 954
 testRunner.And("I verify below \"RadioGroup\" items are displayed for \"Color\" question in row \"1\" o" +
                    "f \"CodeListLinkages table:\" table.", ((string)(null)), table122, "And ");
#line hidden
            TechTalk.SpecFlow.Table table123 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table123.AddRow(new string[] {
                        "[Blank]"});
            table123.AddRow(new string[] {
                        "6"});
            table123.AddRow(new string[] {
                        "11"});
            table123.AddRow(new string[] {
                        "7"});
#line 961
 testRunner.And("I verify below \"ListBox\" items are displayed for \"NoOfPlayers\" question in row \"1" +
                    "\" of \"CodeListLinkages table:\" table.", ((string)(null)), table123, "And ");
#line hidden
            TechTalk.SpecFlow.Table table124 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table124.AddRow(new string[] {
                        "Maths"});
            table124.AddRow(new string[] {
                        "Physics"});
            table124.AddRow(new string[] {
                        "Chemistry"});
#line 967
 testRunner.And("I verify below \"ListBox\" items are displayed for \"MPC Subjects\" question in row \"" +
                    "1\" of \"CodeListLinkages table:\" table.", ((string)(null)), table124, "And ");
#line hidden
            TechTalk.SpecFlow.Table table125 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table125.AddRow(new string[] {
                        "Maths"});
            table125.AddRow(new string[] {
                        "Physics"});
            table125.AddRow(new string[] {
                        "Chemistry"});
#line 972
 testRunner.And("I verify below \"Radio\" items are displayed for \"BiPC Subjects\" question in row \"1" +
                    "\" of \"CodeListLinkages table:\" table.", ((string)(null)), table125, "And ");
#line hidden
            TechTalk.SpecFlow.Table table126 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table126.AddRow(new string[] {
                        "Maths"});
            table126.AddRow(new string[] {
                        "Physics"});
            table126.AddRow(new string[] {
                        "Chemistry"});
#line 977
 testRunner.And("I verify below \"CheckBox\" items are displayed for \"CEC Subjects\" question in row " +
                    "\"1\" of \"CodeListLinkages table:\" table.", ((string)(null)), table126, "And ");
#line 982
 testRunner.And("I click on \"Cancel\" button on \"LinkagesForm_NonAutobuildTable\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T50_01_For a table questions, enter value for primary question and verify seconda" +
            "ry question data")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.6,US42987.1,US42987.2,US42987.4")]
        public virtual void T50_01_ForATableQuestionsEnterValueForPrimaryQuestionAndVerifySecondaryQuestionData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T50_01_For a table questions, enter value for primary question and verify seconda" +
                    "ry question data", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.6,US42987.1,US42987.2,US42987.4"});
#line 984
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 985
 testRunner.When("I expand \"Visit (Week 2)\" to select and open \"LinkagesForm_NonAutobuildTable\" CRF" +
                    ".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 986
 testRunner.And("I click \"Checkout\" button on \"LinkagesForm_NonAutobuildTable\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table127 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table127.AddRow(new string[] {
                        "Yes",
                        "1",
                        "Continent",
                        "Asia",
                        "ListBox",
                        ""});
            table127.AddRow(new string[] {
                        "No",
                        "1",
                        "TypeOfMeasurement",
                        "Length",
                        "Radio",
                        ""});
            table127.AddRow(new string[] {
                        "No",
                        "1",
                        "ColorType",
                        "SecondaryColors",
                        "ListBox",
                        ""});
            table127.AddRow(new string[] {
                        "No",
                        "1",
                        "Color",
                        "White",
                        "Radio",
                        ""});
            table127.AddRow(new string[] {
                        "No",
                        "1",
                        "Game",
                        "[Blank]",
                        "Radio",
                        ""});
            table127.AddRow(new string[] {
                        "N0",
                        "1",
                        "IntermediateCourses",
                        "MPC",
                        "Checkbox",
                        "Save & Close Row"});
#line 987
 testRunner.And("I enter below \"CodeListLinkages table:\" table questions data in the CRF.", ((string)(null)), table127, "And ");
#line 995
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 996
 testRunner.And("I click on \"Save\" button on \"LinkagesForm_NonAutobuildTable\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 997
 testRunner.And("I click Continue button of Modal \"Queries Result\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table128 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table128.AddRow(new string[] {
                        "1",
                        "Continent",
                        "Asia",
                        "Text",
                        ""});
            table128.AddRow(new string[] {
                        "1",
                        "Country",
                        "[Blank]",
                        "Text",
                        ""});
            table128.AddRow(new string[] {
                        "1",
                        "TypeOfMeasurement",
                        "Length",
                        "Text",
                        ""});
            table128.AddRow(new string[] {
                        "1",
                        "Measurement",
                        "[Blank]",
                        "Text",
                        ""});
            table128.AddRow(new string[] {
                        "1",
                        "ColorType",
                        "SecondaryColors",
                        "Text",
                        ""});
            table128.AddRow(new string[] {
                        "1",
                        "Color",
                        "White",
                        "Text",
                        ""});
            table128.AddRow(new string[] {
                        "1",
                        "Game",
                        "[Blank]",
                        "Text",
                        ""});
            table128.AddRow(new string[] {
                        "1",
                        "NoOfPlayers",
                        "[Blank]",
                        "Text",
                        ""});
            table128.AddRow(new string[] {
                        "1",
                        "IntermediateCourses",
                        "MPC",
                        "Text",
                        ""});
            table128.AddRow(new string[] {
                        "1",
                        "MPC Subjects",
                        "Maths",
                        "Text",
                        ""});
            table128.AddRow(new string[] {
                        "1",
                        "BiPC Subjects",
                        "Maths",
                        "Text",
                        ""});
            table128.AddRow(new string[] {
                        "1",
                        "CEC Subjects",
                        "[Blank]",
                        "Text",
                        "OK"});
#line 998
 testRunner.Then("I verify below \"CodeListLinkages table:\" table questions data in the CRF.", ((string)(null)), table128, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T50_02_Select the table row and Verify change history for the question \"Continent" +
            "\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T50_02_SelectTheTableRowAndVerifyChangeHistoryForTheQuestionContinent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T50_02_Select the table row and Verify change history for the question \"Continent" +
                    "\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 1019
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1020
 testRunner.When("I expand row \"1\" of table \"CodeListLinkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1021
 testRunner.And("I click \"changeHistory.gif\" icon of a question \"Continent\" of table \"CodeListLink" +
                    "ages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table129 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table129.AddRow(new string[] {
                        "",
                        "Asia",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 1022
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table129, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T50_03_Select the table row and Verify change history for the question \"Country\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T50_03_SelectTheTableRowAndVerifyChangeHistoryForTheQuestionCountry()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T50_03_Select the table row and Verify change history for the question \"Country\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 1026
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1027
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1028
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"Country\" of table \"CodeListLinkag" +
                    "es table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table130 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table130.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 1029
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table130, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T50_04_Select the table row and Verify change history for the question \"TypeOfMea" +
            "surement\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T50_04_SelectTheTableRowAndVerifyChangeHistoryForTheQuestionTypeOfMeasurement()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T50_04_Select the table row and Verify change history for the question \"TypeOfMea" +
                    "surement\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 1033
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1034
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1035
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"TypeOfMeasurement\" of table \"Code" +
                    "ListLinkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table131 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table131.AddRow(new string[] {
                        "",
                        "Length",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 1036
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table131, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T50_05_Select the table row and Verify change history for the question \"Measureme" +
            "nt\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T50_05_SelectTheTableRowAndVerifyChangeHistoryForTheQuestionMeasurement()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T50_05_Select the table row and Verify change history for the question \"Measureme" +
                    "nt\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 1040
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1041
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1042
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"Measurement\" of table \"CodeListLi" +
                    "nkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table132 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table132.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 1043
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table132, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T50_06_Select the table row and Verify change history for the question \"ColorType" +
            "\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T50_06_SelectTheTableRowAndVerifyChangeHistoryForTheQuestionColorType()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T50_06_Select the table row and Verify change history for the question \"ColorType" +
                    "\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 1047
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1048
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1049
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"ColorType\" of table \"CodeListLink" +
                    "ages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table133 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table133.AddRow(new string[] {
                        "",
                        "SecondaryColors",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 1050
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table133, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T50_07_Select the table row and Verify change history for the question \"Color\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T50_07_SelectTheTableRowAndVerifyChangeHistoryForTheQuestionColor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T50_07_Select the table row and Verify change history for the question \"Color\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 1055
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1056
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1057
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"Color\" of table \"CodeListLinkages" +
                    " table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table134 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table134.AddRow(new string[] {
                        "",
                        "White",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 1058
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table134, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T50_08_Select the table row and Verify change history for the question \"Game\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T50_08_SelectTheTableRowAndVerifyChangeHistoryForTheQuestionGame()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T50_08_Select the table row and Verify change history for the question \"Game\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 1063
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1064
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1065
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"Game\" of table \"CodeListLinkages " +
                    "table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table135 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table135.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 1066
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table135, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T50_09_Select the table row and Verify change history for the question \"NoOfPlaye" +
            "rs\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T50_09_SelectTheTableRowAndVerifyChangeHistoryForTheQuestionNoOfPlayers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T50_09_Select the table row and Verify change history for the question \"NoOfPlaye" +
                    "rs\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 1071
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1072
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1073
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"NoOfPlayers\" of table \"CodeListLi" +
                    "nkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table136 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table136.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 1074
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table136, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T50_10_Select the table row and Verify change history for the question \"Intermedi" +
            "ateCourses\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T50_10_SelectTheTableRowAndVerifyChangeHistoryForTheQuestionIntermediateCourses()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T50_10_Select the table row and Verify change history for the question \"Intermedi" +
                    "ateCourses\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 1078
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1079
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1080
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"IntermediateCourses\" of table \"Co" +
                    "deListLinkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table137 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table137.AddRow(new string[] {
                        "",
                        "MPC",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 1081
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table137, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T50_11_Select the table row and Verify change history for the question \"MPC Subje" +
            "cts\"")]
        public virtual void T50_11_SelectTheTableRowAndVerifyChangeHistoryForTheQuestionMPCSubjects()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T50_11_Select the table row and Verify change history for the question \"MPC Subje" +
                    "cts\"", null, ((string[])(null)));
#line 1085
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1086
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1087
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"MPC Subjects\" of table \"CodeListL" +
                    "inkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table138 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table138.AddRow(new string[] {
                        "",
                        "Maths",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 1088
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table138, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T50_12_Select the table row and Verify change history for the question \"BiPC Subj" +
            "ects\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T50_12_SelectTheTableRowAndVerifyChangeHistoryForTheQuestionBiPCSubjects()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T50_12_Select the table row and Verify change history for the question \"BiPC Subj" +
                    "ects\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 1092
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1093
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1094
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"BiPC Subjects\" of table \"CodeList" +
                    "Linkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table139 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table139.AddRow(new string[] {
                        "",
                        "Maths",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 1095
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table139, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T50_13_Select the table row and Verify change history for the question \"CEC Subje" +
            "cts\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T50_13_SelectTheTableRowAndVerifyChangeHistoryForTheQuestionCECSubjects()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T50_13_Select the table row and Verify change history for the question \"CEC Subje" +
                    "cts\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 1099
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1100
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1101
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"CEC Subjects\" of table \"CodeListL" +
                    "inkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table140 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table140.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 1102
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table140, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T51_01_Add multiple rows on submitted CRF, Enter value for primary question and v" +
            "erify secondary question data")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.6")]
        public virtual void T51_01_AddMultipleRowsOnSubmittedCRFEnterValueForPrimaryQuestionAndVerifySecondaryQuestionData()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T51_01_Add multiple rows on submitted CRF, Enter value for primary question and v" +
                    "erify secondary question data", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.6"});
#line 1107
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1108
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1109
 testRunner.When("I click \"Checkout\" button on \"LinkagesForm_NonAutobuildTable\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table141 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "CurrentAnswerValue",
                        "AnswerFieldType",
                        "NewAnswerValue",
                        "ReasonForChange",
                        "AdditionalNotes",
                        "RowButtonToClick"});
            table141.AddRow(new string[] {
                        "No",
                        "1",
                        "Country",
                        "[Blank]",
                        "ListBox",
                        "AS_India",
                        "SOR",
                        "",
                        ""});
            table141.AddRow(new string[] {
                        "No",
                        "1",
                        "Measurement",
                        "[Blank]",
                        "Radio",
                        "Feets",
                        "DCF",
                        "Test",
                        ""});
            table141.AddRow(new string[] {
                        "No",
                        "1",
                        "CEC Subjects",
                        "[Blank]",
                        "CheckBox",
                        "Physics",
                        "SEC",
                        "Test",
                        ""});
            table141.AddRow(new string[] {
                        "No",
                        "1",
                        "CEC Subjects",
                        "Physics",
                        "CheckBox",
                        "Chemistry",
                        "SEC",
                        "Test",
                        "Save & Close Row"});
#line 1110
 testRunner.And("I enter below \"CodeListLinkages table:\" table questions data in the CRF.", ((string)(null)), table141, "And ");
#line hidden
            TechTalk.SpecFlow.Table table142 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table142.AddRow(new string[] {
                        "Yes",
                        "2",
                        "Continent",
                        "Europe",
                        "ListBox",
                        ""});
            table142.AddRow(new string[] {
                        "No",
                        "2",
                        "Country",
                        "EU_Italy",
                        "ListBox",
                        ""});
            table142.AddRow(new string[] {
                        "No",
                        "2",
                        "Country_Language",
                        "MultiLanguage",
                        "ListBox",
                        ""});
            table142.AddRow(new string[] {
                        "No",
                        "2",
                        "TypeOfMeasurement",
                        "Speed",
                        "Radio",
                        ""});
            table142.AddRow(new string[] {
                        "No",
                        "2",
                        "ColorType",
                        "PrimaryColors",
                        "ListBox",
                        ""});
            table142.AddRow(new string[] {
                        "No",
                        "2",
                        "Color",
                        "Red",
                        "Radio",
                        ""});
            table142.AddRow(new string[] {
                        "No",
                        "2",
                        "Game",
                        "Cricket",
                        "Radio",
                        ""});
            table142.AddRow(new string[] {
                        "No",
                        "2",
                        "IntermediateCourses",
                        "CEC",
                        "CheckBox",
                        ""});
            table142.AddRow(new string[] {
                        "No",
                        "2",
                        "CEC Subjects",
                        "Civics",
                        "CheckBox",
                        ""});
            table142.AddRow(new string[] {
                        "No",
                        "2",
                        "CEC Subjects",
                        "Economics",
                        "CheckBox",
                        ""});
            table142.AddRow(new string[] {
                        "No",
                        "2",
                        "CEC Subjects",
                        "Commerce",
                        "CheckBox",
                        "Save & Close Row"});
#line 1116
 testRunner.And("I enter below \"CodeListLinkages table:\" table questions data in the CRF.", ((string)(null)), table142, "And ");
#line 1129
 testRunner.And("I select entry complete checkbox on CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1130
 testRunner.And("I click on \"Save\" button on \"LinkagesForm_NonAutobuildTable\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table143 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table143.AddRow(new string[] {
                        "1",
                        "Continent",
                        "Asia",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "1",
                        "Country",
                        "AS_India",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "1",
                        "TypeOfMeasurement",
                        "Length",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "1",
                        "Measurement",
                        "Feets",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "1",
                        "ColorType",
                        "SecondaryColors",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "1",
                        "Color",
                        "White",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "1",
                        "Game",
                        "[Blank]",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "1",
                        "NoOfPlayers",
                        "[Blank]",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "1",
                        "IntermediateCourses",
                        "MPC",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "1",
                        "MPC Subjects",
                        "Maths",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "1",
                        "BiPC Subjects",
                        "Maths",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "1",
                        "CEC Subjects",
                        "Physics\\r\nChemistry",
                        "Text",
                        "OK"});
            table143.AddRow(new string[] {
                        "2",
                        "Continent",
                        "Europe",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "2",
                        "Country",
                        "EU_Italy",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "2",
                        "Country_Language",
                        "MultiLanguage",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "2",
                        "TypeOfMeasurement",
                        "Speed",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "2",
                        "Measurement",
                        "KMPH",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "2",
                        "ColorType",
                        "PrimaryColors",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "2",
                        "Color",
                        "Red",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "2",
                        "Game",
                        "Cricket",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "2",
                        "NoOfPlayers",
                        "11",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "2",
                        "IntermediateCourses",
                        "CEC",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "2",
                        "MPC Subjects",
                        "Civics",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "2",
                        "BiPC Subjects",
                        "Civics",
                        "Text",
                        ""});
            table143.AddRow(new string[] {
                        "2",
                        "CEC Subjects",
                        "Civics\\r\nEconomics\\r\nCommerce",
                        "Text",
                        "OK"});
#line 1131
 testRunner.Then("I verify below \"CodeListLinkages table:\" table questions data in the CRF.", ((string)(null)), table143, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T51_02_Select the row 1 of the table \"CodeListLinkages table:\" and verify the cha" +
            "nge history of Question \"Country\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T51_02_SelectTheRow1OfTheTableCodeListLinkagesTableAndVerifyTheChangeHistoryOfQuestionCountry()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T51_02_Select the row 1 of the table \"CodeListLinkages table:\" and verify the cha" +
                    "nge history of Question \"Country\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 1159
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1160
 testRunner.When("I expand row \"1\" of table \"CodeListLinkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1161
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"Country\" of table \"CodeListLinkag" +
                    "es table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table144 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table144.AddRow(new string[] {
                        "",
                        "AS_India",
                        "Reason: SOR"});
#line 1162
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table144, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T51_03_verify the change history of Question \"Country_Language\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T51_03_VerifyTheChangeHistoryOfQuestionCountry_Language()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T51_03_verify the change history of Question \"Country_Language\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 1166
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1167
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1168
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"Country_Language\" of table \"CodeL" +
                    "istLinkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table145 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table145.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Linkage\\r\nNotes: Due to response change in the linked field."});
#line 1169
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table145, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T51_04_verify the change history of Question \"Country_Government\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T51_04_VerifyTheChangeHistoryOfQuestionCountry_Government()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T51_04_verify the change history of Question \"Country_Government\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 1174
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1175
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1176
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"Country_Government\" of table \"Cod" +
                    "eListLinkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table146 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table146.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Linkage\\r\nNotes: Due to response change in the linked field."});
#line 1177
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table146, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T51_05_verify the change history of Question \"Measurement\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T51_05_VerifyTheChangeHistoryOfQuestionMeasurement()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T51_05_verify the change history of Question \"Measurement\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 1181
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1182
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1183
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"Measurement\" of table \"CodeListLi" +
                    "nkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table147 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table147.AddRow(new string[] {
                        "",
                        "Feets",
                        "Reason: DCF\\r\nNotes: Test"});
#line 1184
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table147, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T51_06_verify the change history of Question \"CEC Subjects\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7,US42987.3")]
        public virtual void T51_06_VerifyTheChangeHistoryOfQuestionCECSubjects()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T51_06_verify the change history of Question \"CEC Subjects\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7,US42987.3"});
#line 1188
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1189
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1190
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"CEC Subjects\" of table \"CodeListL" +
                    "inkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table148 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table148.AddRow(new string[] {
                        "",
                        "Physics; Chemistry",
                        "Reason: SEC\\r\nNotes: Test"});
#line 1191
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table148, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T52_Delete Table Row")]
        public virtual void T52_DeleteTableRow()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T52_Delete Table Row", null, ((string[])(null)));
#line 1197
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1198
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1199
 testRunner.When("I click \"Checkout\" button on \"LinkagesForm_NonAutobuildTable\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1200
 testRunner.And("I expand row \"2\" of table \"CodeListLinkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1201
    testRunner.And("I click table row button \"Delete Row\" of table \"CodeListLinkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1202
    testRunner.And("I select reason for change \"DCF\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1203
    testRunner.And("I enter additional notes \"Delete Table Row Test\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1204
    testRunner.And("I click continue button in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1205
 testRunner.Then("I see deleted row \"2\" of table \"CodeListLinkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T53_01_Restore Table Row")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.6")]
        public virtual void T53_01_RestoreTableRow()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T53_01_Restore Table Row", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.6"});
#line 1207
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1208
 testRunner.When("I expand row \"2\" of table \"CodeListLinkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1209
    testRunner.And("I click table row button \"Restore Row\" of table \"CodeListLinkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1210
    testRunner.And("I select reason for change \"SEC\" in RestoreTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1211
    testRunner.And("I enter additional notes \"Restore Table Row Test\" in RestoreTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1212
    testRunner.And("I click continue button in RestoreTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1213
 testRunner.Then("I see restored row \"2\" of table \"CodeListLinkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1214
 testRunner.And("I click on \"Save\" button on \"LinkagesForm_NonAutobuildTable\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table149 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table149.AddRow(new string[] {
                        "2",
                        "Continent",
                        "Europe",
                        "Text",
                        ""});
            table149.AddRow(new string[] {
                        "2",
                        "Country",
                        "EU_Italy",
                        "Text",
                        ""});
            table149.AddRow(new string[] {
                        "2",
                        "Country_Language",
                        "MultiLanguage",
                        "Text",
                        ""});
            table149.AddRow(new string[] {
                        "2",
                        "TypeOfMeasurement",
                        "Speed",
                        "Text",
                        ""});
            table149.AddRow(new string[] {
                        "2",
                        "Measurement",
                        "KMPH",
                        "Text",
                        ""});
            table149.AddRow(new string[] {
                        "2",
                        "ColorType",
                        "PrimaryColors",
                        "Text",
                        ""});
            table149.AddRow(new string[] {
                        "2",
                        "Color",
                        "Red",
                        "Text",
                        ""});
            table149.AddRow(new string[] {
                        "2",
                        "Game",
                        "Cricket",
                        "Text",
                        ""});
            table149.AddRow(new string[] {
                        "2",
                        "NoOfPlayers",
                        "11",
                        "Text",
                        ""});
            table149.AddRow(new string[] {
                        "2",
                        "IntermediateCourses",
                        "CEC",
                        "Text",
                        ""});
            table149.AddRow(new string[] {
                        "2",
                        "MPC Subjects",
                        "Civics",
                        "Text",
                        ""});
            table149.AddRow(new string[] {
                        "2",
                        "BiPC Subjects",
                        "Civics",
                        "Text",
                        "OK"});
#line 1215
 testRunner.And("I verify below \"CodeListLinkages table:\" table questions data in the CRF.", ((string)(null)), table149, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T53_02_Select Row 2 and Verify the change history for Question \"Country\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T53_02_SelectRow2AndVerifyTheChangeHistoryForQuestionCountry()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T53_02_Select Row 2 and Verify the change history for Question \"Country\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 1231
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1232
 testRunner.When("I expand row \"2\" of table \"CodeListLinkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1233
 testRunner.And("I click \"changeHistory.gif\" icon of a question \"Country\" of table \"CodeListLinkag" +
                    "es table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table150 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table150.AddRow(new string[] {
                        "",
                        "EU_Italy",
                        "Reason: Table Row Delete\\r\nNotes: [Row Deleted] Delete Table Row Test"});
            table150.AddRow(new string[] {
                        "",
                        "EU_Italy",
                        "Reason: Table Row Restore\\r\nNotes: [Row Restored] Restore Table Row Test"});
#line 1234
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table150, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T53_03_Select Row 2 and Verify the change history for Question \"Measurement\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T53_03_SelectRow2AndVerifyTheChangeHistoryForQuestionMeasurement()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T53_03_Select Row 2 and Verify the change history for Question \"Measurement\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 1239
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1240
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1241
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"Measurement\" of table \"CodeListLi" +
                    "nkages table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table151 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table151.AddRow(new string[] {
                        "",
                        "KMPH",
                        "Reason: Table Row Delete\\r\nNotes: [Row Deleted] Delete Table Row Test"});
            table151.AddRow(new string[] {
                        "",
                        "KMPH",
                        "Reason: Table Row Restore\\r\nNotes: [Row Restored] Restore Table Row Test"});
#line 1242
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table151, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T54_For Autobuild Table, verify data for questions.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41796.1.1,US41796.1.2,US41796.1.3")]
        public virtual void T54_ForAutobuildTableVerifyDataForQuestions_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T54_For Autobuild Table, verify data for questions.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41796.1.1,US41796.1.2,US41796.1.3"});
#line 1248
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1249
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1250
 testRunner.When("I click on \"Cancel\" button on \"LinkagesForm_NonAutobuildTable\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1251
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LinkagesForm_AutobuildTable\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1252
 testRunner.And("I click \"Checkout\" button on \"LinkagesForm_AutobuildTable\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table152 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table152.AddRow(new string[] {
                        "1",
                        "Continent",
                        "[Blank]",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "1",
                        "Degree Courses",
                        "[Blank]",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "1",
                        "CSE Subjects",
                        "Maths",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "2",
                        "Continent",
                        "[Blank]",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "2",
                        "Degree Courses",
                        "MPC",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "2",
                        "CSE Subjects",
                        "Maths",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "3",
                        "Continent",
                        "[Blank]",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "3",
                        "Degree Courses",
                        "BiPC",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "3",
                        "CSE Subjects",
                        "Physics",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "4",
                        "Continent",
                        "[Blank]",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "4",
                        "Degree Courses",
                        "CEC",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "4",
                        "CSE Subjects",
                        "Civics",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "5",
                        "Continent",
                        "[Blank]",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "5",
                        "Degree Courses",
                        "CSE",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "5",
                        "CSE Subjects",
                        "C",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "6",
                        "Continent",
                        "[Blank]",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "6",
                        "Degree Courses",
                        "ECE",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "6",
                        "CSE Subjects",
                        "C",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "7",
                        "Continent",
                        "Asia",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "7",
                        "Degree Courses",
                        "[Blank]",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "7",
                        "CSE Subjects",
                        "Maths",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "8",
                        "Continent",
                        "Asia",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "8",
                        "Degree Courses",
                        "MPC",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "8",
                        "CSE Subjects",
                        "Maths",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "9",
                        "Continent",
                        "Asia",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "9",
                        "Degree Courses",
                        "BiPC",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "9",
                        "CSE Subjects",
                        "Physics",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "10",
                        "Continent",
                        "Asia",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "10",
                        "Degree Courses",
                        "CEC",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "10",
                        "CSE Subjects",
                        "Civics",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "11",
                        "Continent",
                        "Asia",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "11",
                        "Degree Courses",
                        "CSE",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "11",
                        "CSE Subjects",
                        "C",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "12",
                        "Continent",
                        "Asia",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "12",
                        "Degree Courses",
                        "ECE",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "12",
                        "CSE Subjects",
                        "C",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "13",
                        "Continent",
                        "Africa",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "13",
                        "Degree Courses",
                        "[Blank]",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "13",
                        "CSE Subjects",
                        "Maths",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "14",
                        "Continent",
                        "Africa",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "14",
                        "Degree Courses",
                        "MPC",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "14",
                        "CSE Subjects",
                        "Maths",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "15",
                        "Continent",
                        "Africa",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "15",
                        "Degree Courses",
                        "BiPC",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "15",
                        "CSE Subjects",
                        "Physics",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "16",
                        "Continent",
                        "Africa",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "16",
                        "Degree Courses",
                        "CEC",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "16",
                        "CSE Subjects",
                        "Civics",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "17",
                        "Continent",
                        "Africa",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "17",
                        "Degree Courses",
                        "CSE",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "17",
                        "CSE Subjects",
                        "C",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "18",
                        "Continent",
                        "Africa",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "18",
                        "Degree Courses",
                        "ECE",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "18",
                        "CSE Subjects",
                        "C",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "19",
                        "Continent",
                        "Europe",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "19",
                        "Degree Courses",
                        "[Blank]",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "19",
                        "CSE Subjects",
                        "Maths",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "20",
                        "Continent",
                        "Europe",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "20",
                        "Degree Courses",
                        "MPC",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "20",
                        "CSE Subjects",
                        "Maths",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "21",
                        "Continent",
                        "Europe",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "21",
                        "Degree Courses",
                        "BiPC",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "21",
                        "CSE Subjects",
                        "Physics",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "22",
                        "Continent",
                        "Europe",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "22",
                        "Degree Courses",
                        "CEC",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "22",
                        "CSE Subjects",
                        "Civics",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "23",
                        "Continent",
                        "Europe",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "23",
                        "Degree Courses",
                        "CSE",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "23",
                        "CSE Subjects",
                        "C",
                        "Radio",
                        "Cancel Row"});
            table152.AddRow(new string[] {
                        "24",
                        "Continent",
                        "Europe",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "24",
                        "Degree Courses",
                        "ECE",
                        "ListBox",
                        ""});
            table152.AddRow(new string[] {
                        "24",
                        "CSE Subjects",
                        "C",
                        "Radio",
                        "Cancel Row"});
#line 1253
 testRunner.Then("I verify below \"Linkages Autobuild table:\" table questions data in the CRF.", ((string)(null)), table152, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table153 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table153.AddRow(new string[] {
                        "[Blank]"});
            table153.AddRow(new string[] {
                        "AS_India"});
            table153.AddRow(new string[] {
                        "AS_China"});
            table153.AddRow(new string[] {
                        "AS_Japan"});
            table153.AddRow(new string[] {
                        "AF_Kenya"});
            table153.AddRow(new string[] {
                        "AF_SouthAfrica"});
            table153.AddRow(new string[] {
                        "AF_Egypt"});
            table153.AddRow(new string[] {
                        "EU_France"});
            table153.AddRow(new string[] {
                        "EU_Germany"});
            table153.AddRow(new string[] {
                        "EU_Italy"});
#line 1327
 testRunner.And("I verify below \"ListBox\" items are displayed for \"Country\" question in row \"1\" of" +
                    " \"Linkages Autobuild table:\" table.", ((string)(null)), table153, "And ");
#line hidden
            TechTalk.SpecFlow.Table table154 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table154.AddRow(new string[] {
                        "[Blank]"});
            table154.AddRow(new string[] {
                        "AS_India"});
            table154.AddRow(new string[] {
                        "AS_China"});
            table154.AddRow(new string[] {
                        "AS_Japan"});
#line 1339
 testRunner.And("I verify below \"ListBox\" items are displayed for \"Country\" question in row \"7\" of" +
                    " \"Linkages Autobuild table:\" table.", ((string)(null)), table154, "And ");
#line hidden
            TechTalk.SpecFlow.Table table155 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table155.AddRow(new string[] {
                        "[Blank]"});
            table155.AddRow(new string[] {
                        "AF_Kenya"});
            table155.AddRow(new string[] {
                        "AF_SouthAfrica"});
            table155.AddRow(new string[] {
                        "AF_Egypt"});
#line 1345
 testRunner.And("I verify below \"ListBox\" items are displayed for \"Country\" question in row \"13\" o" +
                    "f \"Linkages Autobuild table:\" table.", ((string)(null)), table155, "And ");
#line hidden
            TechTalk.SpecFlow.Table table156 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table156.AddRow(new string[] {
                        "[Blank]"});
            table156.AddRow(new string[] {
                        "EU_France"});
            table156.AddRow(new string[] {
                        "EU_Germany"});
            table156.AddRow(new string[] {
                        "EU_Italy"});
#line 1351
 testRunner.And("I verify below \"ListBox\" items are displayed for \"Country\" question in row \"19\" o" +
                    "f \"Linkages Autobuild table:\" table.", ((string)(null)), table156, "And ");
#line hidden
            TechTalk.SpecFlow.Table table157 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table157.AddRow(new string[] {
                        "[Blank]"});
            table157.AddRow(new string[] {
                        "AS_India"});
            table157.AddRow(new string[] {
                        "AS_China"});
            table157.AddRow(new string[] {
                        "AS_Japan"});
            table157.AddRow(new string[] {
                        "AF_Kenya"});
            table157.AddRow(new string[] {
                        "AF_SouthAfrica"});
            table157.AddRow(new string[] {
                        "AF_Egypt"});
#line 1357
 testRunner.And("I verify below \"ListBox\" items are not displayed for \"Country\" question in row \"1" +
                    "9\" of \"Linkages Autobuild table:\" table.", ((string)(null)), table157, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T55_01_For Autobuild Table, enter primary data and verify secondary data for ques" +
            "tions.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41796.2.1,US41796.2.2,US41796.2.3")]
        public virtual void T55_01_ForAutobuildTableEnterPrimaryDataAndVerifySecondaryDataForQuestions_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T55_01_For Autobuild Table, enter primary data and verify secondary data for ques" +
                    "tions.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41796.2.1,US41796.2.2,US41796.2.3"});
#line 1367
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table158 = new TechTalk.SpecFlow.Table(new string[] {
                        "AddNewRow",
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table158.AddRow(new string[] {
                        "No",
                        "1",
                        "Continent",
                        "Asia",
                        "ListBox",
                        ""});
            table158.AddRow(new string[] {
                        "No",
                        "1",
                        "Country",
                        "AS_India",
                        "Radio",
                        ""});
            table158.AddRow(new string[] {
                        "No",
                        "1",
                        "Country Language",
                        "MultiLanguage",
                        "CheckBox",
                        ""});
            table158.AddRow(new string[] {
                        "No",
                        "1",
                        "TypeOfMeasurement",
                        "Length",
                        "Radio",
                        ""});
            table158.AddRow(new string[] {
                        "No",
                        "1",
                        "Measurement",
                        "Feets",
                        "CheckBox",
                        ""});
            table158.AddRow(new string[] {
                        "No",
                        "1",
                        "ColorType",
                        "SecondaryColors",
                        "ListBox",
                        ""});
            table158.AddRow(new string[] {
                        "No",
                        "1",
                        "Color",
                        "White",
                        "CheckBox",
                        ""});
            table158.AddRow(new string[] {
                        "No",
                        "1",
                        "Game",
                        "[Blank]",
                        "ListBox",
                        ""});
            table158.AddRow(new string[] {
                        "No",
                        "1",
                        "IntermediateCourses",
                        "MPC",
                        "ListBox",
                        ""});
            table158.AddRow(new string[] {
                        "No",
                        "1",
                        "MPC Subjects",
                        "Maths",
                        "ListBox",
                        "Save & Close Row"});
            table158.AddRow(new string[] {
                        "No",
                        "17",
                        "Country",
                        "AF_Kenya",
                        "Radio",
                        ""});
            table158.AddRow(new string[] {
                        "No",
                        "17",
                        "Country Language",
                        "MultiLanguage",
                        "CheckBox",
                        ""});
            table158.AddRow(new string[] {
                        "No",
                        "17",
                        "TypeOfMeasurement",
                        "Speed",
                        "Radio",
                        ""});
            table158.AddRow(new string[] {
                        "No",
                        "17",
                        "ColorType",
                        "PrimaryColors",
                        "ListBox",
                        ""});
            table158.AddRow(new string[] {
                        "No",
                        "17",
                        "Color",
                        "Red",
                        "CheckBox",
                        ""});
            table158.AddRow(new string[] {
                        "No",
                        "17",
                        "Game",
                        "Cricket",
                        "ListBox",
                        ""});
            table158.AddRow(new string[] {
                        "No",
                        "17",
                        "IntermediateCourses",
                        "CEC",
                        "ListBox",
                        ""});
            table158.AddRow(new string[] {
                        "No",
                        "17",
                        "CEC Subjects",
                        "Civics",
                        "CheckBox",
                        ""});
            table158.AddRow(new string[] {
                        "No",
                        "17",
                        "CEC Subjects",
                        "Economics",
                        "CheckBox",
                        ""});
            table158.AddRow(new string[] {
                        "No",
                        "17",
                        "CEC Subjects",
                        "Commerce",
                        "CheckBox",
                        "Save & Close Row"});
#line 1368
 testRunner.When("I enter below \"Linkages Autobuild table:\" table questions data in the CRF.", ((string)(null)), table158, "When ");
#line 1390
 testRunner.And("I click on \"Save\" button on \"LinkagesForm_AutobuildTable\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table159 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table159.AddRow(new string[] {
                        "1",
                        "Continent",
                        "Asia",
                        "Text",
                        ""});
            table159.AddRow(new string[] {
                        "1",
                        "Country",
                        "AS_India",
                        "Text",
                        ""});
            table159.AddRow(new string[] {
                        "1",
                        "Country Language",
                        "MultiLanguage",
                        "Text",
                        ""});
            table159.AddRow(new string[] {
                        "1",
                        "TypeOfMeasurement",
                        "Length",
                        "Text",
                        ""});
            table159.AddRow(new string[] {
                        "1",
                        "Measurement",
                        "Feets",
                        "Text",
                        ""});
            table159.AddRow(new string[] {
                        "1",
                        "ColorType",
                        "SecondaryColors",
                        "Text",
                        ""});
            table159.AddRow(new string[] {
                        "1",
                        "Color",
                        "White",
                        "Text",
                        ""});
            table159.AddRow(new string[] {
                        "1",
                        "Game",
                        "[Blank]",
                        "ListBox",
                        ""});
            table159.AddRow(new string[] {
                        "1",
                        "NoOfPlayers",
                        "[Blank]",
                        "Radio",
                        ""});
            table159.AddRow(new string[] {
                        "1",
                        "IntermediateCourses",
                        "MPC",
                        "Text",
                        ""});
            table159.AddRow(new string[] {
                        "1",
                        "MPC Subjects",
                        "Maths",
                        "ListBox",
                        "OK"});
            table159.AddRow(new string[] {
                        "17",
                        "Continent",
                        "Africa",
                        "Text",
                        ""});
            table159.AddRow(new string[] {
                        "17",
                        "Country",
                        "AF_Kenya",
                        "Text",
                        ""});
            table159.AddRow(new string[] {
                        "17",
                        "Country Language",
                        "MultiLanguage",
                        "Text",
                        ""});
            table159.AddRow(new string[] {
                        "17",
                        "TypeOfMeasurement",
                        "Speed",
                        "Text",
                        ""});
            table159.AddRow(new string[] {
                        "17",
                        "Measurement",
                        "KMPH",
                        "Checkbox",
                        ""});
            table159.AddRow(new string[] {
                        "17",
                        "ColorType",
                        "PrimaryColors",
                        "Text",
                        ""});
            table159.AddRow(new string[] {
                        "17",
                        "Color",
                        "Red",
                        "Text",
                        ""});
            table159.AddRow(new string[] {
                        "17",
                        "Game",
                        "Cricket",
                        "Text",
                        ""});
            table159.AddRow(new string[] {
                        "17",
                        "NoOfPlayers",
                        "11",
                        "Radio",
                        ""});
            table159.AddRow(new string[] {
                        "17",
                        "IntermediateCourses",
                        "CEC",
                        "Text",
                        ""});
            table159.AddRow(new string[] {
                        "17",
                        "MPC Subjects",
                        "Civics",
                        "ListBox",
                        ""});
            table159.AddRow(new string[] {
                        "17",
                        "BiPC Subjects",
                        "Civics",
                        "Radio",
                        ""});
            table159.AddRow(new string[] {
                        "17",
                        "CEC Subjects",
                        "Civics\\r\nEconomics\\r\nCommerce",
                        "Text",
                        "OK"});
#line 1391
 testRunner.Then("I verify below \"Linkages Autobuild table:\" table questions data in the CRF.", ((string)(null)), table159, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T55_02_Select Row 1 of the table \"Linkages Autobuild table:\" and Verify the chang" +
            "e history of the question \"Continent\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41796.4.1")]
        public virtual void T55_02_SelectRow1OfTheTableLinkagesAutobuildTableAndVerifyTheChangeHistoryOfTheQuestionContinent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T55_02_Select Row 1 of the table \"Linkages Autobuild table:\" and Verify the chang" +
                    "e history of the question \"Continent\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41796.4.1"});
#line 1418
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1419
 testRunner.When("I expand row \"1\" of table \"Linkages Autobuild table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1420
 testRunner.And("I click \"changeHistory.gif\" icon of a question \"Continent\" of table \"Linkages Aut" +
                    "obuild table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table160 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table160.AddRow(new string[] {
                        "",
                        "Asia",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 1421
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table160, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T55_03_Verify change history of the question \"Country\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41796.4.1")]
        public virtual void T55_03_VerifyChangeHistoryOfTheQuestionCountry()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T55_03_Verify change history of the question \"Country\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41796.4.1"});
#line 1425
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1426
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1427
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"Country\" of table \"Linkages Autob" +
                    "uild table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table161 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table161.AddRow(new string[] {
                        "",
                        "AS_India",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 1428
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table161, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T55_04_Verify change history of the question \"IntermediateCourses\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41796.4.1")]
        public virtual void T55_04_VerifyChangeHistoryOfTheQuestionIntermediateCourses()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T55_04_Verify change history of the question \"IntermediateCourses\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41796.4.1"});
#line 1432
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1433
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1434
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"IntermediateCourses\" of table \"Li" +
                    "nkages Autobuild table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table162 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table162.AddRow(new string[] {
                        "",
                        "MPC",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 1435
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table162, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T55_05_ Expand row 17 and verify the change history icon for question \"Country\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41796.4.1")]
        public virtual void T55_05_ExpandRow17AndVerifyTheChangeHistoryIconForQuestionCountry()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T55_05_ Expand row 17 and verify the change history icon for question \"Country\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41796.4.1"});
#line 1439
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1440
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1441
 testRunner.When("I click table row button \"OK\" of table \"Linkages Autobuild table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1442
 testRunner.When("I expand row \"17\" of table \"Linkages Autobuild table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1443
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"Country\" of table \"Linkages Autob" +
                    "uild table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table163 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table163.AddRow(new string[] {
                        "",
                        "AF_Kenya",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 1444
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table163, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T55_06_verify the change history icon for question \"TypeOfMeasurement\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41796.4.1")]
        public virtual void T55_06_VerifyTheChangeHistoryIconForQuestionTypeOfMeasurement()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T55_06_verify the change history icon for question \"TypeOfMeasurement\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41796.4.1"});
#line 1448
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1449
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1450
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"TypeOfMeasurement\" of table \"Link" +
                    "ages Autobuild table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table164 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table164.AddRow(new string[] {
                        "",
                        "Speed",
                        "Reason: Initial Entry\\r\nNotes: Submitted"});
#line 1451
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table164, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T55_07_Verify the change history icon is not displayed for the question \"NoOfPlay" +
            "ers\"")]
        public virtual void T55_07_VerifyTheChangeHistoryIconIsNotDisplayedForTheQuestionNoOfPlayers()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T55_07_Verify the change history icon is not displayed for the question \"NoOfPlay" +
                    "ers\"", null, ((string[])(null)));
#line 1455
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1456
 testRunner.When("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1458
 testRunner.Then("I dont see icon \"changeHistory.gif\" for the flat question \"NoOfPlayers\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T56_Add comments for linkage question")]
        public virtual void T56_AddCommentsForLinkageQuestion()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T56_Add comments for linkage question", null, ((string[])(null)));
#line 1460
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1461
 testRunner.When("I click \"Checkout\" button on \"LinkagesForm_AutobuildTable\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table165 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "CommentsToAdd",
                        "RowButtonToClick"});
            table165.AddRow(new string[] {
                        "1",
                        "Country",
                        "Comment 1.1.2",
                        ""});
            table165.AddRow(new string[] {
                        "1",
                        "NoOfPlayers",
                        "Comment 1.1.10",
                        "Cancel Row"});
            table165.AddRow(new string[] {
                        "2",
                        "Measurement",
                        "Comment 1.2.6",
                        "Cancel Row"});
#line 1462
 testRunner.Then("I add comments to questions of table \"Linkages Autobuild table:\" in the CRF.", ((string)(null)), table165, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T57_Clear primary item value and verify secondary question data.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41796.3.1,US41796.3.2,US41796.3.3")]
        public virtual void T57_ClearPrimaryItemValueAndVerifySecondaryQuestionData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T57_Clear primary item value and verify secondary question data.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41796.3.1,US41796.3.2,US41796.3.3"});
#line 1470
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1471
 testRunner.When("I expand row \"1\" of table \"Linkages Autobuild table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1472
 testRunner.And("I clear question \"Continent\" of table \"Linkages Autobuild table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1473
 testRunner.And("I enter notes \"Clear Item 1.1.1 for testing\" in ClearItemModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1474
 testRunner.And("I click ok button in ClearItemModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1475
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Linkages Autobuild table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table166 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table166.AddRow(new string[] {
                        "1",
                        "Continent",
                        "[Blank]",
                        "Link",
                        ""});
            table166.AddRow(new string[] {
                        "1",
                        "Country",
                        "[Blank]",
                        "Link",
                        ""});
#line 1476
 testRunner.Then("I verify below \"Linkages Autobuild table:\" table questions data in the CRF.", ((string)(null)), table166, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T58_01_Clear primary item by clicking MarkNotAnswered and verify secondary questi" +
            "on data.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41796.3.1,US41796.3.2,US41796.3.3")]
        public virtual void T58_01_ClearPrimaryItemByClickingMarkNotAnsweredAndVerifySecondaryQuestionData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T58_01_Clear primary item by clicking MarkNotAnswered and verify secondary questi" +
                    "on data.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41796.3.1,US41796.3.2,US41796.3.3"});
#line 1483
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1484
 testRunner.When("I expand row \"1\" of table \"Linkages Autobuild table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1485
    testRunner.And("I click \"icon_mna_disabled.png\" icon of a question \"IntermediateCourses\" of table" +
                    " \"Linkages Autobuild table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1486
    testRunner.And("I enter comments \"Comments for MarkItemNotAnswered\" in MarkItemDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1487
    testRunner.And("I click ok button in MarkItemDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1488
    testRunner.Then("I see icon \"icon_mna.png\" of a question \"IntermediateCourses\" of table \"Linkages " +
                    "Autobuild table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1489
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Linkages Autobuild table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table167 = new TechTalk.SpecFlow.Table(new string[] {
                        "RowNumber",
                        "QuestionPrompt",
                        "AnswerValue",
                        "AnswerFieldType",
                        "RowButtonToClick"});
            table167.AddRow(new string[] {
                        "1",
                        "IntermediateCourses",
                        "[Blank]",
                        "Link",
                        ""});
            table167.AddRow(new string[] {
                        "1",
                        "MPC Subjects",
                        "Maths",
                        "Link",
                        ""});
            table167.AddRow(new string[] {
                        "1",
                        "BiPC Subjects",
                        "Maths",
                        "Link",
                        ""});
            table167.AddRow(new string[] {
                        "1",
                        "CEC Subjects",
                        "[Blank]",
                        "Link",
                        ""});
#line 1490
    testRunner.And("I verify below \"Linkages Autobuild table:\" table questions data in the CRF.", ((string)(null)), table167, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T58_02_Select the Save and Close Row button for the row 1 and verfiy the change h" +
            "isotry for the Question \"Continent\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41796.4.1")]
        public virtual void T58_02_SelectTheSaveAndCloseRowButtonForTheRow1AndVerfiyTheChangeHisotryForTheQuestionContinent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T58_02_Select the Save and Close Row button for the row 1 and verfiy the change h" +
                    "isotry for the Question \"Continent\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41796.4.1"});
#line 1499
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1500
 testRunner.When("I click table row button \"Save & Close Row\" of table \"Linkages Autobuild table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1502
 testRunner.And("I select \"Save\" button on \"Linkages Autobuild table:\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1503
 testRunner.And("I expand row \"1\" of table \"Linkages Autobuild table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1504
 testRunner.And("I click \"changeHistory.gif\" icon of a question \"Continent\" of table \"Linkages Aut" +
                    "obuild table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table168 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table168.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Item Reset\\r\nNotes: Clear Item 1.1.1 for testing"});
#line 1505
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table168, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T58_03_Verify the Change history icon for the question \"Country\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41796.4.1")]
        public virtual void T58_03_VerifyTheChangeHistoryIconForTheQuestionCountry()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T58_03_Verify the Change history icon for the question \"Country\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41796.4.1"});
#line 1509
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1510
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1511
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"Country\" of table \"Linkages Autob" +
                    "uild table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table169 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table169.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Linkage\\r\nNotes: Due to response change in the linked field."});
#line 1512
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table169, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T58_04_Verify the Change history icon for the question \"Country\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41796.4.1")]
        public virtual void T58_04_VerifyTheChangeHistoryIconForTheQuestionCountry()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T58_04_Verify the Change history icon for the question \"Country\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41796.4.1"});
#line 1516
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1517
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1518
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"IntermediateCourses\" of table \"Li" +
                    "nkages Autobuild table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table170 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table170.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Marked Not Answered"});
#line 1519
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table170, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T58_05_Verify the change history for the question \"CEC Subjects\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41796.4.1")]
        public virtual void T58_05_VerifyTheChangeHistoryForTheQuestionCECSubjects()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T58_05_Verify the change history for the question \"CEC Subjects\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41796.4.1"});
#line 1523
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1524
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1525
 testRunner.When("I click \"changeHistory.gif\" icon of a question \"CEC Subjects\" of table \"Linkages " +
                    "Autobuild table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table171 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table171.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: Linkage\\r\nNotes: Due to response change in the linked field."});
#line 1526
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table171, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_01_Reset CRF and verify primary and secondary question data.")]
        public virtual void T59_01_ResetCRFAndVerifyPrimaryAndSecondaryQuestionData_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_01_Reset CRF and verify primary and secondary question data.", null, ((string[])(null)));
#line 1530
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1531
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1532
 testRunner.When("I click on \"Cancel\" button on \"LinkagesForm_AutobuildTable\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1533
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1534
 testRunner.And("I click ActionPalette Item \"Reset CRF\" in \"CRFAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1535
 testRunner.And("I click Yes button in ResetCRFModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1536
 testRunner.And("I enter reason \"Reset CRF Testing\" in ResetCRFModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1537
    testRunner.And("I click Continue button in ResetCRFModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1538
    testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table172 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table172.AddRow(new string[] {
                        "CRF Reset - Visit (Week 2)/LinkagesForm_FlatQuestions for patient 06-PAT - COMPLE" +
                            "TE. View Summary."});
#line 1539
 testRunner.And("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table172, "And ");
#line 1542
 testRunner.And("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1543
 testRunner.And("I select the patient \"06-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1544
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"LinkagesForm_FlatQuestions\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table173 = new TechTalk.SpecFlow.Table(new string[] {
                        "ItemToVerify"});
            table173.AddRow(new string[] {
                        "[Blank]"});
            table173.AddRow(new string[] {
                        "AS_India"});
            table173.AddRow(new string[] {
                        "AS_China"});
            table173.AddRow(new string[] {
                        "AS_Japan"});
            table173.AddRow(new string[] {
                        "AF_Kenya"});
            table173.AddRow(new string[] {
                        "AF_SouthAfrica"});
            table173.AddRow(new string[] {
                        "AF_Egypt"});
            table173.AddRow(new string[] {
                        "EU_France"});
            table173.AddRow(new string[] {
                        "EU_Germany"});
            table173.AddRow(new string[] {
                        "EU_Italy"});
#line 1545
 testRunner.Then("I Verify below \"ListBox\" items are displayed in \"Country\" on the CRF.", ((string)(null)), table173, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_02_Verify the change history for the question \"Continent\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T59_02_VerifyTheChangeHistoryForTheQuestionContinent()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_02_Verify the change history for the question \"Continent\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 1558
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1559
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Continent\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table174 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table174.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: CRF [Reset]"});
#line 1560
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table174, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_03_Verify the change history for the question \"Country\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T59_03_VerifyTheChangeHistoryForTheQuestionCountry()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_03_Verify the change history for the question \"Country\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 1564
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1565
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1566
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Country\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table175 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table175.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: CRF [Reset]"});
#line 1567
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table175, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_04_Verify the change history for the question \"CountryLanguage\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T59_04_VerifyTheChangeHistoryForTheQuestionCountryLanguage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_04_Verify the change history for the question \"CountryLanguage\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 1571
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1572
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1573
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"CountryLanguage\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table176 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table176.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: CRF [Reset]"});
#line 1574
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table176, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_05_Verify the change history for the question \"Country Government\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T59_05_VerifyTheChangeHistoryForTheQuestionCountryGovernment()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_05_Verify the change history for the question \"Country Government\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 1578
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1579
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1580
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Country Government\" in CR" +
                    "F", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table177 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table177.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: CRF [Reset]"});
#line 1581
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table177, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_06_Verify the change history for the question \"TypeOfMeasurement\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T59_06_VerifyTheChangeHistoryForTheQuestionTypeOfMeasurement()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_06_Verify the change history for the question \"TypeOfMeasurement\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 1585
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1586
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1587
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"TypeOfMeasurement\" in CRF" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table178 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table178.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: CRF [Reset]"});
#line 1588
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table178, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_07_Verify the change history for the question \"Measurement\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T59_07_VerifyTheChangeHistoryForTheQuestionMeasurement()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_07_Verify the change history for the question \"Measurement\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 1592
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1593
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1594
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Measurement\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table179 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table179.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: CRF [Reset]"});
#line 1595
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table179, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_08_Verify the change history for the question \"ColorType\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T59_08_VerifyTheChangeHistoryForTheQuestionColorType()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_08_Verify the change history for the question \"ColorType\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 1599
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1600
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1601
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"ColorType\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table180 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table180.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: CRF [Reset]"});
#line 1602
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table180, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_09_Verify the change history for the question \"Color\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T59_09_VerifyTheChangeHistoryForTheQuestionColor()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_09_Verify the change history for the question \"Color\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 1606
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1607
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1608
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Color\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table181 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table181.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: CRF [Reset]"});
#line 1609
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table181, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_10_Verify the change history for the question \"Game\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T59_10_VerifyTheChangeHistoryForTheQuestionGame()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_10_Verify the change history for the question \"Game\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 1613
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1614
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1615
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"Game\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table182 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table182.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: CRF [Reset]"});
#line 1616
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table182, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_11_Verify the change history for the question \"NoOfPlayes\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T59_11_VerifyTheChangeHistoryForTheQuestionNoOfPlayes()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_11_Verify the change history for the question \"NoOfPlayes\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 1620
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1621
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1622
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"NoOfPlayes\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table183 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table183.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: CRF [Reset]"});
#line 1623
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table183, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_12_Verify the change history for the question \"IntermediateCourses\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T59_12_VerifyTheChangeHistoryForTheQuestionIntermediateCourses()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_12_Verify the change history for the question \"IntermediateCourses\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 1627
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1628
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1629
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"IntermediateCourses\" in C" +
                    "RF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table184 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table184.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: CRF [Reset]"});
#line 1630
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table184, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_13_Verify the change history for the question \"MPC Subjects\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T59_13_VerifyTheChangeHistoryForTheQuestionMPCSubjects()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_13_Verify the change history for the question \"MPC Subjects\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 1634
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1635
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1636
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"MPC Subjects\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table185 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table185.AddRow(new string[] {
                        "",
                        "Maths",
                        "Reason: CRF [Reset]"});
#line 1637
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table185, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_14_Verify the change history for the question \"BiPC Subjects\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T59_14_VerifyTheChangeHistoryForTheQuestionBiPCSubjects()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_14_Verify the change history for the question \"BiPC Subjects\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 1641
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1642
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1643
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"BiPC Subjects\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table186 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table186.AddRow(new string[] {
                        "",
                        "Maths",
                        "Reason: CRF [Reset]"});
#line 1644
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table186, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_15_Verify the change history for the question \"CEC Subjects\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T59_15_VerifyTheChangeHistoryForTheQuestionCECSubjects()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_15_Verify the change history for the question \"CEC Subjects\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 1648
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1649
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1650
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"CEC Subjects\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table187 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table187.AddRow(new string[] {
                        "",
                        "Maths",
                        "Reason: CRF [Reset]"});
#line 1651
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table187, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_16_Verify the change history for the question \"DegreeCourses\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T59_16_VerifyTheChangeHistoryForTheQuestionDegreeCourses()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_16_Verify the change history for the question \"DegreeCourses\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 1655
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1656
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1657
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"DegreeCourses\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table188 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table188.AddRow(new string[] {
                        "",
                        "[Blank]",
                        "Reason: CRF [Reset]"});
#line 1658
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table188, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_17_Verify the change history for the question \"CSE Subjects\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T59_17_VerifyTheChangeHistoryForTheQuestionCSESubjects()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_17_Verify the change history for the question \"CSE Subjects\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 1662
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1663
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1664
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"CSE Subjects\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table189 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table189.AddRow(new string[] {
                        "",
                        "Maths",
                        "Reason: CRF [Reset]"});
#line 1665
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table189, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_18_Verify the change history for the question \"ECE Subjects\"")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqId:US41971.7")]
        public virtual void T59_18_VerifyTheChangeHistoryForTheQuestionECESubjects()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_18_Verify the change history for the question \"ECE Subjects\"", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqId:US41971.7"});
#line 1669
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1670
 testRunner.Given("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1671
 testRunner.When("I click icon \"changeHistory.gif\" for the flat question \"ECE Subjects\" in CRF", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table190 = new TechTalk.SpecFlow.Table(new string[] {
                        "DateTime",
                        "Response",
                        "ReasonNotes"});
            table190.AddRow(new string[] {
                        "",
                        "Maths",
                        "Reason: CRF [Reset]"});
#line 1672
 testRunner.Then("I see changehistory details in ChangeHistoryModal", ((string)(null)), table190, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

