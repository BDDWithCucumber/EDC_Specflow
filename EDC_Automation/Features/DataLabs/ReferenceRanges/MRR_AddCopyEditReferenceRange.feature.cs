// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.ReferenceRanges
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("MRR_AddCopyEditReferenceRange")]
    [NUnit.Framework.CategoryAttribute("F8164")]
    public partial class MRR_AddCopyEditReferenceRangeFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MRR_AddCopyEditReferenceRange.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "MRR_AddCopyEditReferenceRange", "      As a Sponsor,\r\n      I want to be able to collect reference ranges for a st" +
                    "udy\r\n      So that these reference ranges can be used to determine if patient la" +
                    "b values collected during the study are out of range.", ProgrammingLanguage.CSharp, new string[] {
                        "F8164"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("1_Login to Datalabs")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void _1_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1_Login to Datalabs", null, new string[] {
                        "ObjectiveEvidence"});
#line 13
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 14
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 15
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02_Delete a study")]
        public virtual void _02_DeleteAStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02_Delete a study", null, ((string[])(null)));
#line 17
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 18
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("03_Upload and publish the study.")]
        public virtual void _03_UploadAndPublishTheStudy_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03_Upload and publish the study.", null, ((string[])(null)));
#line 21
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 22
    testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
    testRunner.And("I upload a study \"StudyPublish.zip\" with study label \"AllmappedforD1_1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
    testRunner.Then("I see study label \"AllmappedforD1_1\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("04_Navigate to Labs page from Datalabs Patients page")]
        public virtual void _04_NavigateToLabsPageFromDatalabsPatientsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04_Navigate to Labs page from Datalabs Patients page", null, ((string[])(null)));
#line 26
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 27
 testRunner.Given("I navigate to \"Local Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 28
 testRunner.Then("I see page \"Manage Reference Ranges\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("05_Navigate to Labtests")]
        public virtual void _05_NavigateToLabtests()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05_Navigate to Labtests", null, ((string[])(null)));
#line 30
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 31
    testRunner.When("I open lab with labid \"L01\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 32
 testRunner.And("I open labtest with labname \"MRRTEST1\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.And("I can see the Reference Ranges of a \"Test1(MRRTEST1)\" lab test in ReferenceRanges" +
                    "Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.Then("Page header should be displayed as \" Lab(L01), Clinical, Health&Science\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("06_Add a new lab test reference range record")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US52745.1,US52745.2,US52745.3,US52745.4")]
        public virtual void _06_AddANewLabTestReferenceRangeRecord()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06_Add a new lab test reference range record", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US52745.1,US52745.2,US52745.3,US52745.4"});
#line 37
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate",
                        "Gender",
                        "FromAgeSelect",
                        "FromAgeSet",
                        "FromAgeRange",
                        "ToAgeSelect",
                        "ToAgeSet",
                        "ToAgeRange",
                        "NormalRangeLowSelect",
                        "NormalRangeLowSet",
                        "NormalRangeHighSelect",
                        "NormalRangeHighSet",
                        "CriticalRangeLowSelect",
                        "CriticalRangeLowSet",
                        "CriticalRangeHighSelect",
                        "CriticalRangeHighSet",
                        "Unit"});
            table1.AddRow(new string[] {
                        "09/18/2016",
                        "09/18/2020",
                        "Female",
                        ">",
                        "10",
                        "Weeks",
                        "<",
                        "20",
                        "Weeks",
                        ">",
                        "20",
                        "<",
                        "30",
                        ">",
                        "10",
                        "<",
                        "40",
                        "1Unit"});
            table1.AddRow(new string[] {
                        "09/18/2016",
                        "09/18/2020",
                        "Male",
                        ">",
                        "10",
                        "Days",
                        "<",
                        "20",
                        "Weeks",
                        ">",
                        "20",
                        "<",
                        "30",
                        ">",
                        "10",
                        "<",
                        "40",
                        "2Unit"});
            table1.AddRow(new string[] {
                        "09/18/2016",
                        "09/18/2020",
                        "Not Specified",
                        ">",
                        "10",
                        "Weeks",
                        "<",
                        "20",
                        "Weeks",
                        ">",
                        "20",
                        "<",
                        "30",
                        ">",
                        "10",
                        "<",
                        "40",
                        "3Unit"});
            table1.AddRow(new string[] {
                        "09/18/2016",
                        "09/18/2020",
                        "Male",
                        ">",
                        "10",
                        "Months",
                        "<",
                        "20",
                        "Months",
                        ">",
                        "20",
                        "<",
                        "30",
                        ">",
                        "10",
                        "<",
                        "40",
                        "4Unit"});
#line 38
 testRunner.When("I click add and enter reference ranges of a lab test and Save and can see \"LabTes" +
                    "t Reference Range Added Successfully\" message upon each record save in Reference" +
                    "RangesPage", ((string)(null)), table1, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReferenceRangeID"});
            table2.AddRow(new string[] {
                        "{ReferenceRangeID1}"});
#line 44
 testRunner.Then("I see the reference range ids in the Reference Range Table.", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("07_copy a lab test reference range record")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US52749.1,US52749.2")]
        public virtual void _07_CopyALabTestReferenceRangeRecord()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("07_copy a lab test reference range record", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US52749.1,US52749.2"});
#line 49
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 50
 testRunner.When("I click on \"Copy\" icon for the first record to copy the data in ReferenceRangesPa" +
                    "ge", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
 testRunner.And("I click on \"Cancel\" icon of the first record in ReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
 testRunner.And("I click on \"Copy\" icon for the first record to copy the data in ReferenceRangesPa" +
                    "ge", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate",
                        "Gender",
                        "FromAgeSelect",
                        "FromAgeSet",
                        "FromAgeRange",
                        "ToAgeSelect",
                        "ToAgeSet",
                        "ToAgeRange",
                        "NormalRangeLowSelect",
                        "NormalRangeLowSet",
                        "NormalRangeHighSelect",
                        "NormalRangeHighSet",
                        "CriticalRangeLowSelect",
                        "CriticalRangeLowSet",
                        "CriticalRangeHighSelect",
                        "CriticalRangeHighSet",
                        "Unit"});
            table3.AddRow(new string[] {
                        "09/18/2016",
                        "09/18/2020",
                        "Male",
                        ">",
                        "104",
                        "Years",
                        "<",
                        "196",
                        "Years",
                        ">",
                        "20",
                        "<",
                        "30",
                        ">",
                        "10",
                        "<",
                        "40",
                        "5Unit"});
#line 53
    testRunner.And("I change reference ranges of a copied lab test and Save in ReferenceRangesPage", ((string)(null)), table3, "And ");
#line 56
 testRunner.And("I check the not applicable checkbox in ReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.And("I click on \"Save\" icon of the first record in ReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 58
 testRunner.And("a \"LabTest Reference Range Added Successfully\" message should be displayed in Ref" +
                    "erenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "ReferenceRangeID"});
            table4.AddRow(new string[] {
                        "{ReferenceRangeID1}"});
#line 59
 testRunner.Then("I see the reference range ids in the Reference Range Table.", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("08_update a lab test reference range record")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:US52745.1,US52747.2,US52747.3")]
        public virtual void _08_UpdateALabTestReferenceRangeRecord()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("08_update a lab test reference range record", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:US52745.1,US52747.2,US52747.3"});
#line 64
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 65
 testRunner.When("I click on \"Edit\" icon for the first record to modify the data in ReferenceRanges" +
                    "Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate",
                        "Gender",
                        "FromAgeSelect",
                        "FromAgeSet",
                        "FromAgeRange",
                        "ToAgeSelect",
                        "ToAgeSet",
                        "ToAgeRange",
                        "NormalRangeLowSelect",
                        "NormalRangeLowSet",
                        "NormalRangeHighSelect",
                        "NormalRangeHighSet",
                        "CriticalRangeLowSelect",
                        "CriticalRangeLowSet",
                        "CriticalRangeHighSelect",
                        "CriticalRangeHighSet",
                        "Unit"});
            table5.AddRow(new string[] {
                        "09/18/2018",
                        "09/18/2030",
                        "Male",
                        ">",
                        "107",
                        "Years",
                        "<",
                        "200",
                        "Years",
                        ">",
                        "200",
                        "<",
                        "80",
                        ">",
                        "45",
                        "<",
                        "80",
                        "1Unit"});
#line 66
    testRunner.And("I modify reference ranges of a existing lab test and Save in ReferenceRangesPage", ((string)(null)), table5, "And ");
#line 69
 testRunner.And("I uncheck the not applicable checkbox in ReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
 testRunner.And("Reference Range ID in readonly mode in ReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
 testRunner.And("I Click the save button in ReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
 testRunner.Then("a \"LabTest Reference Range Updated Successfully\" message should be displayed in R" +
                    "eferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("09_Logout form DataLabs")]
        public virtual void _09_LogoutFormDataLabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("09_Logout form DataLabs", null, ((string[])(null)));
#line 74
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 75
 testRunner.When("I clik logout of Datalabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 76
 testRunner.Then("I see login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

