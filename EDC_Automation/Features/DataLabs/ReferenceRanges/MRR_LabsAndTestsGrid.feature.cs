// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.ReferenceRanges
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("MRR_LabsAndTestsGrid")]
    [NUnit.Framework.CategoryAttribute("F8164")]
    public partial class MRR_LabsAndTestsGridFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MRR_LabsAndTestsGrid.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "MRR_LabsAndTestsGrid", "      As a Sponsor,\r\n      I want to be able to collect reference ranges for a st" +
                    "udy\r\n      So that these reference ranges can be used to determine if patient la" +
                    "b values collected during the study are out of range.", ProgrammingLanguage.CSharp, new string[] {
                        "F8164"});
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("1_Login to Datalabs")]
        public virtual void _1_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("1_Login to Datalabs", null, ((string[])(null)));
#line 13
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 14
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 15
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("02_Delete a study")]
        public virtual void _02_DeleteAStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("02_Delete a study", null, ((string[])(null)));
#line 17
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 18
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 19
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("03_Upload and publish the study.")]
        public virtual void _03_UploadAndPublishTheStudy_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("03_Upload and publish the study.", null, ((string[])(null)));
#line 21
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 22
    testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 23
    testRunner.And("I upload a study \"StudyPublish.zip\" with study label \"AllmappedforD1_1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 24
    testRunner.Then("I see study label \"AllmappedforD1_1\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("04_Navigate to Labs page from Datalabs Patients page")]
        public virtual void _04_NavigateToLabsPageFromDatalabsPatientsPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("04_Navigate to Labs page from Datalabs Patients page", null, ((string[])(null)));
#line 26
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 27
 testRunner.Given("I navigate to \"Local Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 28
 testRunner.Then("I see page \"Manage Reference Ranges\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("05_Verify the Manage Reference Ranges table column names")]
        public virtual void _05_VerifyTheManageReferenceRangesTableColumnNames()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("05_Verify the Manage Reference Ranges table column names", null, ((string[])(null)));
#line 30
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 31
    testRunner.Given("I navigate to \"Local Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table1.AddRow(new string[] {
                        "Lab ID"});
            table1.AddRow(new string[] {
                        "Laboratory Name"});
            table1.AddRow(new string[] {
                        "Company"});
            table1.AddRow(new string[] {
                        "Department"});
            table1.AddRow(new string[] {
                        "Address"});
            table1.AddRow(new string[] {
                        "City/Town"});
            table1.AddRow(new string[] {
                        "State/Province"});
            table1.AddRow(new string[] {
                        "Country"});
            table1.AddRow(new string[] {
                        "Lab Status"});
#line 32
    testRunner.Then("I verify the below columns names displayed in the Manage Reference Ranges table", ((string)(null)), table1, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("06_Check sort for Laboratory Name column for ascending")]
        public virtual void _06_CheckSortForLaboratoryNameColumnForAscending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("06_Check sort for Laboratory Name column for ascending", null, ((string[])(null)));
#line 44
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 45
 testRunner.When("I sort column \"Lab ID\" in LabsGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 46
 testRunner.Then("I see data in sort order \"Ascending\" in column \"Lab ID\" in ManageReferenceRangesP" +
                    "age", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("07_Check sort for Lab Id column for descending")]
        public virtual void _07_CheckSortForLabIdColumnForDescending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("07_Check sort for Lab Id column for descending", null, ((string[])(null)));
#line 48
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 49
 testRunner.When("I sort column \"Lab ID\" in LabsGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 50
 testRunner.Then("I see data in sort order \"Descending\" in column \"Lab ID\" in ManageReferenceRanges" +
                    "Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("08_Check sort for Laboratory Name column for ascending")]
        public virtual void _08_CheckSortForLaboratoryNameColumnForAscending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("08_Check sort for Laboratory Name column for ascending", null, ((string[])(null)));
#line 52
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 53
 testRunner.When("I sort column \"Laboratory Name\" in LabsGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 54
 testRunner.Then("I see data in sort order \"Ascending\" in column \"Laboratory Name\" in ManageReferen" +
                    "ceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("09_Check sort for Laboratory Name column for descending")]
        public virtual void _09_CheckSortForLaboratoryNameColumnForDescending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("09_Check sort for Laboratory Name column for descending", null, ((string[])(null)));
#line 56
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 57
 testRunner.When("I sort column \"Laboratory Name\" in LabsGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 58
 testRunner.Then("I see data in sort order \"Descending\" in column \"Laboratory Name\" in ManageRefere" +
                    "nceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("10_Check sort for Company column for ascending")]
        public virtual void _10_CheckSortForCompanyColumnForAscending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("10_Check sort for Company column for ascending", null, ((string[])(null)));
#line 60
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 61
 testRunner.When("I sort column \"Company\" in LabsGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 62
 testRunner.Then("I see data in sort order \"Ascending\" in column \"Company\" in ManageReferenceRanges" +
                    "Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("11_Check sort for Company column for descending")]
        public virtual void _11_CheckSortForCompanyColumnForDescending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("11_Check sort for Company column for descending", null, ((string[])(null)));
#line 64
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 65
 testRunner.When("I sort column \"Company\" in LabsGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 66
 testRunner.Then("I see data in sort order \"Descending\" in column \"Company\" in ManageReferenceRange" +
                    "sPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("12_Check sort for Department column for ascending")]
        public virtual void _12_CheckSortForDepartmentColumnForAscending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("12_Check sort for Department column for ascending", null, ((string[])(null)));
#line 68
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 69
 testRunner.When("I sort column \"Department\" in LabsGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 70
 testRunner.Then("I see data in sort order \"Ascending\" in column \"Department\" in ManageReferenceRan" +
                    "gesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("13_Check sort for Department column for descending")]
        public virtual void _13_CheckSortForDepartmentColumnForDescending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("13_Check sort for Department column for descending", null, ((string[])(null)));
#line 72
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 73
 testRunner.When("I sort column \"Department\" in LabsGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 74
 testRunner.Then("I see data in sort order \"Descending\" in column \"Department\" in ManageReferenceRa" +
                    "ngesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("14_Check sort for City/Town column for ascending")]
        public virtual void _14_CheckSortForCityTownColumnForAscending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("14_Check sort for City/Town column for ascending", null, ((string[])(null)));
#line 76
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 77
 testRunner.When("I sort column \"City/Town\" in LabsGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 78
 testRunner.Then("I see data in sort order \"Ascending\" in column \"City/Town\" in ManageReferenceRang" +
                    "esPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("15_Check sort for City/Town column for descending")]
        public virtual void _15_CheckSortForCityTownColumnForDescending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("15_Check sort for City/Town column for descending", null, ((string[])(null)));
#line 80
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 81
 testRunner.When("I sort column \"City/Town\" in LabsGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 82
 testRunner.Then("I see data in sort order \"Descending\" in column \"City/Town\" in ManageReferenceRan" +
                    "gesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("16_Check sort for State/Province column for ascending")]
        public virtual void _16_CheckSortForStateProvinceColumnForAscending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("16_Check sort for State/Province column for ascending", null, ((string[])(null)));
#line 84
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 85
 testRunner.When("I sort column \"State/Province\" in LabsGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 86
 testRunner.Then("I see data in sort order \"Ascending\" in column \"State/Province\" in ManageReferenc" +
                    "eRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("17_Check sort for State/Province column for descending")]
        public virtual void _17_CheckSortForStateProvinceColumnForDescending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("17_Check sort for State/Province column for descending", null, ((string[])(null)));
#line 88
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 89
 testRunner.When("I sort column \"State/Province\" in LabsGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 90
 testRunner.Then("I see data in sort order \"Descending\" in column \"State/Province\" in ManageReferen" +
                    "ceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("18_Check sort for Country column for ascending")]
        public virtual void _18_CheckSortForCountryColumnForAscending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("18_Check sort for Country column for ascending", null, ((string[])(null)));
#line 92
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 93
 testRunner.When("I sort column \"Country\" in LabsGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 94
 testRunner.Then("I see data in sort order \"Ascending\" in column \"Country\" in ManageReferenceRanges" +
                    "Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("19_Check sort for Country column for descending")]
        public virtual void _19_CheckSortForCountryColumnForDescending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("19_Check sort for Country column for descending", null, ((string[])(null)));
#line 96
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 97
 testRunner.When("I sort column \"Country\" in LabsGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 98
 testRunner.Then("I see data in sort order \"Descending\" in column \"Country\" in ManageReferenceRange" +
                    "sPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("20_Check sort for Lab Status column for ascending")]
        public virtual void _20_CheckSortForLabStatusColumnForAscending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("20_Check sort for Lab Status column for ascending", null, ((string[])(null)));
#line 100
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 101
 testRunner.When("I sort column \"Lab Status\" in LabsGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 102
 testRunner.Then("I see data in sort order \"Ascending\" in column \"Lab Status\" in ManageReferenceRan" +
                    "gesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("21_Check sort for Lab Status column for descending")]
        public virtual void _21_CheckSortForLabStatusColumnForDescending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("21_Check sort for Lab Status column for descending", null, ((string[])(null)));
#line 104
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 105
 testRunner.When("I sort column \"Lab Status\" in LabsGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 106
 testRunner.Then("I see data in sort order \"Descending\" in column \"Lab Status\" in ManageReferenceRa" +
                    "ngesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("22_Filter Lab Id column with IsEqualTo filter criteria")]
        public virtual void _22_FilterLabIdColumnWithIsEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("22_Filter Lab Id column with IsEqualTo filter criteria", null, ((string[])(null)));
#line 108
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 109
 testRunner.When("I apply filter on column \"Lab ID\" with filter text \"L01\" by filter criteria \"Is e" +
                    "qual to\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 110
 testRunner.Then("I see filtered data in column \"Lab ID\" with filter text \"L01\" and filter criteria" +
                    " \"Is equal to\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 111
 testRunner.And("I clear filter on column \"Lab ID\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("23_Filter Laboratory Name column with IsEqualTo filter criteria")]
        public virtual void _23_FilterLaboratoryNameColumnWithIsEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("23_Filter Laboratory Name column with IsEqualTo filter criteria", null, ((string[])(null)));
#line 113
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 114
 testRunner.When("I apply filter on column \"Laboratory Name\" with filter text \"Lab\" by filter crite" +
                    "ria \"Is equal to\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 115
 testRunner.Then("I see filtered data in column \"Laboratory Name\" with filter text \"Lab\" and filter" +
                    " criteria \"Is equal to\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 116
 testRunner.And("I clear filter on column \"Laboratory Name\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("24_Filter Company column with IsEqualTo filter criteria")]
        public virtual void _24_FilterCompanyColumnWithIsEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("24_Filter Company column with IsEqualTo filter criteria", null, ((string[])(null)));
#line 118
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 119
 testRunner.When("I apply filter on column \"Company\" with filter text \"Clinical\" by filter criteria" +
                    " \"Is equal to\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 120
 testRunner.Then("I see filtered data in column \"Company\" with filter text \"Clinical\" and filter cr" +
                    "iteria \"Is equal to\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 121
 testRunner.And("I clear filter on column \"Company\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("25_Filter Department column with IsEqualTo filter criteria")]
        public virtual void _25_FilterDepartmentColumnWithIsEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("25_Filter Department column with IsEqualTo filter criteria", null, ((string[])(null)));
#line 123
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 124
 testRunner.When("I apply filter on column \"Department\" with filter text \"Health&Science\" by filter" +
                    " criteria \"Is equal to\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 125
 testRunner.Then("I see filtered data in column \"Department\" with filter text \"Health&Science\" and " +
                    "filter criteria \"Is equal to\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 126
 testRunner.And("I clear filter on column \"Department\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("26_Filter Address column with IsEqualTo filter criteria")]
        public virtual void _26_FilterAddressColumnWithIsEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("26_Filter Address column with IsEqualTo filter criteria", null, ((string[])(null)));
#line 128
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 129
 testRunner.When("I apply filter on column \"Address\" with filter text \"RP Road\" by filter criteria " +
                    "\"Is equal to\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 130
 testRunner.Then("I see filtered data in column \"Address\" with filter text \"RP Road\" and filter cri" +
                    "teria \"Is equal to\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 131
 testRunner.And("I clear filter on column \"Address\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("27_Filter City/Town column with IsEqualTo filter criteria")]
        public virtual void _27_FilterCityTownColumnWithIsEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("27_Filter City/Town column with IsEqualTo filter criteria", null, ((string[])(null)));
#line 133
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 134
 testRunner.When("I apply filter on column \"City/Town\" with filter text \"Hyderabad\" by filter crite" +
                    "ria \"Is equal to\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 135
 testRunner.Then("I see filtered data in column \"City/Town\" with filter text \"Hyderabad\" and filter" +
                    " criteria \"Is equal to\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 136
 testRunner.And("I clear filter on column \"City/Town\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("28_Filter State/Province column with IsEqualTo filter criteria")]
        public virtual void _28_FilterStateProvinceColumnWithIsEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("28_Filter State/Province column with IsEqualTo filter criteria", null, ((string[])(null)));
#line 138
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 139
 testRunner.When("I apply filter on column \"State/Province\" with filter text \"AP\" by filter criteri" +
                    "a \"Is equal to\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 140
 testRunner.Then("I see filtered data in column \"State/Province\" with filter text \"AP\" and filter c" +
                    "riteria \"Is equal to\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 141
 testRunner.And("I clear filter on column \"State/Province\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("29_Filter Country column with IsEqualTo filter criteria")]
        public virtual void _29_FilterCountryColumnWithIsEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("29_Filter Country column with IsEqualTo filter criteria", null, ((string[])(null)));
#line 143
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 144
 testRunner.When("I apply filter on column \"Country\" with filter text \"INDIA\" by filter criteria \"I" +
                    "s equal to\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 145
 testRunner.Then("I see filtered data in column \"Country\" with filter text \"INDIA\" and filter crite" +
                    "ria \"Is equal to\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 146
 testRunner.And("I clear filter on column \"Country\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("30_Filter Country column with IsEqualTo filter criteria")]
        public virtual void _30_FilterCountryColumnWithIsEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("30_Filter Country column with IsEqualTo filter criteria", null, ((string[])(null)));
#line 148
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 149
 testRunner.When("I apply filter on column \"Lab Status\" with filter text \"Active\" by filter criteri" +
                    "a \"Is equal to\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 150
 testRunner.Then("I see filtered data in column \"Lab Status\" with filter text \"Active\" and filter c" +
                    "riteria \"Is equal to\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 151
 testRunner.And("I clear filter on column \"Lab Status\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("31_Verify the LabTests table columns")]
        public virtual void _31_VerifyTheLabTestsTableColumns()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("31_Verify the LabTests table columns", null, ((string[])(null)));
#line 153
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 154
    testRunner.Given("I open lab with labid \"L01\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table2.AddRow(new string[] {
                        "Lab Test (Name)"});
            table2.AddRow(new string[] {
                        "Category"});
            table2.AddRow(new string[] {
                        "Subcategory"});
            table2.AddRow(new string[] {
                        "Speciman"});
            table2.AddRow(new string[] {
                        "Method"});
            table2.AddRow(new string[] {
                        "Loinc"});
#line 155
    testRunner.Then("I verify the below columns names displayed in the labTests table", ((string)(null)), table2, "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "BreadCrumb"});
            table3.AddRow(new string[] {
                        "Manage Reference Ranges"});
            table3.AddRow(new string[] {
                        "Lab(L01)"});
#line 163
 testRunner.And("I see breadcrumb items in order", ((string)(null)), table3, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("32_Check sort for Lab Test (Name) column for ascending")]
        public virtual void _32_CheckSortForLabTestNameColumnForAscending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("32_Check sort for Lab Test (Name) column for ascending", null, ((string[])(null)));
#line 168
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 169
 testRunner.When("I sort column \"Lab Test (Name)\" in LabsGrid of LabTestsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 170
 testRunner.Then("I see data in sort order \"Ascending\" in column \"Lab Test (Name)\" in LabTestsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("33_Check sort for Lab Test (Name) column for descending")]
        public virtual void _33_CheckSortForLabTestNameColumnForDescending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("33_Check sort for Lab Test (Name) column for descending", null, ((string[])(null)));
#line 172
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 173
 testRunner.When("I sort column \"Lab Test (Name)\" in LabsGrid of LabTestsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 174
 testRunner.Then("I see data in sort order \"Descending\" in column \"Lab Test (Name)\" in LabTestsPage" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("34_Filter Lab Test (Name) column with IsEqualTo filter criteria")]
        public virtual void _34_FilterLabTestNameColumnWithIsEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("34_Filter Lab Test (Name) column with IsEqualTo filter criteria", null, ((string[])(null)));
#line 176
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 177
 testRunner.When("I apply filter on column \"Lab Test (Name)\" with filter text \"MRRTEST1\" by filter " +
                    "criteria \"Is equal to\" in LabTestsGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 178
 testRunner.Then("I see filtered data in column \"Lab Test (Name)\" with filter text \"MRRTEST1\" and f" +
                    "ilter criteria \"Is equal to\" in LabTestsGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 179
 testRunner.And("I clear filter on column \"Lab Test (Name)\" in LabTestsGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("35_Verify the LabTests table columns")]
        public virtual void _35_VerifyTheLabTestsTableColumns()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("35_Verify the LabTests table columns", null, ((string[])(null)));
#line 181
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 182
 testRunner.Given("I click breadcrumb \"Manage Reference Ranges\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 183
 testRunner.Then("I see page \"Manage Reference Ranges\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("36_Apply Filter on LabID  column to verify No Data found")]
        public virtual void _36_ApplyFilterOnLabIDColumnToVerifyNoDataFound()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("36_Apply Filter on LabID  column to verify No Data found", null, ((string[])(null)));
#line 185
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 186
    testRunner.When("I apply filter on column \"Lab ID\" with filter text \"100\" by filter criteria \"Is e" +
                    "qual to\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 187
 testRunner.Then("I see No records message in Manage Reference Range Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 188
 testRunner.And("I clear filter on column \"Lab ID\" in ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("37_Apply Filter on Lab Test (Name) column to verify No Data found")]
        public virtual void _37_ApplyFilterOnLabTestNameColumnToVerifyNoDataFound()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("37_Apply Filter on Lab Test (Name) column to verify No Data found", null, ((string[])(null)));
#line 190
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 191
    testRunner.Given("I open lab with labid \"101LAB\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 192
    testRunner.When("I apply filter on column \"Lab Test (Name)\" with filter text \"100obin\" by filter c" +
                    "riteria \"Is equal to\" in LabTestsGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 193
 testRunner.Then("I see No records message in Manage Reference Range Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 194
 testRunner.And("I clear filter on column \"Lab Test (Name)\" in LabTestsGrid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("38_Logout form DataLabs")]
        public virtual void _38_LogoutFormDataLabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("38_Logout form DataLabs", null, ((string[])(null)));
#line 196
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 197
 testRunner.When("I clik logout of Datalabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 198
 testRunner.Then("I see login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

