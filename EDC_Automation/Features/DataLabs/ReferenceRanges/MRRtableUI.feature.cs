// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.ReferenceRanges
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("MRRtableUI")]
    public partial class MRRtableUIFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MRRtableUI.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "MRRtableUI", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("01_Login to Datalabs")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        public virtual void _01_LoginToDatalabs()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("01_Login to Datalabs", null, new string[] {
                        "ObjectiveEvidence"});
#line 4
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 5
 testRunner.Given("I logged in to DataLabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("13_Navigate from home page to Labs page, then verify the Manage Reference Ranges " +
            "page")]
        public virtual void _13_NavigateFromHomePageToLabsPageThenVerifyTheManageReferenceRangesPage()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("13_Navigate from home page to Labs page, then verify the Manage Reference Ranges " +
                    "page", null, ((string[])(null)));
#line 111
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 112
 testRunner.Given("I navigate to \"Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 113
    testRunner.When("I open lab with labid \"L21\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 114
 testRunner.And("I open labtest with labname \"01\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate",
                        "Gender",
                        "FromAgeSelect",
                        "FromAgeSet",
                        "FromAgeRange",
                        "ToAgeSelect",
                        "ToAgeSet",
                        "ToAgeRange",
                        "NormalRangeLowSelect",
                        "NormalRangeLowSet",
                        "NormalRangeHighSelect",
                        "NormalRangeHighSet",
                        "ClinicalRangeLowSelect",
                        "ClinicalRangeLowSet",
                        "ClinicalRangeHighSelect",
                        "ClinicalRangeHighSet",
                        "Unit"});
            table1.AddRow(new string[] {
                        "09/18/2016",
                        "09/18/2017",
                        "Not Specified",
                        "=",
                        "1",
                        "Years",
                        "=",
                        "2",
                        "Years",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "01"});
            table1.AddRow(new string[] {
                        "09/19/2017",
                        "10/19/2017",
                        "Not Specified",
                        ">",
                        "2",
                        "Years",
                        "<",
                        "3",
                        "Years",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "02"});
            table1.AddRow(new string[] {
                        "10/19/2017",
                        "10/20/2017",
                        "Not Specified",
                        "=",
                        "4",
                        "Years",
                        "<",
                        "5",
                        "Years",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "03"});
            table1.AddRow(new string[] {
                        "09/18/2016",
                        "09/18/2017",
                        "Male",
                        "=",
                        "1",
                        "Years",
                        "=",
                        "2",
                        "Years",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "04"});
            table1.AddRow(new string[] {
                        "09/19/2017",
                        "10/19/2017",
                        "Male",
                        ">",
                        "2",
                        "Years",
                        "<",
                        "3",
                        "Years",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "05"});
            table1.AddRow(new string[] {
                        "10/19/2017",
                        "10/20/2017",
                        "Male",
                        "=",
                        "4",
                        "Years",
                        "<",
                        "5",
                        "Years",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "06"});
            table1.AddRow(new string[] {
                        "09/18/2016",
                        "09/18/2017",
                        "Female",
                        "=",
                        "1",
                        "Years",
                        "=",
                        "2",
                        "Years",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "07"});
            table1.AddRow(new string[] {
                        "09/19/2017",
                        "10/19/2017",
                        "Female",
                        ">",
                        "2",
                        "Years",
                        "<",
                        "3",
                        "Years",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "08"});
            table1.AddRow(new string[] {
                        "10/19/2017",
                        "10/20/2017",
                        "Female",
                        "=",
                        "4",
                        "Years",
                        "<",
                        "5",
                        "Years",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "09"});
            table1.AddRow(new string[] {
                        "10/21/2017",
                        "10/21/2018",
                        "Not Specified",
                        "=",
                        "1",
                        "Months",
                        "=",
                        "5",
                        "Weeks",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "10"});
            table1.AddRow(new string[] {
                        "10/22/2018",
                        "10/23/2019",
                        "Not Specified",
                        "=",
                        "1",
                        "Days",
                        "=",
                        "24",
                        "Hours",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "11"});
            table1.AddRow(new string[] {
                        "10/24/2019",
                        "10/24/2020",
                        "Not Specified",
                        "=",
                        "1",
                        "Years",
                        "=",
                        "365",
                        "Days",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "12"});
#line 115
 testRunner.And("I click add and enter reference ranges of a lab test and Save and can see \"LabTes" +
                    "t Reference Range Added Successfully\" message upon each record save in Reference" +
                    "RangesPage", ((string)(null)), table1, "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "StartDate",
                        "EndDate",
                        "Gender",
                        "FromAgeSelect",
                        "FromAgeSet",
                        "FromAgeRange",
                        "ToAgeSelect",
                        "ToAgeSet",
                        "ToAgeRange",
                        "NormalRangeLowSelect",
                        "NormalRangeLowSet",
                        "NormalRangeHighSelect",
                        "NormalRangeHighSet",
                        "ClinicalRangeLowSelect",
                        "ClinicalRangeLowSet",
                        "ClinicalRangeHighSelect",
                        "ClinicalRangeHighSet",
                        "Unit"});
            table2.AddRow(new string[] {
                        "09/18/2016",
                        "09/18/2017",
                        "Not Specified",
                        "=",
                        "1",
                        "Years",
                        "=",
                        "2",
                        "Years",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "01"});
            table2.AddRow(new string[] {
                        "09/19/2017",
                        "10/19/2017",
                        "Not Specified",
                        ">",
                        "2",
                        "Years",
                        "<",
                        "3",
                        "Years",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "02"});
            table2.AddRow(new string[] {
                        "10/19/2017",
                        "10/20/2017",
                        "Not Specified",
                        "=",
                        "4",
                        "Years",
                        "<",
                        "5",
                        "Years",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "03"});
            table2.AddRow(new string[] {
                        "09/18/2016",
                        "09/18/2017",
                        "Male",
                        "=",
                        "1",
                        "Years",
                        "=",
                        "2",
                        "Years",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "04"});
            table2.AddRow(new string[] {
                        "09/19/2017",
                        "10/19/2017",
                        "Male",
                        ">",
                        "2",
                        "Years",
                        "<",
                        "3",
                        "Years",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "05"});
            table2.AddRow(new string[] {
                        "10/19/2017",
                        "10/20/2017",
                        "Male",
                        "=",
                        "4",
                        "Years",
                        "<",
                        "5",
                        "Years",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "06"});
            table2.AddRow(new string[] {
                        "09/18/2016",
                        "09/18/2017",
                        "Female",
                        "=",
                        "1",
                        "Years",
                        "=",
                        "2",
                        "Years",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "07"});
            table2.AddRow(new string[] {
                        "09/19/2017",
                        "10/19/2017",
                        "Female",
                        ">",
                        "2",
                        "Years",
                        "<",
                        "3",
                        "Years",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "08"});
            table2.AddRow(new string[] {
                        "10/19/2017",
                        "10/20/2017",
                        "Female",
                        "=",
                        "4",
                        "Years",
                        "<",
                        "5",
                        "Years",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "09"});
            table2.AddRow(new string[] {
                        "10/21/2017",
                        "10/21/2018",
                        "Not Specified",
                        "=",
                        "1",
                        "Months",
                        "=",
                        "5",
                        "Weeks",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "10"});
            table2.AddRow(new string[] {
                        "10/22/2018",
                        "10/23/2019",
                        "Not Specified",
                        "=",
                        "1",
                        "Days",
                        "=",
                        "24",
                        "Hours",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "11"});
            table2.AddRow(new string[] {
                        "10/24/2019",
                        "10/24/2020",
                        "Not Specified",
                        "=",
                        "1",
                        "Years",
                        "=",
                        "365",
                        "Days",
                        ">",
                        "23",
                        "<",
                        "85",
                        ">",
                        "20",
                        "<",
                        "100",
                        "12"});
#line 129
 testRunner.Then("I create a new record with the same data and I can see \"Duplicate reference range" +
                    " record cannot be entered\" error message upon each record save in ReferenceRange" +
                    "sPage", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("14_Verify the column Header names in Mrr table when user clicks on Mrr Lab Test l" +
            "ink")]
        public virtual void _14_VerifyTheColumnHeaderNamesInMrrTableWhenUserClicksOnMrrLabTestLink()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("14_Verify the column Header names in Mrr table when user clicks on Mrr Lab Test l" +
                    "ink", null, ((string[])(null)));
#line 144
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 145
 testRunner.When("I navigate to \"Labs\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 146
 testRunner.And("I open lab with labid \"L21\" from ManageReferenceRanges page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 147
 testRunner.And("I open labtest with labname \"MRRTEST1\" from labtests page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 148
 testRunner.And("I sort column \"Start Date1\" in MrrGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 149
 testRunner.And("I sort column \"From Age1\" in MrrGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 150
 testRunner.And("I sort column \"From Age2\" in MrrGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 151
 testRunner.And("I sort column \"Gender\" in MrrGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 152
 testRunner.And("I sort column \"Gender\" in MrrGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 153
 testRunner.Then("I should see the checkbox in the MRR table column header of Manage Reference Rang" +
                    "es page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table3.AddRow(new string[] {
                        ""});
            table3.AddRow(new string[] {
                        "Ref ID"});
            table3.AddRow(new string[] {
                        "Start Date"});
            table3.AddRow(new string[] {
                        "End Date"});
            table3.AddRow(new string[] {
                        "Gender"});
            table3.AddRow(new string[] {
                        "From Age"});
            table3.AddRow(new string[] {
                        "To Age"});
            table3.AddRow(new string[] {
                        "Normal Range"});
            table3.AddRow(new string[] {
                        "Critical Range"});
            table3.AddRow(new string[] {
                        "Unit Name"});
            table3.AddRow(new string[] {
                        "NA"});
            table3.AddRow(new string[] {
                        "Actions"});
#line 154
 testRunner.And("I should see the below mentioned column header names in the MRR table of Manage R" +
                    "eference Ranges page", ((string)(null)), table3, "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table4.AddRow(new string[] {
                        "Low"});
            table4.AddRow(new string[] {
                        "High"});
#line 168
 testRunner.And("I should see the below mentioned sub column header names under the header Normal " +
                    "Range in the MRR table of Manage Reference Ranges page", ((string)(null)), table4, "And ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name"});
            table5.AddRow(new string[] {
                        "Low"});
            table5.AddRow(new string[] {
                        "High"});
#line 172
 testRunner.And("I should see the below mentioned sub column header names under the header Critica" +
                    "l Range in the MRR table of Manage Reference Ranges page", ((string)(null)), table5, "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("15_Check sort for Ref ID column for descending")]
        public virtual void _15_CheckSortForRefIDColumnForDescending()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("15_Check sort for Ref ID column for descending", null, ((string[])(null)));
#line 183
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 184
 testRunner.When("I sort column \"Ref ID\" in MrrGrid of ManageReferenceRangesPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 185
 testRunner.Then("I see data in sort order \"Ascending\" in column \"Ref ID\" in the MrrGrid of Mrr pag" +
                    "e for RefID", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("42_Filter Start Date column with IsEqualTo filter criteria")]
        public virtual void _42_FilterStartDateColumnWithIsEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("42_Filter Start Date column with IsEqualTo filter criteria", null, ((string[])(null)));
#line 296
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 297
 testRunner.When("I apply filter on column \"Start Date\" with filter text \"11/06/2018\" by filter cri" +
                    "teria \"Not equal to\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 298
 testRunner.Then("I see filtered data in column \"Start Date\" with filter text \"11/06/2018\" and filt" +
                    "er criteria \"Not equal to\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 299
 testRunner.And("I clear filter on column \"Start Date\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("43_Filter Start Date column with IsEqualTo filter criteria")]
        public virtual void _43_FilterStartDateColumnWithIsEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("43_Filter Start Date column with IsEqualTo filter criteria", null, ((string[])(null)));
#line 301
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 302
 testRunner.When("I apply filter on column \"End Date\" with filter text \"10/15/2018\" by filter crite" +
                    "ria \"Equal to\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 303
 testRunner.Then("I see filtered data in column \"End Date\" with filter text \"10/15/2018\" and filter" +
                    " criteria \"Equal to\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 304
 testRunner.And("I clear filter on column \"End Date\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("44_Filter Start Date column with IsEqualTo filter criteria")]
        public virtual void _44_FilterStartDateColumnWithIsEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("44_Filter Start Date column with IsEqualTo filter criteria", null, ((string[])(null)));
#line 306
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 307
 testRunner.When("I apply filter on column \"Gender\" with filter text \"Male\" by filter criteria \"Equ" +
                    "al to\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 308
 testRunner.Then("I see filtered data in column \"Gender\" with filter text \"Male\" and filter criteri" +
                    "a \"Equal to\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 309
 testRunner.And("I clear filter on column \"Gender\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("45_Filter Start Date column with IsEqualTo filter criteria")]
        public virtual void _45_FilterStartDateColumnWithIsEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("45_Filter Start Date column with IsEqualTo filter criteria", null, ((string[])(null)));
#line 311
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 312
 testRunner.When("I apply filter on column \"From Age\" with filter text \"48\" by filter criteria \"Equ" +
                    "al to\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 313
 testRunner.Then("I see filtered data in column \"From Age\" with filter text \"48\" and filter criteri" +
                    "a \"Equal to\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 314
 testRunner.And("I clear filter on column \"From Age\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("46_Filter Start Date column with IsEqualTo filter criteria")]
        public virtual void _46_FilterStartDateColumnWithIsEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("46_Filter Start Date column with IsEqualTo filter criteria", null, ((string[])(null)));
#line 316
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 317
 testRunner.When("I apply filter on column \"To Age\" with filter text \"35\" by filter criteria \"Equal" +
                    " to\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 318
 testRunner.Then("I see filtered data in column \"To Age\" with filter text \"35\" and filter criteria " +
                    "\"Equal to\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 319
 testRunner.And("I clear filter on column \"To Age\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("47_Filter Start Date column with IsEqualTo filter criteria")]
        public virtual void _47_FilterStartDateColumnWithIsEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("47_Filter Start Date column with IsEqualTo filter criteria", null, ((string[])(null)));
#line 321
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 322
 testRunner.When("I apply filter on column \"Unit\" with filter text \"3Unit\" by filter criteria \"Equa" +
                    "l to\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 323
 testRunner.Then("I see filtered data in column \"Unit\" with filter text \"3Unit\" and filter criteria" +
                    " \"Equal to\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 324
 testRunner.And("I clear filter on column \"Unit\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("48_Filter Start Date column with IsEqualTo filter criteria")]
        public virtual void _48_FilterStartDateColumnWithIsEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("48_Filter Start Date column with IsEqualTo filter criteria", null, ((string[])(null)));
#line 326
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 327
 testRunner.When("I apply filter on column \"NA\" by selecting \"true\" option in Mrr Lab Test Name Gri" +
                    "d in MRR page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 328
 testRunner.Then("I see filtered data in column \"NA\" with filter text \"true\" and filter criteria \"E" +
                    "qual to\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 329
 testRunner.And("I clear filter on column \"NA\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("49_Filter Low Normal Range column with IsEqualTo filter criteria")]
        public virtual void _49_FilterLowNormalRangeColumnWithIsEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("49_Filter Low Normal Range column with IsEqualTo filter criteria", null, ((string[])(null)));
#line 331
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 332
 testRunner.When("I apply filter on column Normal Range \"Low\" with filter text \"> 235\" by filter cr" +
                    "iteria \"Is equal to\" in Mrr Lab Test Name Grid for \"1\" sub column", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 333
 testRunner.Then("I see filtered data in column Normal Range \"Low\" with filter text \"> 235\" and fil" +
                    "ter criteria \"Is equal to\" in Mrr Lab Test Name Grid for \"1\" sub column", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 334
 testRunner.And("I clear filter on column Normal Range \"Low\" in Mrr Lab Test Name Grid for subcolu" +
                    "mn \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("50_Filter High Normal Range column with IsEqualTo filter criteria")]
        public virtual void _50_FilterHighNormalRangeColumnWithIsEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("50_Filter High Normal Range column with IsEqualTo filter criteria", null, ((string[])(null)));
#line 336
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 337
 testRunner.When("I apply filter on column Normal Range \"High\" with filter text \"< 83\" by filter cr" +
                    "iteria \"Is equal to\" in Mrr Lab Test Name Grid for \"1\" sub column", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 338
 testRunner.Then("I see filtered data in column Normal Range \"High\" with filter text \"< 83\" and fil" +
                    "ter criteria \"Is equal to\" in Mrr Lab Test Name Grid for \"1\" sub column", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 339
 testRunner.And("I clear filter on column Normal Range \"High\" in Mrr Lab Test Name Grid for subcol" +
                    "umn \"1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("51_Filter Low Critial Range column with IsEqualTo filter criteria")]
        public virtual void _51_FilterLowCritialRangeColumnWithIsEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("51_Filter Low Critial Range column with IsEqualTo filter criteria", null, ((string[])(null)));
#line 341
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 342
 testRunner.When("I apply filter on column Critical Range \"Low\" with filter text \"> 235\" by filter " +
                    "criteria \"Is equal to\" in Mrr Lab Test Name Grid for \"2\" sub column", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 343
 testRunner.Then("I see filtered data in column Critical Range \"Low\" with filter text \"> 235\" and f" +
                    "ilter criteria \"Is equal to\" in Mrr Lab Test Name Grid for \"2\" sub column", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 344
 testRunner.And("I clear filter on column Critical Range \"Low\" in Mrr Lab Test Name Grid for subco" +
                    "lumn \"2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("52_Filter High Critial Range column with IsEqualTo filter criteria")]
        public virtual void _52_FilterHighCritialRangeColumnWithIsEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("52_Filter High Critial Range column with IsEqualTo filter criteria", null, ((string[])(null)));
#line 346
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 347
 testRunner.When("I apply filter on column Critical Range \"High\" with filter text \"< 83\" by filter " +
                    "criteria \"Is equal to\" in Mrr Lab Test Name Grid for \"2\" sub column", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 348
 testRunner.Then("I see filtered data in column Critical Range \"High\" with filter text \"< 83\" and f" +
                    "ilter criteria \"Is equal to\" in Mrr Lab Test Name Grid for \"2\" sub column", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 349
 testRunner.And("I clear filter on column Critical Range \"High\" in Mrr Lab Test Name Grid for subc" +
                    "olumn \"2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("100_Filter Gender Name column with IsNotEqualTo filter criteria")]
        public virtual void _100_FilterGenderNameColumnWithIsNotEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("100_Filter Gender Name column with IsNotEqualTo filter criteria", null, ((string[])(null)));
#line 351
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 352
 testRunner.When("I apply filter on column \"Gender\" with filter text \"Female\" by filter criteria \"I" +
                    "s not equal to\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 353
 testRunner.Then("I see filtered data in column \"Gender\" with filter text \"Female\" and filter crite" +
                    "ria \"Is not equal to\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 354
 testRunner.And("I clear filter on column \"Gender\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("54_Filter Start Date column with Contains filter criteria")]
        public virtual void _54_FilterStartDateColumnWithContainsFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("54_Filter Start Date column with Contains filter criteria", null, ((string[])(null)));
#line 356
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 357
 testRunner.When("I apply filter on column \"Start Date\" with filter text \"14\" by filter criteria \"C" +
                    "ontains\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 358
 testRunner.Then("I see filtered data in column \"Start Date\" with filter text \"14\" and filter crite" +
                    "ria \"Contains\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 359
 testRunner.And("I clear filter on column \"Start Date\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("55_Filter End Date column with DoesNotContain filter criteria")]
        public virtual void _55_FilterEndDateColumnWithDoesNotContainFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("55_Filter End Date column with DoesNotContain filter criteria", null, ((string[])(null)));
#line 361
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 362
 testRunner.When("I apply filter on column \"End Date\" with filter text \"2019\" by filter criteria \"D" +
                    "oes not contain\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 363
 testRunner.Then("I see filtered data in column \"End Date\" with filter text \"2019\" and filter crite" +
                    "ria \"Does not contain\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 364
 testRunner.And("I clear filter on column \"End Date\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("56_Filter Unit column with EndsWith filter criteria")]
        public virtual void _56_FilterUnitColumnWithEndsWithFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("56_Filter Unit column with EndsWith filter criteria", null, ((string[])(null)));
#line 366
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 367
 testRunner.When("I apply filter on column \"Unit\" with filter text \"/L\" by filter criteria \"Ends wi" +
                    "th\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 368
 testRunner.Then("I see filtered data in column \"Unit\" with filter text \"/L\" and filter criteria \"E" +
                    "nds with\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 369
 testRunner.And("I clear filter on column \"Unit\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("57_Filter To Age column with EndsWith filter criteria")]
        public virtual void _57_FilterToAgeColumnWithEndsWithFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("57_Filter To Age column with EndsWith filter criteria", null, ((string[])(null)));
#line 371
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 372
 testRunner.When("I apply filter on column \"To Age\" with filter text \"Months\" by filter criteria \"E" +
                    "nds with\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 373
 testRunner.Then("I see filtered data in column \"To Age\" with filter text \"Months\" and filter crite" +
                    "ria \"Ends with\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 374
 testRunner.And("I clear filter on column \"To Age\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("58_Filter From Age column with StartsWith filter criteria")]
        public virtual void _58_FilterFromAgeColumnWithStartsWithFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("58_Filter From Age column with StartsWith filter criteria", null, ((string[])(null)));
#line 376
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 377
 testRunner.When("I apply filter on column \"From Age\" with filter text \"<\" by filter criteria \"Star" +
                    "ts with\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 378
 testRunner.Then("I see filtered data in column \"From Age\" with filter text \"<\" and filter criteria" +
                    " \"Starts with\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 379
 testRunner.And("I clear filter on column \"From Age\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("59_Filter RefID column with IsNotEqualTo filter criteria")]
        public virtual void _59_FilterRefIDColumnWithIsNotEqualToFilterCriteria()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("59_Filter RefID column with IsNotEqualTo filter criteria", null, ((string[])(null)));
#line 381
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 382
 testRunner.When("I apply filter on column \"Ref ID\" with filter text \"%&*$\" by filter criteria \"Is " +
                    "not equal to\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 383
 testRunner.Then("I see filtered data in column \"Ref ID\" with filter text \"%&*$\" and filter criteri" +
                    "a \"Is not equal to\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 384
 testRunner.And("I clear filter on column \"Ref ID\" in Mrr Lab Test Name Grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

