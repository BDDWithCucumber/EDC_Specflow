// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.4.0.0
//      SpecFlow Generator Version:2.4.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace EDC_Automation.Features.DataLabs.QCDefects
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.4.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("DataLabs_V5.7.1_QC1697_1654_StudyUpdate_Patient History")]
    public partial class DataLabs_V5_7_1_QC1697_1654_StudyUpdate_PatientHistoryFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "QC1697and1654.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "DataLabs_V5.7.1_QC1697_1654_StudyUpdate_Patient History", @"Test Summary:
		1. Verification of table history icon for table after patient Migration without any changes on the table.
		2. Verification of Table history order in data labs application and archive export XML for table before patient migration and after patient migration. ", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T01_Login to Datalabs application.")]
        public virtual void T01_LoginToDatalabsApplication_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T01_Login to Datalabs application.", null, ((string[])(null)));
#line 7
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 8
 testRunner.Given("I have logged into DataLabs application as an Administrator user.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 9
 testRunner.Then("I see Datalabs Home Page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T02_Delete a study")]
        public virtual void T02_DeleteAStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T02_Delete a study", null, ((string[])(null)));
#line 11
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 12
 testRunner.When("I delete study", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 13
 testRunner.Then("I see study label \"No Study Loaded\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T03_Publish a study")]
        public virtual void T03_PublishAStudy()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T03_Publish a study", null, ((string[])(null)));
#line 15
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 16
 testRunner.When("I click breadcrumb \"Study Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 17
 testRunner.And("I upload a study \"Test4500_AH Base study V1.zip\" with study label \"V1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 18
 testRunner.Then("I see study label \"Test4500_Big_560\" in header", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T04_Add sites to associate to labs.")]
        public virtual void T04_AddSitesToAssociateToLabs_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T04_Add sites to associate to labs.", null, ((string[])(null)));
#line 20
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 21
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 22
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "SiteId",
                        "SiteName",
                        "Address1",
                        "Address2",
                        "Address3",
                        "Address4",
                        "City",
                        "State",
                        "Zip",
                        "ISOCountry",
                        "Country",
                        "Phone",
                        "Fax",
                        "SiteStatus",
                        "DCFWorkflow",
                        "ExternalSource",
                        "ExternalId"});
            table1.AddRow(new string[] {
                        "01",
                        "Site",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        "-"});
            table1.AddRow(new string[] {
                        "02",
                        "Site",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "ADDRESS",
                        "Hyderabad",
                        "AP",
                        "500060",
                        "INDIA(IND)",
                        "",
                        "9999999999",
                        "66666666666",
                        "Active",
                        "Electronic",
                        "No",
                        "-"});
#line 23
 testRunner.And("I enter sites details and Save", ((string)(null)), table1, "And ");
#line 27
 testRunner.Then("I see success message \"Site Added Successfully\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T05_Assign testadmin testadmin user to 01-Site")]
        public virtual void T05_AssignTestadminTestadminUserTo01_Site()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T05_Assign testadmin testadmin user to 01-Site", null, ((string[])(null)));
#line 29
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 30
 testRunner.When("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 31
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
 testRunner.Then("I see success message \"Save Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T06_Assign testadmin testadmin user to 02-Site")]
        public virtual void T06_AssignTestadminTestadminUserTo02_Site()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T06_Assign testadmin testadmin user to 02-Site", null, ((string[])(null)));
#line 35
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 36
 testRunner.Given("I click breadcrumb \"Site Management\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 37
 testRunner.When("I open site with siteid \"02\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 38
 testRunner.And("I click ActionPalette Item \"Manage Users\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 39
 testRunner.And("I add and save user \"testadmin testadmin\" to site users in SiteManageUsersPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 40
 testRunner.Then("I see success message \"Save Successful\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T07_Add patient 01-PAT from Datalabs UI")]
        public virtual void T07_AddPatient01_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T07_Add patient 01-PAT from Datalabs UI", null, ((string[])(null)));
#line 42
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 43
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 44
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table2.AddRow(new string[] {
                        "01",
                        "PAT",
                        "06/13/2018"});
#line 45
 testRunner.When("I add patient with below details.", ((string)(null)), table2, "When ");
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table3.AddRow(new string[] {
                        "01-PAT"});
#line 48
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table3, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T08_Select and enroll patient 01-PAT.")]
        public virtual void T08_SelectAndEnrollPatient01_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T08_Select and enroll patient 01-PAT.", null, ((string[])(null)));
#line 52
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 53
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 54
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
 testRunner.And("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table4.AddRow(new string[] {
                        "01",
                        "06/13/2018",
                        "Yes"});
#line 56
 testRunner.When("I enroll the patient \"01-PAT\" with below data.", ((string)(null)), table4, "When ");
#line 59
 testRunner.Then("I see patient \"01-PAT\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T09_Select a site and a patient.")]
        public virtual void T09_SelectASiteAndAPatient_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T09_Select a site and a patient.", null, ((string[])(null)));
#line 61
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 62
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 63
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 64
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 65
 testRunner.Then("I see Patient details page for \"01-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T10_Navigate to Form1 in visit (Week2) event and Add row to the table.")]
        public virtual void T10_NavigateToForm1InVisitWeek2EventAndAddRowToTheTable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T10_Navigate to Form1 in visit (Week2) event and Add row to the table.", null, ((string[])(null)));
#line 67
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 68
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 69
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 71
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 72
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 73
 testRunner.And("I click on \"Add New Row\" button in \"Sample Table:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 74
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Sample Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 75
 testRunner.And("I click on \"Add New Row\" button in \"Sample Table:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 76
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Sample Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 77
 testRunner.And("I click on \"Add New Row\" button in \"Sample Table:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 78
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Sample Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 79
 testRunner.And("I click on \"Add New Row\" button in \"Sample Table:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 80
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Sample Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
 testRunner.Then("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 82
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T11_Delete a row and Save and close the form in form1 week2 ssample table.")]
        public virtual void T11_DeleteARowAndSaveAndCloseTheFormInForm1Week2SsampleTable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T11_Delete a row and Save and close the form in form1 week2 ssample table.", null, ((string[])(null)));
#line 84
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 85
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 86
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 87
 testRunner.And("I expand row \"3\" of table \"Sample Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 88
 testRunner.And("I click table row button \"Delete Row\" of table \"Sample Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 89
 testRunner.And("I select reason for change \"DCF\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 90
 testRunner.And("I enter additional notes \"Invalid Data\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 91
 testRunner.And("I click continue button in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 92
 testRunner.Then("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 93
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T12_Restore a row for sample table in Form1 for Visit week2.")]
        public virtual void T12_RestoreARowForSampleTableInForm1ForVisitWeek2_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T12_Restore a row for sample table in Form1 for Visit week2.", null, ((string[])(null)));
#line 95
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 96
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 97
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 98
 testRunner.When("I expand row \"3\" of table \"Sample Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 99
 testRunner.And("I click table row button \"Restore Row\" of table \"Sample Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 100
 testRunner.And("I select reason for change \"DCF\" in RestoreTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 101
 testRunner.And("I enter additional notes \"Data Backup\" in RestoreTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 102
 testRunner.And("I click continue button in RestoreTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 103
 testRunner.Then("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 104
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T13_Verify Item change history for \"Sample Table:\" table in Form1 visit (Week 2)." +
            "")]
        public virtual void T13_VerifyItemChangeHistoryForSampleTableTableInForm1VisitWeek2_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T13_Verify Item change history for \"Sample Table:\" table in Form1 visit (Week 2)." +
                    "", null, ((string[])(null)));
#line 106
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 107
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 108
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 109
 testRunner.When("I invoke table hisotry for table \"Sample Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table5 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table5.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Restored",
                        "DCF",
                        "Data Backup"});
            table5.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Deleted",
                        "DCF",
                        "Invalid Data"});
            table5.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 4: Added",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table5.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 110
    testRunner.Then("I see table history for table \"Sample Table:\" in TableHistoryModalDialog", ((string)(null)), table5, "Then ");
#line 118
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 119
 testRunner.Then("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T14_Navigate to DT1 Dt2 Form in visit (Week 7) event and Add row to the table.")]
        public virtual void T14_NavigateToDT1Dt2FormInVisitWeek7EventAndAddRowToTheTable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T14_Navigate to DT1 Dt2 Form in visit (Week 7) event and Add row to the table.", null, ((string[])(null)));
#line 121
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 122
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 123
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 124
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 125
 testRunner.And("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 126
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 127
 testRunner.And("I click on \"Add New Row\" button in \"LabId and Gorups:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 128
 testRunner.And("I click table row button \"Save & Close Row\" of table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 129
 testRunner.And("I click on \"Add New Row\" button in \"LabId and Gorups:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 130
 testRunner.And("I click table row button \"Save & Close Row\" of table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 131
 testRunner.And("I click on \"Add New Row\" button in \"LabId and Gorups:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 132
 testRunner.And("I click table row button \"Save & Close Row\" of table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 133
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 134
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T15_Navigate to DT1 Dt2 Form in visit (Week 7) event and delete a row.")]
        public virtual void T15_NavigateToDT1Dt2FormInVisitWeek7EventAndDeleteARow_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T15_Navigate to DT1 Dt2 Form in visit (Week 7) event and delete a row.", null, ((string[])(null)));
#line 136
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 137
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 138
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 139
 testRunner.And("I expand row \"2\" of table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 140
 testRunner.And("I click table row button \"Delete Row\" of table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 141
 testRunner.And("I select reason for change \"DCF\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 142
 testRunner.And("I enter additional notes \"Wrong Data\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 143
 testRunner.And("I click continue button in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 144
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 145
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T16_Verify the history for added rows and deleted rows on DT1 DT2 Form.")]
        public virtual void T16_VerifyTheHistoryForAddedRowsAndDeletedRowsOnDT1DT2Form_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T16_Verify the history for added rows and deleted rows on DT1 DT2 Form.", null, ((string[])(null)));
#line 147
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 148
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 149
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 150
 testRunner.When("I invoke table hisotry for table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table6 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table6.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Deleted",
                        "DCF",
                        "Wrong Data"});
            table6.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table6.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table6.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 151
    testRunner.Then("I see table history for table \"LabId and Gorups:\" in TableHistoryModalDialog", ((string)(null)), table6, "Then ");
#line 157
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 158
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T17_Navigate to DT1 Dt2 Form in visit (Week 7) event and Add row to the other tab" +
            "le.")]
        public virtual void T17_NavigateToDT1Dt2FormInVisitWeek7EventAndAddRowToTheOtherTable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T17_Navigate to DT1 Dt2 Form in visit (Week 7) event and Add row to the other tab" +
                    "le.", null, ((string[])(null)));
#line 160
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 161
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 162
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 163
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 164
 testRunner.And("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 165
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 166
 testRunner.And("I click on \"Add New Row\" button in \"Domain Test 2 Table:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 167
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Domain Test 2 Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 168
 testRunner.And("I click on \"Add New Row\" button in \"Domain Test 2 Table:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 169
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Domain Test 2 Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 170
 testRunner.And("I click on \"Add New Row\" button in \"Domain Test 2 Table:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 171
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Domain Test 2 Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 172
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 173
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T18_Verify the history for added rows and deleted rows on DT1 DT2 Form.")]
        public virtual void T18_VerifyTheHistoryForAddedRowsAndDeletedRowsOnDT1DT2Form_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T18_Verify the history for added rows and deleted rows on DT1 DT2 Form.", null, ((string[])(null)));
#line 175
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 176
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 177
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 178
 testRunner.When("I invoke table hisotry for table \"Domain Test 2 Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table7 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table7.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table7.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table7.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 179
    testRunner.Then("I see table history for table \"Domain Test 2 Table:\" in TableHistoryModalDialog", ((string)(null)), table7, "Then ");
#line 184
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 185
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T19_Update the derivation (AB_Constant_Date) to Inactive.")]
        public virtual void T19_UpdateTheDerivationAB_Constant_DateToInactive_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T19_Update the derivation (AB_Constant_Date) to Inactive.", null, ((string[])(null)));
#line 187
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 188
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 189
 testRunner.And("I click Link \"Derivation Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 190
 testRunner.And("I click derivation \"AB_Constant_Date\" in DerivationManagementPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 191
 testRunner.And("I Select \"Inactive\" from Status field in DerivationManagementPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 192
 testRunner.And("I click on \"Save\" button in DerivationMangementPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 193
 testRunner.Then("I see success message \"Save Successfully.\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T20_Navigate to AutoBuild Form01 in visit (Week 51) event Checkout and save the f" +
            "orm.")]
        public virtual void T20_NavigateToAutoBuildForm01InVisitWeek51EventCheckoutAndSaveTheForm_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T20_Navigate to AutoBuild Form01 in visit (Week 51) event Checkout and save the f" +
                    "orm.", null, ((string[])(null)));
#line 195
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 196
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 197
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 198
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 199
 testRunner.And("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 200
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 201
 testRunner.Then("I click on \"Save & Close\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 202
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T21_Verify the AutoBuild Form01 CRF tables history.")]
        public virtual void T21_VerifyTheAutoBuildForm01CRFTablesHistory_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T21_Verify the AutoBuild Form01 CRF tables history.", null, ((string[])(null)));
#line 204
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 205
 testRunner.Given("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 206
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 207
 testRunner.When("I invoke table hisotry for table \"Key Sequence on question #2. Table Structure is" +
                    " fixed. Maximum Rows is not exact. Questions (4-7) are derives.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table8 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table8.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 7: Added",
                        "",
                        ""});
            table8.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 6: Added",
                        "",
                        ""});
            table8.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 5: Added",
                        "",
                        ""});
            table8.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 4: Added",
                        "",
                        ""});
            table8.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table8.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table8.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 208
    testRunner.Then("I see table history for table \"Key Sequence on question #2. Table Structure is fi" +
                    "xed. Maximum Rows is not exact. Questions (4-7) are derives.:\" in TableHistoryMo" +
                    "dalDialog", ((string)(null)), table8, "Then ");
#line 217
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 218
 testRunner.When("I invoke table hisotry for table \"Key Sequence on question #1 & #3. Table Structu" +
                    "re is fixed. Maximum Rows is exact. Questions (4-7) have queries.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table9 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table9.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 6: Added",
                        "",
                        ""});
            table9.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 5: Added",
                        "",
                        ""});
            table9.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 4: Added",
                        "",
                        ""});
            table9.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table9.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table9.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 219
    testRunner.Then("I see table history for table \"Key Sequence on question #1 & #3. Table Structure " +
                    "is fixed. Maximum Rows is exact. Questions (4-7) have queries.:\" in TableHistory" +
                    "ModalDialog", ((string)(null)), table9, "Then ");
#line 227
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 228
 testRunner.Then("I click on \"Save & Close\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T22_Update study with patient migration on domain, table name and table order cha" +
            "nge.")]
        public virtual void T22_UpdateStudyWithPatientMigrationOnDomainTableNameAndTableOrderChange_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T22_Update study with patient migration on domain, table name and table order cha" +
                    "nge.", null, ((string[])(null)));
#line 230
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 231
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 232
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 233
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 234
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 235
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 236
 testRunner.And("I upload study \"Test4500_Updated domain, table name and order of the questions V2" +
                    ".zip\" with Label \"V2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 237
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 238
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 239
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 240
 testRunner.And("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 241
 testRunner.And("I select \"Yes\" to reevaluate \"Change SD-Verify Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 242
 testRunner.And("I select \"Yes\" to reevaluate \"Change D-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 243
 testRunner.And("I select \"Yes\" to reevaluate \"Change M-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 244
 testRunner.And("I select \"Yes\" to reevaluate \"Change Signatures?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 245
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 246
 testRunner.And("I select patient migration option \"Migrate all patients\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 247
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 248
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table10 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table10.AddRow(new string[] {
                        "Migration of Site 01 for Study file (V2) - complete. 1 out of 1 patients migrated" +
                            " successfully. To review see migration report."});
            table10.AddRow(new string[] {
                        "Publishing of Study file (V2) - complete."});
#line 249
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table10, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T23_Verify the history for form1 in visit week2 on table name update.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:QC1697")]
        public virtual void T23_VerifyTheHistoryForForm1InVisitWeek2OnTableNameUpdate_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T23_Verify the history for form1 in visit week2 on table name update.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:QC1697"});
#line 255
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 256
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 257
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 258
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 259
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 260
 testRunner.And("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 261
 testRunner.Then("I dont see table history icon for table \"Sample Table name updated:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 262
 testRunner.Then("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T24_Verify the history for DT1 DT2 Form in visit week7 after updating the domain " +
            "name and reorder of the table.")]
        public virtual void T24_VerifyTheHistoryForDT1DT2FormInVisitWeek7AfterUpdatingTheDomainNameAndReorderOfTheTable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T24_Verify the history for DT1 DT2 Form in visit week7 after updating the domain " +
                    "name and reorder of the table.", null, ((string[])(null)));
#line 264
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 265
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 266
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 267
 testRunner.When("I invoke table hisotry for table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table11 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table11.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Deleted",
                        "DCF",
                        "Wrong Data"});
            table11.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table11.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table11.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 268
    testRunner.Then("I see table history for table \"LabId and Gorups:\" in TableHistoryModalDialog", ((string)(null)), table11, "Then ");
#line 274
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 275
 testRunner.When("I invoke table hisotry for table \"Domain Test 2 Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table12 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table12.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table12.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table12.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 276
    testRunner.Then("I see table history for table \"Domain Test 2 Table:\" in TableHistoryModalDialog", ((string)(null)), table12, "Then ");
#line 281
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 282
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T25_verify the table history for AutoBBuild Form01 in Visit weekk 51 for major st" +
            "udy update.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:QC1654")]
        public virtual void T25_VerifyTheTableHistoryForAutoBBuildForm01InVisitWeekk51ForMajorStudyUpdate_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T25_verify the table history for AutoBBuild Form01 in Visit weekk 51 for major st" +
                    "udy update.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:QC1654"});
#line 285
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 286
 testRunner.Given("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 287
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 288
 testRunner.When("I invoke table hisotry for table \"Key Sequence on question #2. Table Structure is" +
                    " fixed. Maximum Rows is not exact. Questions (4-7) are derives.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table13 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table13.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 7: Added",
                        "",
                        ""});
            table13.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 6: Added",
                        "",
                        ""});
            table13.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 5: Added",
                        "",
                        ""});
            table13.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 4: Added",
                        "",
                        ""});
            table13.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table13.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table13.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 289
    testRunner.Then("I see table history for table \"Key Sequence on question #2. Table Structure is fi" +
                    "xed. Maximum Rows is not exact. Questions (4-7) are derives.:\" in TableHistoryMo" +
                    "dalDialog", ((string)(null)), table13, "Then ");
#line 298
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 299
 testRunner.When("I invoke table hisotry for table \"Key Sequence on question #1 & #3. Table Structu" +
                    "re is fixed. Maximum Rows is exact. Questions (4-7) have queries.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table14 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table14.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 6: Added",
                        "",
                        ""});
            table14.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 5: Added",
                        "",
                        ""});
            table14.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 4: Added",
                        "",
                        ""});
            table14.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table14.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table14.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 300
    testRunner.Then("I see table history for table \"Key Sequence on question #1 & #3. Table Structure " +
                    "is fixed. Maximum Rows is exact. Questions (4-7) have queries.:\" in TableHistory" +
                    "ModalDialog", ((string)(null)), table14, "Then ");
#line 308
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 309
 testRunner.Then("I click on \"Save & Close\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T26_Initiate study archive for sites")]
        public virtual void T26_InitiateStudyArchiveForSites()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T26_Initiate study archive for sites", null, ((string[])(null)));
#line 311
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 312
       testRunner.When("I select DataManagerPortal item \"Export\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 313
       testRunner.And("I click link \"Archive Export\" in ExportPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table15 = new TechTalk.SpecFlow.Table(new string[] {
                        "Site"});
            table15.AddRow(new string[] {
                        "01-SIte"});
#line 314
       testRunner.And("I select sites in ArchiveExportPage", ((string)(null)), table15, "And ");
#line 317
       testRunner.And("I click Export button in ArchiveExportPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 318
       testRunner.Then("I click Continue button of Modal \"Archive Export\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T27_Download Archive Export zip folder")]
        public virtual void T27_DownloadArchiveExportZipFolder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T27_Download Archive Export zip folder", null, ((string[])(null)));
#line 320
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 321
 testRunner.When("I click main tab \"Inbox\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 322
 testRunner.And("I click inbox item \"Export (Archive): #1 - complete. Download file.\" in folder \"J" +
                    "obs\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 323
 testRunner.And("I download the file in the execution folder with name \"ArchiveExportFile1\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 324
 testRunner.Then("I see the file with name \"ArchiveExportFile1.zip\" in execution folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T28_Unzip a zip folder")]
        public virtual void T28_UnzipAZipFolder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T28_Unzip a zip folder", null, ((string[])(null)));
#line 326
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 327
 testRunner.When("I unzip folder \"ArchiveExportFile1.zip\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 328
 testRunner.Then("I see unzipped folder \"ArchiveExportFile1\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T29_Save the patient xml file in the execution folder")]
        public virtual void T29_SaveThePatientXmlFileInTheExecutionFolder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T29_Save the patient xml file in the execution folder", null, ((string[])(null)));
#line 330
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 331
 testRunner.When("I save the export file in the folder \"ArchiveExportFile1\\01\" containing \"01-PAT\" " +
                    "in the execution path with name \"ArchiveExportActual1.xml\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 332
 testRunner.Then("I have the XML file \"ArchiveExportActual1.xml\" available in the Test XML Files fo" +
                    "lder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T30_Verify the archive export XML Data for 01-Site with generated archive export " +
            "XML.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:QC1654,QC1697")]
        public virtual void T30_VerifyTheArchiveExportXMLDataFor01_SiteWithGeneratedArchiveExportXML_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T30_Verify the archive export XML Data for 01-Site with generated archive export " +
                    "XML.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:QC1654,QC1697"});
#line 335
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 336
 testRunner.Given("I have the XML file \"ArchiveExportExpected1.xml\" available in the project folder." +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 337
 testRunner.And("I have the XML file \"ArchiveExportActual1.xml\" available in the Result XML Files " +
                    "folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table16 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table16.AddRow(new string[] {
                        "DateTimeStamp",
                        "CreationDateTime"});
            table16.AddRow(new string[] {
                        "SignatureValue",
                        "SubjectKey"});
            table16.AddRow(new string[] {
                        "DigestValue",
                        "FileOID"});
            table16.AddRow(new string[] {
                        "SourceID",
                        "PriorFileOID"});
            table16.AddRow(new string[] {
                        "",
                        "Description"});
            table16.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
            table16.AddRow(new string[] {
                        "",
                        "dl:PatientFormQuestionKey"});
#line 338
 testRunner.Then("I verify that the data in both metadata XML files is same except for below fields" +
                    ".", ((string)(null)), table16, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T31_Navigate to Form1 in visit (Week2) event and Add row to the table.")]
        public virtual void T31_NavigateToForm1InVisitWeek2EventAndAddRowToTheTable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T31_Navigate to Form1 in visit (Week2) event and Add row to the table.", null, ((string[])(null)));
#line 348
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 349
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 350
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 351
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 352
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 353
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 354
 testRunner.And("I click on \"Add New Row\" button in \"Sample Table name updated:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 355
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Sample Table name updated:\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 356
 testRunner.And("I click on \"Add New Row\" button in \"Sample Table name updated:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 357
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Sample Table name updated:\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 358
 testRunner.And("I click on \"Add New Row\" button in \"Sample Table name updated:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 359
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Sample Table name updated:\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 360
 testRunner.And("I click on \"Add New Row\" button in \"Sample Table name updated:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 361
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Sample Table name updated:\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 362
 testRunner.Then("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 363
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T32_Delete a row and Save and close the form in form1 week2 sample table.")]
        public virtual void T32_DeleteARowAndSaveAndCloseTheFormInForm1Week2SampleTable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T32_Delete a row and Save and close the form in form1 week2 sample table.", null, ((string[])(null)));
#line 365
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 366
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 367
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 368
 testRunner.And("I expand row \"3\" of table \"Sample Table name updated:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 369
 testRunner.And("I click table row button \"Delete Row\" of table \"Sample Table name updated:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 370
 testRunner.And("I select reason for change \"DCF\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 371
 testRunner.And("I enter additional notes \"Invalid Data\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 372
 testRunner.And("I click continue button in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 373
 testRunner.Then("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 374
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T33_Restore a row for sample table in Form1 for Visit week2.")]
        public virtual void T33_RestoreARowForSampleTableInForm1ForVisitWeek2_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T33_Restore a row for sample table in Form1 for Visit week2.", null, ((string[])(null)));
#line 376
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 377
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 378
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 379
 testRunner.When("I expand row \"3\" of table \"Sample Table name updated:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 380
 testRunner.And("I click table row button \"Restore Row\" of table \"Sample Table name updated:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 381
 testRunner.And("I select reason for change \"DCF\" in RestoreTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 382
 testRunner.And("I enter additional notes \"Data Backup\" in RestoreTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 383
 testRunner.And("I click continue button in RestoreTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 384
 testRunner.Then("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 385
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T34_Verify Item change history for \"Sample Table name updated:\" table in Form1 vi" +
            "sit (Week 2).")]
        public virtual void T34_VerifyItemChangeHistoryForSampleTableNameUpdatedTableInForm1VisitWeek2_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T34_Verify Item change history for \"Sample Table name updated:\" table in Form1 vi" +
                    "sit (Week 2).", null, ((string[])(null)));
#line 387
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 388
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 389
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 390
 testRunner.When("I invoke table hisotry for table \"Sample Table name updated:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table17 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table17.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Restored",
                        "DCF",
                        "Data Backup"});
            table17.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Deleted",
                        "DCF",
                        "Invalid Data"});
            table17.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 4: Added",
                        "",
                        ""});
            table17.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table17.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table17.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 391
    testRunner.Then("I see table history for table \"Sample Table name updated:\" in TableHistoryModalDi" +
                    "alog", ((string)(null)), table17, "Then ");
#line 399
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 400
 testRunner.Then("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T35_Add patient 02-PAT from Datalabs UI")]
        public virtual void T35_AddPatient02_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T35_Add patient 02-PAT from Datalabs UI", null, ((string[])(null)));
#line 402
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 403
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 404
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table18 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table18.AddRow(new string[] {
                        "02",
                        "PAT",
                        "06/13/2018"});
#line 405
 testRunner.When("I add patient with below details.", ((string)(null)), table18, "When ");
#line hidden
            TechTalk.SpecFlow.Table table19 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table19.AddRow(new string[] {
                        "02-PAT"});
#line 408
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table19, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T36_Select and enroll patient 02-PAT.")]
        public virtual void T36_SelectAndEnrollPatient02_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T36_Select and enroll patient 02-PAT.", null, ((string[])(null)));
#line 412
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 413
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 414
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 415
 testRunner.And("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table20 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table20.AddRow(new string[] {
                        "02",
                        "06/13/2018",
                        "Yes"});
#line 416
 testRunner.When("I enroll the patient \"02-PAT\" with below data.", ((string)(null)), table20, "When ");
#line 419
 testRunner.Then("I see patient \"02-PAT\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T37_Add patient 03-PAT from Datalabs UI")]
        public virtual void T37_AddPatient03_PATFromDatalabsUI()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T37_Add patient 03-PAT from Datalabs UI", null, ((string[])(null)));
#line 421
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 422
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 423
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table21 = new TechTalk.SpecFlow.Table(new string[] {
                        "ScreenID",
                        "PatientInitials",
                        "ScreenDate"});
            table21.AddRow(new string[] {
                        "03",
                        "PAT",
                        "06/13/2018"});
#line 424
 testRunner.When("I add patient with below details.", ((string)(null)), table21, "When ");
#line hidden
            TechTalk.SpecFlow.Table table22 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table22.AddRow(new string[] {
                        "03-PAT"});
#line 427
 testRunner.Then("I see below patients added in the Patients table.", ((string)(null)), table22, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T38_Select and enroll patient 03-PAT.")]
        public virtual void T38_SelectAndEnrollPatient03_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T38_Select and enroll patient 03-PAT.", null, ((string[])(null)));
#line 431
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 432
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 433
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 434
 testRunner.And("I select the patient \"03-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table23 = new TechTalk.SpecFlow.Table(new string[] {
                        "EnrollID",
                        "EnrollDate",
                        "EntryComplete"});
            table23.AddRow(new string[] {
                        "03",
                        "06/13/2018",
                        "Yes"});
#line 435
 testRunner.When("I enroll the patient \"03-PAT\" with below data.", ((string)(null)), table23, "When ");
#line 438
 testRunner.Then("I see patient \"03-PAT\" status as \"Enrolled\" on Patient details page.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T39_Navigate to Form1 in visit (Week2) event and Add row to the table in 02-Pat.")]
        public virtual void T39_NavigateToForm1InVisitWeek2EventAndAddRowToTheTableIn02_Pat_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T39_Navigate to Form1 in visit (Week2) event and Add row to the table in 02-Pat.", null, ((string[])(null)));
#line 440
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 441
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 442
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 443
 testRunner.When("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 444
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 445
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 446
 testRunner.And("I click on \"Add New Row\" button in \"Sample Table name updated:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 447
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Sample Table name updated:\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 448
 testRunner.And("I click on \"Add New Row\" button in \"Sample Table name updated:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 449
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Sample Table name updated:\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 450
 testRunner.And("I click on \"Add New Row\" button in \"Sample Table name updated:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 451
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Sample Table name updated:\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 452
 testRunner.And("I click on \"Add New Row\" button in \"Sample Table name updated:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 453
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Sample Table name updated:\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 454
 testRunner.Then("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 455
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T40_Delete a row and Save and close the form in form1 week2 sample table.")]
        public virtual void T40_DeleteARowAndSaveAndCloseTheFormInForm1Week2SampleTable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T40_Delete a row and Save and close the form in form1 week2 sample table.", null, ((string[])(null)));
#line 457
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 458
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 459
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 460
 testRunner.And("I expand row \"3\" of table \"Sample Table name updated:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 461
 testRunner.And("I click table row button \"Delete Row\" of table \"Sample Table name updated:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 462
 testRunner.And("I select reason for change \"DCF\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 463
 testRunner.And("I enter additional notes \"Invalid Data\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 464
 testRunner.And("I click continue button in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 465
 testRunner.Then("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 466
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T41_Restore a row for sample table in Form1 for Visit week2.")]
        public virtual void T41_RestoreARowForSampleTableInForm1ForVisitWeek2_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T41_Restore a row for sample table in Form1 for Visit week2.", null, ((string[])(null)));
#line 468
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 469
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 470
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 471
 testRunner.When("I expand row \"3\" of table \"Sample Table name updated:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 472
 testRunner.And("I click table row button \"Restore Row\" of table \"Sample Table name updated:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 473
 testRunner.And("I select reason for change \"DCF\" in RestoreTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 474
 testRunner.And("I enter additional notes \"Data Backup\" in RestoreTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 475
 testRunner.And("I click continue button in RestoreTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 476
 testRunner.Then("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 477
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T42_Verify Item change history for \"Sample Table:\" table in Form1 visit (Week 2)." +
            "")]
        public virtual void T42_VerifyItemChangeHistoryForSampleTableTableInForm1VisitWeek2_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T42_Verify Item change history for \"Sample Table:\" table in Form1 visit (Week 2)." +
                    "", null, ((string[])(null)));
#line 479
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 480
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 481
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 482
 testRunner.When("I invoke table hisotry for table \"Sample Table name updated:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table24 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table24.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Restored",
                        "DCF",
                        "Data Backup"});
            table24.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Deleted",
                        "DCF",
                        "Invalid Data"});
            table24.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 4: Added",
                        "",
                        ""});
            table24.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table24.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table24.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 483
    testRunner.Then("I see table history for table \"Sample Table name updated:\" in TableHistoryModalDi" +
                    "alog", ((string)(null)), table24, "Then ");
#line 491
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 492
 testRunner.Then("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T43_Navigate to DT1 Dt2 Form in visit (Week 7) event and Add row to the table.")]
        public virtual void T43_NavigateToDT1Dt2FormInVisitWeek7EventAndAddRowToTheTable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T43_Navigate to DT1 Dt2 Form in visit (Week 7) event and Add row to the table.", null, ((string[])(null)));
#line 494
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 495
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 496
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 497
 testRunner.When("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 498
 testRunner.And("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 499
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 500
 testRunner.And("I click on \"Add New Row\" button in \"LabId and Gorups:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 501
 testRunner.And("I click table row button \"Save & Close Row\" of table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 502
 testRunner.And("I click on \"Add New Row\" button in \"LabId and Gorups:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 503
 testRunner.And("I click table row button \"Save & Close Row\" of table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 504
 testRunner.And("I click on \"Add New Row\" button in \"LabId and Gorups:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 505
 testRunner.And("I click table row button \"Save & Close Row\" of table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 506
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 507
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T44_Navigate to DT1 Dt2 Form in visit (Week 7) event and delete a row.")]
        public virtual void T44_NavigateToDT1Dt2FormInVisitWeek7EventAndDeleteARow_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T44_Navigate to DT1 Dt2 Form in visit (Week 7) event and delete a row.", null, ((string[])(null)));
#line 509
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 510
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 511
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 512
 testRunner.And("I expand row \"2\" of table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 513
 testRunner.And("I click table row button \"Delete Row\" of table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 514
 testRunner.And("I select reason for change \"DCF\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 515
 testRunner.And("I enter additional notes \"Wrong Data\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 516
 testRunner.And("I click continue button in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 517
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 518
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T45_Verify the history for added rows and deleted rows on DT1 DT2 Form.")]
        public virtual void T45_VerifyTheHistoryForAddedRowsAndDeletedRowsOnDT1DT2Form_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T45_Verify the history for added rows and deleted rows on DT1 DT2 Form.", null, ((string[])(null)));
#line 520
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 521
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 522
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 523
 testRunner.When("I invoke table hisotry for table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table25 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table25.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Deleted",
                        "DCF",
                        "Wrong Data"});
            table25.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table25.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table25.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 524
    testRunner.Then("I see table history for table \"LabId and Gorups:\" in TableHistoryModalDialog", ((string)(null)), table25, "Then ");
#line 530
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 531
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T46_Navigate to DT1 Dt2 Form in visit (Week 7) event and Add row to the other tab" +
            "le.")]
        public virtual void T46_NavigateToDT1Dt2FormInVisitWeek7EventAndAddRowToTheOtherTable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T46_Navigate to DT1 Dt2 Form in visit (Week 7) event and Add row to the other tab" +
                    "le.", null, ((string[])(null)));
#line 533
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 534
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 535
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 536
 testRunner.When("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 537
 testRunner.And("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 538
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 539
 testRunner.And("I click on \"Add New Row\" button in \"Domain Test 2 Table:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 540
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Domain Test 2 Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 541
 testRunner.And("I click on \"Add New Row\" button in \"Domain Test 2 Table:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 542
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Domain Test 2 Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 543
 testRunner.And("I click on \"Add New Row\" button in \"Domain Test 2 Table:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 544
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Domain Test 2 Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 545
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 546
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T47_Verify the history for added rows and deleted rows on DT1 DT2 Form.")]
        public virtual void T47_VerifyTheHistoryForAddedRowsAndDeletedRowsOnDT1DT2Form_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T47_Verify the history for added rows and deleted rows on DT1 DT2 Form.", null, ((string[])(null)));
#line 548
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 549
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 550
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 551
 testRunner.When("I invoke table hisotry for table \"Domain Test 2 Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table26 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table26.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table26.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table26.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 552
    testRunner.Then("I see table history for table \"Domain Test 2 Table:\" in TableHistoryModalDialog", ((string)(null)), table26, "Then ");
#line 557
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 558
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T48_Navigate to AutoBuild Form01 in visit (Week 51) event Checkout and save the f" +
            "orm.")]
        public virtual void T48_NavigateToAutoBuildForm01InVisitWeek51EventCheckoutAndSaveTheForm_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T48_Navigate to AutoBuild Form01 in visit (Week 51) event Checkout and save the f" +
                    "orm.", null, ((string[])(null)));
#line 560
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 561
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 562
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 563
 testRunner.When("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 564
 testRunner.And("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 565
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 566
 testRunner.Then("I click on \"Save & Close\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 567
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T49_Verify the AutoBuild Form01 CRF tables history.")]
        public virtual void T49_VerifyTheAutoBuildForm01CRFTablesHistory_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T49_Verify the AutoBuild Form01 CRF tables history.", null, ((string[])(null)));
#line 569
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 570
 testRunner.Given("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 571
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 572
 testRunner.When("I invoke table hisotry for table \"Key Sequence on question #2. Table Structure is" +
                    " fixed. Maximum Rows is not exact. Questions (4-7) are derives.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table27 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table27.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 7: Added",
                        "",
                        ""});
            table27.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 6: Added",
                        "",
                        ""});
            table27.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 5: Added",
                        "",
                        ""});
            table27.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 4: Added",
                        "",
                        ""});
            table27.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table27.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table27.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 573
    testRunner.Then("I see table history for table \"Key Sequence on question #2. Table Structure is fi" +
                    "xed. Maximum Rows is not exact. Questions (4-7) are derives.:\" in TableHistoryMo" +
                    "dalDialog", ((string)(null)), table27, "Then ");
#line 582
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 583
 testRunner.When("I invoke table hisotry for table \"Key Sequence on question #1 & #3. Table Structu" +
                    "re is fixed. Maximum Rows is exact. Questions (4-7) have queries.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table28 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table28.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 6: Added",
                        "",
                        ""});
            table28.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 5: Added",
                        "",
                        ""});
            table28.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 4: Added",
                        "",
                        ""});
            table28.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table28.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table28.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 584
    testRunner.Then("I see table history for table \"Key Sequence on question #1 & #3. Table Structure " +
                    "is fixed. Maximum Rows is exact. Questions (4-7) have queries.:\" in TableHistory" +
                    "ModalDialog", ((string)(null)), table28, "Then ");
#line 592
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 593
 testRunner.Then("I click on \"Save & Close\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T50_Navigate to Form1 in visit (Week2) event and Add row to the table 03-PAT.")]
        public virtual void T50_NavigateToForm1InVisitWeek2EventAndAddRowToTheTable03_PAT_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T50_Navigate to Form1 in visit (Week2) event and Add row to the table 03-PAT.", null, ((string[])(null)));
#line 595
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 596
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 597
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 598
 testRunner.When("I select the patient \"03-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 599
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 600
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 601
 testRunner.And("I click on \"Add New Row\" button in \"Sample Table name updated:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 602
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Sample Table name updated:\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 603
 testRunner.And("I click on \"Add New Row\" button in \"Sample Table name updated:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 604
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Sample Table name updated:\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 605
 testRunner.And("I click on \"Add New Row\" button in \"Sample Table name updated:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 606
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Sample Table name updated:\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 607
 testRunner.And("I click on \"Add New Row\" button in \"Sample Table name updated:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 608
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Sample Table name updated:\"" +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 609
 testRunner.Then("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 610
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T51_Delete a row and Save and close the form in form1 week2 ssample table.")]
        public virtual void T51_DeleteARowAndSaveAndCloseTheFormInForm1Week2SsampleTable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T51_Delete a row and Save and close the form in form1 week2 ssample table.", null, ((string[])(null)));
#line 612
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 613
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 614
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 615
 testRunner.And("I expand row \"3\" of table \"Sample Table name updated:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 616
 testRunner.And("I click table row button \"Delete Row\" of table \"Sample Table name updated:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 617
 testRunner.And("I select reason for change \"DCF\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 618
 testRunner.And("I enter additional notes \"Invalid Data\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 619
 testRunner.And("I click continue button in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 620
 testRunner.Then("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 621
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T52_Restore a row for sample table in Form1 for Visit week2.")]
        public virtual void T52_RestoreARowForSampleTableInForm1ForVisitWeek2_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T52_Restore a row for sample table in Form1 for Visit week2.", null, ((string[])(null)));
#line 623
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 624
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 625
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 626
 testRunner.When("I expand row \"3\" of table \"Sample Table name updated:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 627
 testRunner.And("I click table row button \"Restore Row\" of table \"Sample Table name updated:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 628
 testRunner.And("I select reason for change \"DCF\" in RestoreTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 629
 testRunner.And("I enter additional notes \"Data Backup\" in RestoreTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 630
 testRunner.And("I click continue button in RestoreTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 631
 testRunner.Then("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 632
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T53_Verify Item change history for \"Sample Table:\" table in Form1 visit (Week 2)." +
            "")]
        public virtual void T53_VerifyItemChangeHistoryForSampleTableTableInForm1VisitWeek2_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T53_Verify Item change history for \"Sample Table:\" table in Form1 visit (Week 2)." +
                    "", null, ((string[])(null)));
#line 634
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 635
 testRunner.Given("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 636
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 637
 testRunner.When("I invoke table hisotry for table \"Sample Table name updated:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table29 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table29.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Restored",
                        "DCF",
                        "Data Backup"});
            table29.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Deleted",
                        "DCF",
                        "Invalid Data"});
            table29.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 4: Added",
                        "",
                        ""});
            table29.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table29.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table29.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 638
    testRunner.Then("I see table history for table \"Sample Table name updated:\" in TableHistoryModalDi" +
                    "alog", ((string)(null)), table29, "Then ");
#line 646
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 647
 testRunner.Then("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T54_Navigate to DT1 Dt2 Form in visit (Week 7) event and Add row to the table.")]
        public virtual void T54_NavigateToDT1Dt2FormInVisitWeek7EventAndAddRowToTheTable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T54_Navigate to DT1 Dt2 Form in visit (Week 7) event and Add row to the table.", null, ((string[])(null)));
#line 649
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 650
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 651
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 652
 testRunner.When("I select the patient \"03-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 653
 testRunner.And("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 654
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 655
 testRunner.And("I click on \"Add New Row\" button in \"LabId and Gorups:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 656
 testRunner.And("I click table row button \"Save & Close Row\" of table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 657
 testRunner.And("I click on \"Add New Row\" button in \"LabId and Gorups:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 658
 testRunner.And("I click table row button \"Save & Close Row\" of table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 659
 testRunner.And("I click on \"Add New Row\" button in \"LabId and Gorups:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 660
 testRunner.And("I click table row button \"Save & Close Row\" of table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 661
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 662
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T55_Navigate to DT1 Dt2 Form in visit (Week 7) event and delete a row.")]
        public virtual void T55_NavigateToDT1Dt2FormInVisitWeek7EventAndDeleteARow_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T55_Navigate to DT1 Dt2 Form in visit (Week 7) event and delete a row.", null, ((string[])(null)));
#line 664
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 665
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 666
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 667
 testRunner.And("I expand row \"2\" of table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 668
 testRunner.And("I click table row button \"Delete Row\" of table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 669
 testRunner.And("I select reason for change \"DCF\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 670
 testRunner.And("I enter additional notes \"Wrong Data\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 671
 testRunner.And("I click continue button in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 672
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 673
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T56_Verify the history for added rows and deleted rows on DT1 DT2 Form.")]
        public virtual void T56_VerifyTheHistoryForAddedRowsAndDeletedRowsOnDT1DT2Form_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T56_Verify the history for added rows and deleted rows on DT1 DT2 Form.", null, ((string[])(null)));
#line 675
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 676
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 677
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 678
 testRunner.When("I invoke table hisotry for table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table30 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table30.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Deleted",
                        "DCF",
                        "Wrong Data"});
            table30.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table30.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table30.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 679
    testRunner.Then("I see table history for table \"LabId and Gorups:\" in TableHistoryModalDialog", ((string)(null)), table30, "Then ");
#line 685
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 686
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T57_Navigate to DT1 Dt2 Form in visit (Week 7) event and Add row to the other tab" +
            "le.")]
        public virtual void T57_NavigateToDT1Dt2FormInVisitWeek7EventAndAddRowToTheOtherTable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T57_Navigate to DT1 Dt2 Form in visit (Week 7) event and Add row to the other tab" +
                    "le.", null, ((string[])(null)));
#line 688
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 689
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 690
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 691
 testRunner.When("I select the patient \"03-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 692
 testRunner.And("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 693
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 694
 testRunner.And("I click on \"Add New Row\" button in \"Domain Test 2 Table:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 695
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Domain Test 2 Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 696
 testRunner.And("I click on \"Add New Row\" button in \"Domain Test 2 Table:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 697
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Domain Test 2 Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 698
 testRunner.And("I click on \"Add New Row\" button in \"Domain Test 2 Table:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 699
 testRunner.And("I click table row button \"Save & Close Row\" of table \"Domain Test 2 Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 700
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 701
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T58_Verify the history for added rows and deleted rows on DT1 DT2 Form.")]
        public virtual void T58_VerifyTheHistoryForAddedRowsAndDeletedRowsOnDT1DT2Form_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T58_Verify the history for added rows and deleted rows on DT1 DT2 Form.", null, ((string[])(null)));
#line 703
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 704
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 705
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 706
 testRunner.When("I invoke table hisotry for table \"Domain Test 2 Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table31 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table31.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table31.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table31.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 707
    testRunner.Then("I see table history for table \"Domain Test 2 Table:\" in TableHistoryModalDialog", ((string)(null)), table31, "Then ");
#line 712
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 713
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T59_Navigate to AutoBuild Form01 in visit (Week 51) event Checkout and save the f" +
            "orm.")]
        public virtual void T59_NavigateToAutoBuildForm01InVisitWeek51EventCheckoutAndSaveTheForm_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T59_Navigate to AutoBuild Form01 in visit (Week 51) event Checkout and save the f" +
                    "orm.", null, ((string[])(null)));
#line 715
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 716
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 717
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 718
 testRunner.When("I select the patient \"03-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 719
 testRunner.And("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 720
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 721
 testRunner.Then("I click on \"Save & Close\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 722
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T60_Verify the AutoBuild Form01 CRF tables history.")]
        public virtual void T60_VerifyTheAutoBuildForm01CRFTablesHistory_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T60_Verify the AutoBuild Form01 CRF tables history.", null, ((string[])(null)));
#line 724
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 725
 testRunner.Given("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 726
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 727
 testRunner.When("I invoke table hisotry for table \"Key Sequence on question #2. Table Structure is" +
                    " fixed. Maximum Rows is not exact. Questions (4-7) are derives.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table32 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table32.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 7: Added",
                        "",
                        ""});
            table32.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 6: Added",
                        "",
                        ""});
            table32.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 5: Added",
                        "",
                        ""});
            table32.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 4: Added",
                        "",
                        ""});
            table32.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table32.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table32.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 728
    testRunner.Then("I see table history for table \"Key Sequence on question #2. Table Structure is fi" +
                    "xed. Maximum Rows is not exact. Questions (4-7) are derives.:\" in TableHistoryMo" +
                    "dalDialog", ((string)(null)), table32, "Then ");
#line 737
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 738
 testRunner.When("I invoke table hisotry for table \"Key Sequence on question #1 & #3. Table Structu" +
                    "re is fixed. Maximum Rows is exact. Questions (4-7) have queries.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table33 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table33.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 6: Added",
                        "",
                        ""});
            table33.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 5: Added",
                        "",
                        ""});
            table33.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 4: Added",
                        "",
                        ""});
            table33.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table33.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table33.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 739
    testRunner.Then("I see table history for table \"Key Sequence on question #1 & #3. Table Structure " +
                    "is fixed. Maximum Rows is exact. Questions (4-7) have queries.:\" in TableHistory" +
                    "ModalDialog", ((string)(null)), table33, "Then ");
#line 747
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 748
 testRunner.Then("I click on \"Save & Close\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T61_Update study with patient migration on add a question, delete a question, reo" +
            "rder a question and rename a question on a table.")]
        public virtual void T61_UpdateStudyWithPatientMigrationOnAddAQuestionDeleteAQuestionReorderAQuestionAndRenameAQuestionOnATable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T61_Update study with patient migration on add a question, delete a question, reo" +
                    "rder a question and rename a question on a table.", null, ((string[])(null)));
#line 750
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 751
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 752
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 753
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 754
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 755
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 756
 testRunner.And("I upload study \"Test4500_Added question, deleted ques and updated table order and" +
                    " reorder question V3.zip\" with Label \"V3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 757
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 758
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 759
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 760
 testRunner.And("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 761
 testRunner.And("I select \"Yes\" to reevaluate \"Change SD-Verify Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 762
 testRunner.And("I select \"Yes\" to reevaluate \"Change D-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 763
 testRunner.And("I select \"Yes\" to reevaluate \"Change M-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 764
 testRunner.And("I select \"Yes\" to reevaluate \"Change Signatures?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 765
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 766
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 767
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table34 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table34.AddRow(new string[] {
                        "Publishing of Study file (V3) - complete."});
#line 768
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table34, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T62_Navigate to site and migrate the patient from site(02-Site).")]
        public virtual void T62_NavigateToSiteAndMigrateThePatientFromSite02_Site_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T62_Navigate to site and migrate the patient from site(02-Site).", null, ((string[])(null)));
#line 772
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 773
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 774
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 775
 testRunner.And("I open site with siteid \"02\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 776
 testRunner.And("I click ActionPalette Item \"Migrate Patients\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table35 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table35.AddRow(new string[] {
                        "02-PAT"});
            table35.AddRow(new string[] {
                        "03-PAT"});
#line 777
 testRunner.And("I select patients in MigratePatientsPage", ((string)(null)), table35, "And ");
#line 781
 testRunner.And("I click save button in MigratePatientsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 782
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table36 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table36.AddRow(new string[] {
                        "Migration of Site 02 for Study file (V3) - complete. 2 out of 2 patients migrated" +
                            " successfully. To review see migration report."});
#line 783
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table36, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T63_Select 02-Site and  patient 02-PAT and verify the item history for Add questi" +
            "on, delete question, update question and Reorder a questions in table.")]
        public virtual void T63_Select02_SiteAndPatient02_PATAndVerifyTheItemHistoryForAddQuestionDeleteQuestionUpdateQuestionAndReorderAQuestionsInTable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T63_Select 02-Site and  patient 02-PAT and verify the item history for Add questi" +
                    "on, delete question, update question and Reorder a questions in table.", null, ((string[])(null)));
#line 787
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 788
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 789
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 790
 testRunner.When("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 791
 testRunner.Then("I see Patient details page for \"02-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T64_Verify the history for form1 in visit week2 on reorder the table questions.")]
        public virtual void T64_VerifyTheHistoryForForm1InVisitWeek2OnReorderTheTableQuestions_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T64_Verify the history for form1 in visit week2 on reorder the table questions.", null, ((string[])(null)));
#line 793
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 794
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 795
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 796
 testRunner.When("I select the patient \"02-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 797
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 798
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 799
 testRunner.When("I invoke table hisotry for table \"Sample Table name updated:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table37 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table37.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Restored",
                        "DCF",
                        "Data backup"});
            table37.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Deleted",
                        "DCF",
                        "Invalid Data"});
            table37.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 4: Added",
                        "",
                        ""});
            table37.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table37.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table37.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 800
    testRunner.Then("I see table history for table \"Sample Table name updated:\" in TableHistoryModalDi" +
                    "alog", ((string)(null)), table37, "Then ");
#line 808
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 809
 testRunner.Then("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T65_Verify the history for Added and deleted questions of a table in DT1 DT2 Form" +
            ".")]
        public virtual void T65_VerifyTheHistoryForAddedAndDeletedQuestionsOfATableInDT1DT2Form_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T65_Verify the history for Added and deleted questions of a table in DT1 DT2 Form" +
                    ".", null, ((string[])(null)));
#line 811
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 812
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 813
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 814
 testRunner.When("I invoke table hisotry for table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table38 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table38.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Deleted",
                        "DCF",
                        "Wrong Data"});
            table38.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table38.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table38.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 815
    testRunner.Then("I see table history for table \"LabId and Gorups:\" in TableHistoryModalDialog", ((string)(null)), table38, "Then ");
#line 821
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 822
 testRunner.When("I invoke table hisotry for table \"Domain Test 2 Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table39 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table39.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table39.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table39.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 823
    testRunner.Then("I see table history for table \"Domain Test 2 Table:\" in TableHistoryModalDialog", ((string)(null)), table39, "Then ");
#line 828
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 829
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T66_Verify the AutoBuild Form01 CRF tables history after patient migration.")]
        public virtual void T66_VerifyTheAutoBuildForm01CRFTablesHistoryAfterPatientMigration_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T66_Verify the AutoBuild Form01 CRF tables history after patient migration.", null, ((string[])(null)));
#line 831
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 832
 testRunner.Given("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 833
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 834
 testRunner.When("I invoke table hisotry for table \"Key Sequence on question #2. Table Structure is" +
                    " fixed. Maximum Rows is not exact. Questions (4-7) are derives.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table40 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table40.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 7: Added",
                        "",
                        ""});
            table40.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 6: Added",
                        "",
                        ""});
            table40.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 5: Added",
                        "",
                        ""});
            table40.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 4: Added",
                        "",
                        ""});
            table40.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table40.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table40.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 835
    testRunner.Then("I see table history for table \"Key Sequence on question #2. Table Structure is fi" +
                    "xed. Maximum Rows is not exact. Questions (4-7) are derives.:\" in TableHistoryMo" +
                    "dalDialog", ((string)(null)), table40, "Then ");
#line 844
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 845
 testRunner.When("I invoke table hisotry for table \"Key Sequence on question #1 & #3. Table Structu" +
                    "re is fixed. Maximum Rows is exact. Questions (4-7) have queries.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table41 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table41.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 6: Added",
                        "",
                        ""});
            table41.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 5: Added",
                        "",
                        ""});
            table41.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 4: Added",
                        "",
                        ""});
            table41.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table41.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table41.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 846
    testRunner.Then("I see table history for table \"Key Sequence on question #1 & #3. Table Structure " +
                    "is fixed. Maximum Rows is exact. Questions (4-7) have queries.:\" in TableHistory" +
                    "ModalDialog", ((string)(null)), table41, "Then ");
#line 854
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 855
 testRunner.Then("I click on \"Save & Close\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T67_Select 02-Site and  patient 03-PAT and verify the item history for Add questi" +
            "on, delete question, update question and Reorder a questions in table.")]
        public virtual void T67_Select02_SiteAndPatient03_PATAndVerifyTheItemHistoryForAddQuestionDeleteQuestionUpdateQuestionAndReorderAQuestionsInTable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T67_Select 02-Site and  patient 03-PAT and verify the item history for Add questi" +
                    "on, delete question, update question and Reorder a questions in table.", null, ((string[])(null)));
#line 857
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 858
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 859
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 860
 testRunner.When("I select the patient \"03-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 861
 testRunner.Then("I see Patient details page for \"03-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T68_Verify the history for form1 in visit week2 on reorder the table questions.")]
        public virtual void T68_VerifyTheHistoryForForm1InVisitWeek2OnReorderTheTableQuestions_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T68_Verify the history for form1 in visit week2 on reorder the table questions.", null, ((string[])(null)));
#line 863
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 864
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 865
 testRunner.And("I select the site \"02-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 866
 testRunner.When("I select the patient \"03-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 867
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 868
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 869
 testRunner.When("I invoke table hisotry for table \"Sample Table name updated:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table42 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table42.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Restored",
                        "DCF",
                        "Data backup"});
            table42.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Deleted",
                        "DCF",
                        "Invalid Data"});
            table42.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 4: Added",
                        "",
                        ""});
            table42.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table42.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table42.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 870
    testRunner.Then("I see table history for table \"Sample Table name updated:\" in TableHistoryModalDi" +
                    "alog", ((string)(null)), table42, "Then ");
#line 878
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 879
 testRunner.Then("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T69_Verify the history for Added and deleted questions of a table in DT1 DT2 Form" +
            ".")]
        public virtual void T69_VerifyTheHistoryForAddedAndDeletedQuestionsOfATableInDT1DT2Form_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T69_Verify the history for Added and deleted questions of a table in DT1 DT2 Form" +
                    ".", null, ((string[])(null)));
#line 881
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 882
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 883
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 884
 testRunner.When("I invoke table hisotry for table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table43 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table43.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Deleted",
                        "DCF",
                        "Wrong Data"});
            table43.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table43.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table43.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 885
    testRunner.Then("I see table history for table \"LabId and Gorups:\" in TableHistoryModalDialog", ((string)(null)), table43, "Then ");
#line 891
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 892
 testRunner.When("I invoke table hisotry for table \"Domain Test 2 Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table44 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table44.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table44.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table44.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 893
    testRunner.Then("I see table history for table \"Domain Test 2 Table:\" in TableHistoryModalDialog", ((string)(null)), table44, "Then ");
#line 898
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 899
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T70_Verify the AutoBuild Form01 CRF tables history after patient migration.")]
        public virtual void T70_VerifyTheAutoBuildForm01CRFTablesHistoryAfterPatientMigration_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T70_Verify the AutoBuild Form01 CRF tables history after patient migration.", null, ((string[])(null)));
#line 901
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 902
 testRunner.Given("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 903
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 904
 testRunner.When("I invoke table hisotry for table \"Key Sequence on question #2. Table Structure is" +
                    " fixed. Maximum Rows is not exact. Questions (4-7) are derives.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table45 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table45.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 7: Added",
                        "",
                        ""});
            table45.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 6: Added",
                        "",
                        ""});
            table45.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 5: Added",
                        "",
                        ""});
            table45.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 4: Added",
                        "",
                        ""});
            table45.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table45.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table45.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 905
    testRunner.Then("I see table history for table \"Key Sequence on question #2. Table Structure is fi" +
                    "xed. Maximum Rows is not exact. Questions (4-7) are derives.:\" in TableHistoryMo" +
                    "dalDialog", ((string)(null)), table45, "Then ");
#line 914
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 915
 testRunner.When("I invoke table hisotry for table \"Key Sequence on question #1 & #3. Table Structu" +
                    "re is fixed. Maximum Rows is exact. Questions (4-7) have queries.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table46 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table46.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 6: Added",
                        "",
                        ""});
            table46.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 5: Added",
                        "",
                        ""});
            table46.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 4: Added",
                        "",
                        ""});
            table46.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table46.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table46.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 916
    testRunner.Then("I see table history for table \"Key Sequence on question #1 & #3. Table Structure " +
                    "is fixed. Maximum Rows is exact. Questions (4-7) have queries.:\" in TableHistory" +
                    "ModalDialog", ((string)(null)), table46, "Then ");
#line 924
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 925
 testRunner.Then("I click on \"Save & Close\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T71_Initiate study archive for sites")]
        public virtual void T71_InitiateStudyArchiveForSites()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T71_Initiate study archive for sites", null, ((string[])(null)));
#line 927
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 928
       testRunner.When("I select DataManagerPortal item \"Export\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 929
       testRunner.And("I click link \"Archive Export\" in ExportPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table47 = new TechTalk.SpecFlow.Table(new string[] {
                        "Site"});
            table47.AddRow(new string[] {
                        "02-SIte"});
#line 930
       testRunner.And("I select sites in ArchiveExportPage", ((string)(null)), table47, "And ");
#line 933
       testRunner.And("I click Export button in ArchiveExportPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 934
       testRunner.Then("I click Continue button of Modal \"Archive Export\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T72_Download Archive Export zip folder")]
        public virtual void T72_DownloadArchiveExportZipFolder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T72_Download Archive Export zip folder", null, ((string[])(null)));
#line 936
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 937
 testRunner.When("I click main tab \"Inbox\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 938
 testRunner.And("I click inbox item \"Export (Archive): #2 - complete. Download file.\" in folder \"J" +
                    "obs\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 939
 testRunner.And("I download the file in the execution folder with name \"ArchiveExportFile2\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 940
 testRunner.Then("I see the file with name \"ArchiveExportFile2.zip\" in execution folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T73_Unzip a zip folder")]
        public virtual void T73_UnzipAZipFolder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T73_Unzip a zip folder", null, ((string[])(null)));
#line 942
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 943
 testRunner.When("I unzip folder \"ArchiveExportFile2.zip\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 944
 testRunner.Then("I see unzipped folder \"ArchiveExportFile2\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T74_Save the patient xml file in the execution folder")]
        public virtual void T74_SaveThePatientXmlFileInTheExecutionFolder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T74_Save the patient xml file in the execution folder", null, ((string[])(null)));
#line 946
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 947
 testRunner.When("I save the export file in the folder \"ArchiveExportFile2\\02\" containing \"02-PAT\" " +
                    "in the execution path with name \"ArchiveExportActual2.xml\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 948
 testRunner.Then("I have the XML file \"ArchiveExportActual2.xml\" available in the Test XML Files fo" +
                    "lder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T75_Verify the archive export XML Data for 01-Site with generated archive export " +
            "XML.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:Qc1654,QC1697")]
        public virtual void T75_VerifyTheArchiveExportXMLDataFor01_SiteWithGeneratedArchiveExportXML_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T75_Verify the archive export XML Data for 01-Site with generated archive export " +
                    "XML.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:Qc1654,QC1697"});
#line 951
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 952
 testRunner.Given("I have the XML file \"ArchiveExportExpected2.xml\" available in the project folder." +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 953
 testRunner.And("I have the XML file \"ArchiveExportActual2.xml\" available in the Result XML Files " +
                    "folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table48 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table48.AddRow(new string[] {
                        "DateTimeStamp",
                        "CreationDateTime"});
            table48.AddRow(new string[] {
                        "SignatureValue",
                        "SubjectKey"});
            table48.AddRow(new string[] {
                        "DigestValue",
                        "FileOID"});
            table48.AddRow(new string[] {
                        "SourceID",
                        "PriorFileOID"});
            table48.AddRow(new string[] {
                        "",
                        "Description"});
            table48.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
            table48.AddRow(new string[] {
                        "",
                        "dl:PatientFormQuestionKey"});
#line 954
 testRunner.Then("I verify that the data in both metadata XML files is same except for below fields" +
                    ".", ((string)(null)), table48, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T76_Initiate study archive for sites")]
        public virtual void T76_InitiateStudyArchiveForSites()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T76_Initiate study archive for sites", null, ((string[])(null)));
#line 964
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 965
     testRunner.When("I select DataManagerPortal item \"Export\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 966
     testRunner.And("I click link \"Archive Export\" in ExportPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table49 = new TechTalk.SpecFlow.Table(new string[] {
                        "Site"});
            table49.AddRow(new string[] {
                        "02-SIte"});
#line 967
     testRunner.And("I select sites in ArchiveExportPage", ((string)(null)), table49, "And ");
#line 970
     testRunner.And("I click Export button in ArchiveExportPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 971
     testRunner.Then("I click Continue button of Modal \"Archive Export\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T77_Download Archive Export zip folder")]
        public virtual void T77_DownloadArchiveExportZipFolder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T77_Download Archive Export zip folder", null, ((string[])(null)));
#line 973
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 974
 testRunner.When("I click main tab \"Inbox\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 975
 testRunner.And("I click inbox item \"Export (Archive): #3 - complete. Download file.\" in folder \"J" +
                    "obs\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 976
 testRunner.And("I download the file in the execution folder with name \"ArchiveExportFile3\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 977
 testRunner.Then("I see the file with name \"ArchiveExportFile3.zip\" in execution folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T78_Unzip a zip folder")]
        public virtual void T78_UnzipAZipFolder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T78_Unzip a zip folder", null, ((string[])(null)));
#line 979
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 980
 testRunner.When("I unzip folder \"ArchiveExportFile3.zip\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 981
 testRunner.Then("I see unzipped folder \"ArchiveExportFile3\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T79_Save the patient xml file in the execution folder")]
        public virtual void T79_SaveThePatientXmlFileInTheExecutionFolder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T79_Save the patient xml file in the execution folder", null, ((string[])(null)));
#line 983
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 984
 testRunner.When("I save the export file in the folder \"ArchiveExportFile3\\02\" containing \"03-PAT\" " +
                    "in the execution path with name \"ArchiveExportActual3.xml\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 985
 testRunner.Then("I have the XML file \"ArchiveExportActual3.xml\" available in the Test XML Files fo" +
                    "lder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T80_Verify the archive export XML Data for 01-Site with generated archive export " +
            "XML.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:Qc1654,QC1697")]
        public virtual void T80_VerifyTheArchiveExportXMLDataFor01_SiteWithGeneratedArchiveExportXML_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T80_Verify the archive export XML Data for 01-Site with generated archive export " +
                    "XML.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:Qc1654,QC1697"});
#line 988
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 989
 testRunner.Given("I have the XML file \"ArchiveExportExpected3.xml\" available in the project folder." +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 990
 testRunner.And("I have the XML file \"ArchiveExportActual3.xml\" available in the Result XML Files " +
                    "folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table50 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table50.AddRow(new string[] {
                        "DateTimeStamp",
                        "CreationDateTime"});
            table50.AddRow(new string[] {
                        "SignatureValue",
                        "SubjectKey"});
            table50.AddRow(new string[] {
                        "DigestValue",
                        "FileOID"});
            table50.AddRow(new string[] {
                        "SourceID",
                        "PriorFileOID"});
            table50.AddRow(new string[] {
                        "",
                        "Description"});
            table50.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
            table50.AddRow(new string[] {
                        "",
                        "dl:PatientFormQuestionKey"});
#line 991
 testRunner.Then("I verify that the data in both metadata XML files is same except for below fields" +
                    ".", ((string)(null)), table50, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T81_Navigate to DT1 Dt2 Form in visit (Week 7) event and Add row to the table.")]
        public virtual void T81_NavigateToDT1Dt2FormInVisitWeek7EventAndAddRowToTheTable_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T81_Navigate to DT1 Dt2 Form in visit (Week 7) event and Add row to the table.", null, ((string[])(null)));
#line 1001
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1002
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1003
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1004
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1005
 testRunner.And("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1006
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1007
 testRunner.And("I click on \"Add New Row\" button in \"LabId and Gorups:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1008
 testRunner.And("I click table row button \"Save & Close Row\" of table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1009
 testRunner.And("I click on \"Add New Row\" button in \"LabId and Gorups:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1010
 testRunner.And("I click table row button \"Save & Close Row\" of table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1011
 testRunner.And("I click on \"Add New Row\" button in \"LabId and Gorups:\" table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1012
 testRunner.And("I click table row button \"Save & Close Row\" of table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1013
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1014
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T82_Navigate to DT1 Dt2 Form in visit (Week 7) event and delete a row.")]
        public virtual void T82_NavigateToDT1Dt2FormInVisitWeek7EventAndDeleteARow_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T82_Navigate to DT1 Dt2 Form in visit (Week 7) event and delete a row.", null, ((string[])(null)));
#line 1016
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1017
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1018
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1019
 testRunner.And("I expand row \"2\" of table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1020
 testRunner.And("I click table row button \"Delete Row\" of table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1021
 testRunner.And("I select reason for change \"DCF\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1022
 testRunner.And("I enter additional notes \"Wrong Data\" in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1023
 testRunner.And("I click continue button in DeleteTableRowModalDialog", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1024
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 1025
 testRunner.Then("The CRF with data is saved and checked-in successfully.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T83_Verify the history for added rows and deleted rows on DT1 DT2 Form.")]
        public virtual void T83_VerifyTheHistoryForAddedRowsAndDeletedRowsOnDT1DT2Form_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T83_Verify the history for added rows and deleted rows on DT1 DT2 Form.", null, ((string[])(null)));
#line 1027
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1028
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1029
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1030
 testRunner.When("I invoke table hisotry for table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table51 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table51.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Deleted",
                        "DCF",
                        "Wrong Data"});
            table51.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table51.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table51.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
            table51.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Deleted",
                        "DCF",
                        "Wrong Data"});
            table51.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table51.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table51.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 1031
    testRunner.Then("I see table history for table \"LabId and Gorups:\" in TableHistoryModalDialog", ((string)(null)), table51, "Then ");
#line 1041
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1042
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T84_Navigate to site and migrate the patient from site(01-Site).")]
        public virtual void T84_NavigateToSiteAndMigrateThePatientFromSite01_Site_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T84_Navigate to site and migrate the patient from site(01-Site).", null, ((string[])(null)));
#line 1044
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1045
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1046
 testRunner.And("I click Link \"Site Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1047
 testRunner.And("I open site with siteid \"01\" and site name \"Site\" from SiteManagement page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1048
 testRunner.And("I click ActionPalette Item \"Migrate Patients\" in \"SiteActions\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table52 = new TechTalk.SpecFlow.Table(new string[] {
                        "PatientID"});
            table52.AddRow(new string[] {
                        "01-PAT"});
#line 1049
 testRunner.And("I select patients in MigratePatientsPage", ((string)(null)), table52, "And ");
#line 1052
 testRunner.And("I click save button in MigratePatientsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1053
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table53 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table53.AddRow(new string[] {
                        "Migration of Site 01 for Study file (V3) - complete. 1 out of 1 patients migrated" +
                            " successfully. To review see migration report."});
#line 1054
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table53, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T85_Update study with patient migration With")]
        public virtual void T85_UpdateStudyWithPatientMigrationWith()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T85_Update study with patient migration With", null, ((string[])(null)));
#line 1058
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1059
 testRunner.When("I select DataManagerPortal item \"Study Administration\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1060
 testRunner.And("I click Link \"Study Management\" In StudyAdministrationPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1061
 testRunner.And("I click ActionPalette Item \"Manage Versions\" in \"StudyResetAction\" ActionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1062
 testRunner.And("I click ActionPalette Item \"Upload Study File\" in \"StudyVersionMgmtListActions\" A" +
                    "ctionPalette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1063
 testRunner.And("I click browse button in upload study file page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1064
 testRunner.And("I upload study \"Test4500_structure fixed to open and normal to table and vice ver" +
                    "sa V4.zip\" with Label \"V4\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1065
 testRunner.And("I open study which has \"Uploaded\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1066
 testRunner.And("I click ActionPalette Item \"Stage\" in \"StudyVersionPropertiesActions\" ActionPalet" +
                    "te", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1067
 testRunner.And("I open study which has \"Staged\" status", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1068
 testRunner.And("I click ActionPalette Item \"Publish\" in \"StudyVersionPropertiesActions\" ActionPal" +
                    "ette", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1069
 testRunner.And("I select \"Yes\" to reevaluate \"Change SD-Verify Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1070
 testRunner.And("I select \"Yes\" to reevaluate \"Change D-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1071
 testRunner.And("I select \"Yes\" to reevaluate \"Change M-Review Flags?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1072
 testRunner.And("I select \"Yes\" to reevaluate \"Change Signatures?\" in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1073
 testRunner.And("I clicked Continue button in PublishStudyFlagsPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1074
 testRunner.And("I select patient migration option \"Migrate all patients\" in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1075
 testRunner.And("I click Publish button in PublishStudyPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1076
 testRunner.And("I navigate to \"Inbox\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table54 = new TechTalk.SpecFlow.Table(new string[] {
                        "Subject"});
            table54.AddRow(new string[] {
                        "Migration of Site 02 for Study file (V4) - complete. 2 out of 2 patients migrated" +
                            " successfully. To review see migration report."});
            table54.AddRow(new string[] {
                        "Migration of Site 01 for Study file (V4) - complete. 1 out of 1 patients migrated" +
                            " successfully. To review see migration report."});
            table54.AddRow(new string[] {
                        "Publishing of Study file (V4) - complete."});
#line 1077
 testRunner.Then("I check subjects in inbox folder \"Jobs\"", ((string)(null)), table54, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T86_Select 01-Site and  patient 01-PAT and verify the item history for autobuild " +
            "table structure fixed to open and update a table question to normal question and" +
            " normal question to table question.")]
        public virtual void T86_Select01_SiteAndPatient01_PATAndVerifyTheItemHistoryForAutobuildTableStructureFixedToOpenAndUpdateATableQuestionToNormalQuestionAndNormalQuestionToTableQuestion_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T86_Select 01-Site and  patient 01-PAT and verify the item history for autobuild " +
                    "table structure fixed to open and update a table question to normal question and" +
                    " normal question to table question.", null, ((string[])(null)));
#line 1083
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1084
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1085
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1086
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1087
 testRunner.Then("I see Patient details page for \"01-PAT\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T87_Verify the history for form1 in visit week2 on reorder the table questions.")]
        public virtual void T87_VerifyTheHistoryForForm1InVisitWeek2OnReorderTheTableQuestions_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T87_Verify the history for form1 in visit week2 on reorder the table questions.", null, ((string[])(null)));
#line 1089
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1090
 testRunner.Given("I navigate to \"Patients\" tab from main menu.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1091
 testRunner.And("I select the site \"01-Site\" from Sites dropdown.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1092
 testRunner.When("I select the patient \"01-PAT\" from patients table.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1093
 testRunner.And("I expand \"Visit (Week 2)\" to select and open \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1094
 testRunner.When("I click \"Checkout\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1095
 testRunner.When("I invoke table hisotry for table \"Sample Table name updated:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table55 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table55.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Restored",
                        "DCF",
                        "Data backup"});
            table55.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Deleted",
                        "DCF",
                        "Invalid Data"});
            table55.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 4: Added",
                        "",
                        ""});
            table55.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table55.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table55.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 1096
    testRunner.Then("I see table history for table \"Sample Table name updated:\" in TableHistoryModalDi" +
                    "alog", ((string)(null)), table55, "Then ");
#line 1104
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1105
 testRunner.Then("I click on \"Save & Close\" button on \"Form1\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T88_Verify the history for updating normal question to table and table question t" +
            "o normal question in DT1 DT2 Form.")]
        public virtual void T88_VerifyTheHistoryForUpdatingNormalQuestionToTableAndTableQuestionToNormalQuestionInDT1DT2Form_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T88_Verify the history for updating normal question to table and table question t" +
                    "o normal question in DT1 DT2 Form.", null, ((string[])(null)));
#line 1107
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1108
 testRunner.Given("I expand \"Visit (Week 7)\" to select and open \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1109
 testRunner.When("I click \"Checkout\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1110
 testRunner.When("I invoke table hisotry for table \"LabId and Gorups:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table56 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table56.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Deleted",
                        "DCF",
                        "Wrong Data"});
            table56.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table56.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table56.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
            table56.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Deleted",
                        "DCF",
                        "Wrong Data"});
            table56.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table56.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table56.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 1111
    testRunner.Then("I see table history for table \"LabId and Gorups:\" in TableHistoryModalDialog", ((string)(null)), table56, "Then ");
#line 1121
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1122
 testRunner.When("I invoke table hisotry for table \"Domain Test 2 Table:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table57 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table57.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table57.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table57.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 1123
    testRunner.Then("I see table history for table \"Domain Test 2 Table:\" in TableHistoryModalDialog", ((string)(null)), table57, "Then ");
#line 1128
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1129
 testRunner.Then("I click on \"Save & Close\" button on \"DT1 DT2 Form\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T89_Verify the AutoBuild Form01 CRF tables history.")]
        public virtual void T89_VerifyTheAutoBuildForm01CRFTablesHistory_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T89_Verify the AutoBuild Form01 CRF tables history.", null, ((string[])(null)));
#line 1131
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1132
 testRunner.Given("I expand \"Visit (Week 51)\" to select and open \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1133
 testRunner.When("I click \"Checkout\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1134
 testRunner.When("I invoke table hisotry for table \"Key Sequence on question #2. Table Structure is" +
                    " fixed. Maximum Rows is not exact. Questions (4-7) are derives.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table58 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table58.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 7: Added",
                        "",
                        ""});
            table58.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 6: Added",
                        "",
                        ""});
            table58.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 5: Added",
                        "",
                        ""});
            table58.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 4: Added",
                        "",
                        ""});
            table58.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table58.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table58.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 1135
    testRunner.Then("I see table history for table \"Key Sequence on question #2. Table Structure is fi" +
                    "xed. Maximum Rows is not exact. Questions (4-7) are derives.:\" in TableHistoryMo" +
                    "dalDialog", ((string)(null)), table58, "Then ");
#line 1144
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1145
 testRunner.When("I invoke table hisotry for table \"Key Sequence on question #1 & #3. Table Structu" +
                    "re is fixed. Maximum Rows is exact. Questions (4-7) have queries.:\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
            TechTalk.SpecFlow.Table table59 = new TechTalk.SpecFlow.Table(new string[] {
                        "Name",
                        "Server Time",
                        "Action",
                        "reason",
                        "Additional Notes"});
            table59.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 6: Added",
                        "",
                        ""});
            table59.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 5: Added",
                        "",
                        ""});
            table59.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 4: Added",
                        "",
                        ""});
            table59.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 3: Added",
                        "",
                        ""});
            table59.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 2: Added",
                        "",
                        ""});
            table59.AddRow(new string[] {
                        "testadmin testadmin (EDCDEV\\testadmin)",
                        "",
                        "Row # 1: Added",
                        "",
                        ""});
#line 1146
    testRunner.Then("I see table history for table \"Key Sequence on question #1 & #3. Table Structure " +
                    "is fixed. Maximum Rows is exact. Questions (4-7) have queries.:\" in TableHistory" +
                    "ModalDialog", ((string)(null)), table59, "Then ");
#line 1154
 testRunner.And("I click cancel button in ChangeHistoryModal", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1155
 testRunner.Then("I click on \"Save & Close\" button on \"AutoBuild Form01\" CRF.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T90_Initiate study archive for sites")]
        public virtual void T90_InitiateStudyArchiveForSites()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T90_Initiate study archive for sites", null, ((string[])(null)));
#line 1157
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1158
     testRunner.When("I select DataManagerPortal item \"Export\" from drop down", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1159
     testRunner.And("I click link \"Archive Export\" in ExportPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table60 = new TechTalk.SpecFlow.Table(new string[] {
                        "Site"});
            table60.AddRow(new string[] {
                        "01-SIte"});
#line 1160
     testRunner.And("I select sites in ArchiveExportPage", ((string)(null)), table60, "And ");
#line 1163
  testRunner.And("I click Export button in ArchiveExportPage", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1164
     testRunner.Then("I click Continue button of Modal \"Archive Export\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T91_Download Archive Export zip folder")]
        public virtual void T91_DownloadArchiveExportZipFolder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T91_Download Archive Export zip folder", null, ((string[])(null)));
#line 1166
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1167
 testRunner.When("I click main tab \"Inbox\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1168
 testRunner.And("I click inbox item \"Export (Archive): #4 - complete. Download file.\" in folder \"J" +
                    "obs\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1169
 testRunner.And("I download the file in the execution folder with name \"ArchiveExportFile4\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 1170
 testRunner.Then("I see the file with name \"ArchiveExportFile4.zip\" in execution folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T92_Unzip a zip folder")]
        public virtual void T92_UnzipAZipFolder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T92_Unzip a zip folder", null, ((string[])(null)));
#line 1172
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1173
 testRunner.When("I unzip folder \"ArchiveExportFile4.zip\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1174
 testRunner.Then("I see unzipped folder \"ArchiveExportFile4\"", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T93_Save the patient xml file in the execution folder")]
        public virtual void T93_SaveThePatientXmlFileInTheExecutionFolder()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T93_Save the patient xml file in the execution folder", null, ((string[])(null)));
#line 1176
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1177
 testRunner.When("I save the export file in the folder \"ArchiveExportFile4\\01\" containing \"01-PAT\" " +
                    "in the execution path with name \"ArchiveExportActual4.xml\".", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1178
 testRunner.Then("I have the XML file \"ArchiveExportActual4.xml\" available in the Test XML Files fo" +
                    "lder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T94_Verify the archive export XML Data for 01-Site with generated archive export " +
            "XML.")]
        [NUnit.Framework.CategoryAttribute("ObjectiveEvidence")]
        [NUnit.Framework.CategoryAttribute("ReqID:Qc1654,QC1697")]
        public virtual void T94_VerifyTheArchiveExportXMLDataFor01_SiteWithGeneratedArchiveExportXML_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T94_Verify the archive export XML Data for 01-Site with generated archive export " +
                    "XML.", null, new string[] {
                        "ObjectiveEvidence",
                        "ReqID:Qc1654,QC1697"});
#line 1181
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1182
 testRunner.Given("I have the XML file \"ArchiveExportExpected4.xml\" available in the project folder." +
                    "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 1183
 testRunner.And("I have the XML file \"ArchiveExportActual4.xml\" available in the Result XML Files " +
                    "folder.", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            TechTalk.SpecFlow.Table table61 = new TechTalk.SpecFlow.Table(new string[] {
                        "TagName",
                        "FieldName"});
            table61.AddRow(new string[] {
                        "DateTimeStamp",
                        "CreationDateTime"});
            table61.AddRow(new string[] {
                        "SignatureValue",
                        "SubjectKey"});
            table61.AddRow(new string[] {
                        "DigestValue",
                        "FileOID"});
            table61.AddRow(new string[] {
                        "SourceID",
                        "PriorFileOID"});
            table61.AddRow(new string[] {
                        "",
                        "Description"});
            table61.AddRow(new string[] {
                        "",
                        "SourceSystemVersion"});
            table61.AddRow(new string[] {
                        "",
                        "dl:PatientFormQuestionKey"});
#line 1184
 testRunner.Then("I verify that the data in both metadata XML files is same except for below fields" +
                    ".", ((string)(null)), table61, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("T95_Logout from Datalabs application.")]
        public virtual void T95_LogoutFromDatalabsApplication_()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("T95_Logout from Datalabs application.", null, ((string[])(null)));
#line 1194
this.ScenarioInitialize(scenarioInfo);
            this.ScenarioStart();
#line 1195
 testRunner.When("I clik logout of Datalabs", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 1196
 testRunner.Then("I see login page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion

